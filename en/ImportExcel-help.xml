<?xml version="1.0" encoding="utf-8"?>
<helpItems schema="maml" xmlns="http://msh">
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Add-ConditionalFormatting</command:name>
      <command:verb>Add</command:verb>
      <command:noun>ConditionalFormatting</command:noun>
      <maml:description>
        <maml:para>Adds conditional formatting to all or part of a worksheet.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Conditional formatting allows Excel to:</maml:para>
      <maml:para>* Mark cells with icons depending on their value</maml:para>
      <maml:para>* Show a databar whose length indicates the value or a two or three color scale where the color indicates the relative value</maml:para>
      <maml:para>* Change the color, font, or number format of cells which meet given criteria</maml:para>
      <maml:para>Add-ConditionalFormatting allows these parameters to be set; for fine tuning of the rules, the -PassThru switch will return the rule so that you can modify things which are specific to that type of rule, example, the values which correspond to each icon in an Icon-Set.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Add-ConditionalFormatting</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="Range">
          <maml:name>Address</maml:name>
          <maml:Description>
            <maml:para>A block of cells to format - you can use a named range with -Address $ws.names[1] or  $ws.cells["RangeName"]</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
          <maml:name>RuleType</maml:name>
          <maml:Description>
            <maml:para>A standard named-rule - Top / Bottom / Less than / Greater than / Contains etc.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">AboveAverage</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AboveOrEqualAverage</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BelowAverage</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BelowOrEqualAverage</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AboveStdDev</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BelowStdDev</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Bottom</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BottomPercent</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Top</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">TopPercent</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Last7Days</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LastMonth</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LastWeek</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">NextMonth</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">NextWeek</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ThisMonth</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ThisWeek</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Today</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Tomorrow</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Yesterday</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BeginsWith</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Between</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ContainsBlanks</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ContainsErrors</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ContainsText</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DuplicateValues</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">EndsWith</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Equal</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Expression</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">GreaterThan</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">GreaterThanOrEqual</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LessThan</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LessThanOrEqual</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">NotBetween</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">NotContains</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">NotContainsBlanks</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">NotContainsErrors</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">NotContainsText</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">NotEqual</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">UniqueValues</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ThreeColorScale</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">TwoColorScale</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ThreeIconSet</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">FourIconSet</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">FiveIconSet</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DataBar</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">eExcelConditionalFormattingRuleType</command:parameterValue>
          <dev:type>
            <maml:name>eExcelConditionalFormattingRuleType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
          <maml:name>ConditionValue</maml:name>
          <maml:Description>
            <maml:para>A value for the condition (for example 2000 if the test is 'lessthan 2000'; Formulas should begin with "=" )</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="none">
          <maml:name>ConditionValue2</maml:name>
          <maml:Description>
            <maml:para>A second value for the conditions like "Between X and Y"</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>WorkSheet</maml:name>
          <maml:Description>
            <maml:para>The worksheet where the format is to be applied</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ExcelWorksheet</command:parameterValue>
          <dev:type>
            <maml:name>ExcelWorksheet</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ForegroundColour, FontColor">
          <maml:name>ForegroundColor</maml:name>
          <maml:Description>
            <maml:para>Text color for matching objects</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Reverse</maml:name>
          <maml:Description>
            <maml:para>Use the Icon-Set in reverse order, or reverse the orders of Two- &amp; Three-Color Scales</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Background color for matching items</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BackgroundPattern</maml:name>
          <maml:Description>
            <maml:para>Background pattern for matching items</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Solid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Gray125</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Gray0625</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkVertical</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkHorizontal</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkDown</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkUp</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkGrid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkTrellis</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightVertical</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightHorizontal</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightDown</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightUp</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightGrid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightTrellis</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelFillStyle</command:parameterValue>
          <dev:type>
            <maml:name>ExcelFillStyle</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PatternColor</maml:name>
          <maml:Description>
            <maml:para>Secondary color when a background pattern requires it</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NumberFormat</maml:name>
          <maml:Description>
            <maml:para>Sets the numeric format for matching items</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Bold</maml:name>
          <maml:Description>
            <maml:para>Put matching items in bold face</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Italic</maml:name>
          <maml:Description>
            <maml:para>Put matching items in italic</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Underline</maml:name>
          <maml:Description>
            <maml:para>Underline matching items</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>StrikeThru</maml:name>
          <maml:Description>
            <maml:para>Strikethrough text of matching items</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>StopIfTrue</maml:name>
          <maml:Description>
            <maml:para>Prevent the processing of subsequent rules</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Priority</maml:name>
          <maml:Description>
            <maml:para>Set the sequence for rule processing</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PassThru</maml:name>
          <maml:Description>
            <maml:para>If specified pass the rule back to the caller to allow additional customization.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Add-ConditionalFormatting</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="Range">
          <maml:name>Address</maml:name>
          <maml:Description>
            <maml:para>A block of cells to format - you can use a named range with -Address $ws.names[1] or  $ws.cells["RangeName"]</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>WorkSheet</maml:name>
          <maml:Description>
            <maml:para>The worksheet where the format is to be applied</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ExcelWorksheet</command:parameterValue>
          <dev:type>
            <maml:name>ExcelWorksheet</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="DataBarColour">
          <maml:name>DataBarColor</maml:name>
          <maml:Description>
            <maml:para>Color for databar type charts</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Priority</maml:name>
          <maml:Description>
            <maml:para>Set the sequence for rule processing</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PassThru</maml:name>
          <maml:Description>
            <maml:para>If specified pass the rule back to the caller to allow additional customization.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Add-ConditionalFormatting</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="Range">
          <maml:name>Address</maml:name>
          <maml:Description>
            <maml:para>A block of cells to format - you can use a named range with -Address $ws.names[1] or  $ws.cells["RangeName"]</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>WorkSheet</maml:name>
          <maml:Description>
            <maml:para>The worksheet where the format is to be applied</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ExcelWorksheet</command:parameterValue>
          <dev:type>
            <maml:name>ExcelWorksheet</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ThreeIconsSet</maml:name>
          <maml:Description>
            <maml:para>One of the three-icon set types (e.g. Traffic Lights)</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Arrows</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ArrowsGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Flags</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Signs</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Symbols</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Symbols2</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">TrafficLights1</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">TrafficLights2</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">eExcelconditionalFormatting3IconsSetType</command:parameterValue>
          <dev:type>
            <maml:name>eExcelconditionalFormatting3IconsSetType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Reverse</maml:name>
          <maml:Description>
            <maml:para>Use the Icon-Set in reverse order, or reverse the orders of Two- &amp; Three-Color Scales</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Priority</maml:name>
          <maml:Description>
            <maml:para>Set the sequence for rule processing</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PassThru</maml:name>
          <maml:Description>
            <maml:para>If specified pass the rule back to the caller to allow additional customization.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Add-ConditionalFormatting</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="Range">
          <maml:name>Address</maml:name>
          <maml:Description>
            <maml:para>A block of cells to format - you can use a named range with -Address $ws.names[1] or  $ws.cells["RangeName"]</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>WorkSheet</maml:name>
          <maml:Description>
            <maml:para>The worksheet where the format is to be applied</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ExcelWorksheet</command:parameterValue>
          <dev:type>
            <maml:name>ExcelWorksheet</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FourIconsSet</maml:name>
          <maml:Description>
            <maml:para>A four-icon set name</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Arrows</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ArrowsGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Rating</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">RedToBlack</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">TrafficLights</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">eExcelconditionalFormatting4IconsSetType</command:parameterValue>
          <dev:type>
            <maml:name>eExcelconditionalFormatting4IconsSetType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Reverse</maml:name>
          <maml:Description>
            <maml:para>Use the Icon-Set in reverse order, or reverse the orders of Two- &amp; Three-Color Scales</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Priority</maml:name>
          <maml:Description>
            <maml:para>Set the sequence for rule processing</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PassThru</maml:name>
          <maml:Description>
            <maml:para>If specified pass the rule back to the caller to allow additional customization.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Add-ConditionalFormatting</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="Range">
          <maml:name>Address</maml:name>
          <maml:Description>
            <maml:para>A block of cells to format - you can use a named range with -Address $ws.names[1] or  $ws.cells["RangeName"]</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>WorkSheet</maml:name>
          <maml:Description>
            <maml:para>The worksheet where the format is to be applied</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ExcelWorksheet</command:parameterValue>
          <dev:type>
            <maml:name>ExcelWorksheet</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FiveIconsSet</maml:name>
          <maml:Description>
            <maml:para>A five-icon set name</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Arrows</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ArrowsGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Quarters</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Rating</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">eExcelconditionalFormatting5IconsSetType</command:parameterValue>
          <dev:type>
            <maml:name>eExcelconditionalFormatting5IconsSetType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Reverse</maml:name>
          <maml:Description>
            <maml:para>Use the Icon-Set in reverse order, or reverse the orders of Two- &amp; Three-Color Scales</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Priority</maml:name>
          <maml:Description>
            <maml:para>Set the sequence for rule processing</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PassThru</maml:name>
          <maml:Description>
            <maml:para>If specified pass the rule back to the caller to allow additional customization.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="Range">
        <maml:name>Address</maml:name>
        <maml:Description>
          <maml:para>A block of cells to format - you can use a named range with -Address $ws.names[1] or  $ws.cells["RangeName"]</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>WorkSheet</maml:name>
        <maml:Description>
          <maml:para>The worksheet where the format is to be applied</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelWorksheet</command:parameterValue>
        <dev:type>
          <maml:name>ExcelWorksheet</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
        <maml:name>RuleType</maml:name>
        <maml:Description>
          <maml:para>A standard named-rule - Top / Bottom / Less than / Greater than / Contains etc.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">eExcelConditionalFormattingRuleType</command:parameterValue>
        <dev:type>
          <maml:name>eExcelConditionalFormattingRuleType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ForegroundColour, FontColor">
        <maml:name>ForegroundColor</maml:name>
        <maml:Description>
          <maml:para>Text color for matching objects</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="DataBarColour">
        <maml:name>DataBarColor</maml:name>
        <maml:Description>
          <maml:para>Color for databar type charts</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ThreeIconsSet</maml:name>
        <maml:Description>
          <maml:para>One of the three-icon set types (e.g. Traffic Lights)</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">eExcelconditionalFormatting3IconsSetType</command:parameterValue>
        <dev:type>
          <maml:name>eExcelconditionalFormatting3IconsSetType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>FourIconsSet</maml:name>
        <maml:Description>
          <maml:para>A four-icon set name</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">eExcelconditionalFormatting4IconsSetType</command:parameterValue>
        <dev:type>
          <maml:name>eExcelconditionalFormatting4IconsSetType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>FiveIconsSet</maml:name>
        <maml:Description>
          <maml:para>A five-icon set name</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">eExcelconditionalFormatting5IconsSetType</command:parameterValue>
        <dev:type>
          <maml:name>eExcelconditionalFormatting5IconsSetType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Reverse</maml:name>
        <maml:Description>
          <maml:para>Use the Icon-Set in reverse order, or reverse the orders of Two- &amp; Three-Color Scales</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
        <maml:name>ConditionValue</maml:name>
        <maml:Description>
          <maml:para>A value for the condition (for example 2000 if the test is 'lessthan 2000'; Formulas should begin with "=" )</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="none">
        <maml:name>ConditionValue2</maml:name>
        <maml:Description>
          <maml:para>A second value for the conditions like "Between X and Y"</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BackgroundColor</maml:name>
        <maml:Description>
          <maml:para>Background color for matching items</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BackgroundPattern</maml:name>
        <maml:Description>
          <maml:para>Background pattern for matching items</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelFillStyle</command:parameterValue>
        <dev:type>
          <maml:name>ExcelFillStyle</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PatternColor</maml:name>
        <maml:Description>
          <maml:para>Secondary color when a background pattern requires it</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NumberFormat</maml:name>
        <maml:Description>
          <maml:para>Sets the numeric format for matching items</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Bold</maml:name>
        <maml:Description>
          <maml:para>Put matching items in bold face</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Italic</maml:name>
        <maml:Description>
          <maml:para>Put matching items in italic</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Underline</maml:name>
        <maml:Description>
          <maml:para>Underline matching items</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>StrikeThru</maml:name>
        <maml:Description>
          <maml:para>Strikethrough text of matching items</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>StopIfTrue</maml:name>
        <maml:Description>
          <maml:para>Prevent the processing of subsequent rules</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Priority</maml:name>
        <maml:Description>
          <maml:para>Set the sequence for rule processing</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PassThru</maml:name>
        <maml:Description>
          <maml:para>If specified pass the rule back to the caller to allow additional customization.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>PS\&gt; $excel = $avdata | Export-Excel -Path (Join-path $FilePath "\Machines.XLSX" ) -WorksheetName "Server Anti-Virus" -AutoSize -FreezeTopRow -AutoFilter -PassThru
     Add-ConditionalFormatting -WorkSheet $excel.Workbook.Worksheets[1] -Address "b2:b1048576" -ForeGroundColor "RED"     -RuleType ContainsText -ConditionValue "2003"
     Add-ConditionalFormatting -WorkSheet $excel.Workbook.Worksheets[1] -Address "i2:i1048576" -ForeGroundColor "RED"     -RuleType ContainsText -ConditionValue "Disabled"
     $excel.Workbook.Worksheets[1].Cells["D1:G1048576"].Style.Numberformat.Format = [cultureinfo]::CurrentCulture.DateTimeFormat.ShortDatePattern
     $excel.Workbook.Worksheets[1].Row(1).style.font.bold = $true
     $excel.Save() ; $excel.Dispose()</dev:code>
        <dev:remarks>
          <maml:para>Here Export-Excel is called with the -PassThru parameter, so the ExcelPackage object representing Machines.XLSX is stored in $Excel.The desired worksheet is selected, and then columns" B" and "I" are conditionally formatted (excluding the top row) to show red text if they contain "2003" or "Disabled" respectively.</maml:para>
          <maml:para>A fixed date format is then applied to columns D to G, and the top row is formatted.</maml:para>
          <maml:para>Finally the workbook is saved and the Excel package object is closed.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>PS\&gt; $r = Add-ConditionalFormatting -WorkSheet $excel.Workbook.Worksheets[1] -Range "B1:B100" -ThreeIconsSet Flags -Passthru
     $r.Reverse = $true ;   $r.Icon1.Type = "Num"; $r.Icon2.Type = "Num" ; $r.Icon2.value = 100 ; $r.Icon3.type = "Num" ;$r.Icon3.value = 1000</dev:code>
        <dev:remarks>
          <maml:para>Again Export-Excel has been called with -PassThru leaving a package object in $Excel.</maml:para>
          <maml:para>This time B1:B100 has been conditionally formatted with 3 icons, using the "Flags" Icon-Set.</maml:para>
          <maml:para>Add-ConditionalFormatting does not provide accessto every option in the formatting rule, so -PassThru has been used and the rule is modified to apply the flags in reverse order, and transitions between flags are set to 100 and 1000.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <dev:code>PS\&gt; Add-ConditionalFormatting -WorkSheet $sheet -Range "D2:D1048576" -DataBarColor Red</dev:code>
        <dev:remarks>
          <maml:para>This time $sheet holds an ExcelWorkshseet object and databars are added to column D, excluding the top row.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
        <dev:code>PS\&gt; Add-ConditionalFormatting -Address $worksheet.cells["FinishPosition"] -RuleType Equal -ConditionValue 1 -ForeGroundColor Purple -Bold -Priority 1 -StopIfTrue</dev:code>
        <dev:remarks>
          <maml:para>In this example a named range is used to select the cells where the condition should apply, and instead of specifying a sheet and range within the sheet as separate parameters, the cells where the format should apply are specified directly.</maml:para>
          <maml:para>If a cell in the "FinishPosition" range is 1, then the text is turned to Bold &amp; Purple.</maml:para>
          <maml:para>This rule is moved to first in the priority list, and where cells have a value of 1, no other rules will be processed.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 5 --------------------------</maml:title>
        <dev:code>PS\&gt; $excel = Get-ChildItem | Select-Object -Property Name,Length,LastWriteTime,CreationTime | Export-Excel "$env:temp\test43.xlsx" -PassThru -AutoSize
     $ws = $excel.Workbook.Worksheets["Sheet1"]
     $ws.Cells["E1"].Value = "SavedAt"
     $ws.Cells["F1"].Value = [datetime]::Now
     $ws.Cells["F1"].Style.Numberformat.Format = (Expand-NumberFormat -NumberFormat 'Date-Time')
     $lastRow = $ws.Dimension.End.Row
     Add-ConditionalFormatting -WorkSheet $ws -address "A2:A$Lastrow" -RuleType LessThan    -ConditionValue "A"  -ForeGroundColor Gray
     Add-ConditionalFormatting -WorkSheet $ws -address "B2:B$Lastrow" -RuleType GreaterThan -ConditionValue  1000000         -NumberFormat '#,###,,.00"M"'
     Add-ConditionalFormatting -WorkSheet $ws -address "C2:C$Lastrow" -RuleType GreaterThan -ConditionValue "=INT($F$1-7)"  -ForeGroundColor Green  -StopIfTrue
     Add-ConditionalFormatting -WorkSheet $ws -address "D2:D$Lastrow" -RuleType Equal       -ConditionValue "=C2"           -ForeGroundColor Blue   -StopIfTrue
     Close-ExcelPackage -Show $excel</dev:code>
        <dev:remarks>
          <maml:para>The first few lines of code export a list of file and directory names, sizes and dates to a spreadsheet.</maml:para>
          <maml:para>It puts the date of the export in cell F1.</maml:para>
          <maml:para>The first Conditional format changes the color of files and folders that begin with a ".", "_" or anything else which sorts before "A".</maml:para>
          <maml:para>The second Conditional format changes the Number format of numbers bigger than 1 million, for example 1,234,567,890 will dispay as "1,234.57M"</maml:para>
          <maml:para>The third highlights datestamps of files less than a week old when the export was run; the = is necessary in the condition value otherwise the rule will look for the the text INT($F$1-7), and the cell address for the date is fixed using the standard Excel $ notation.</maml:para>
          <maml:para>The final Conditional format looks for files which have not changed since they were created. Here the condition value is "=C2". The = sign means C2 is treated as a formula, not literal text. Unlike the file age, we want the cell used to change for each cell where the conditional format applies.</maml:para>
          <maml:para>The first cell in the conditional format range is D2, which is compared against C2, then D3 is compared against C3 and so on. A common mistake is to include the title row in the range and accidentally apply conditional formatting to it, or to begin the range at row 2 but use row 1 as the starting point for comparisons.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 6 --------------------------</maml:title>
        <dev:code>PS\&gt; Add-ConditionalFormatting  $ws.Cells["B:B"] GreaterThan 10000000 -Fore  Red -Stop -Pri 1</dev:code>
        <dev:remarks>
          <maml:para>This version shows the shortest syntax - the Address, Ruletype, and Conditionvalue can be identified from their position, and ForegroundColor, StopIfTrue and Priority can all be shortend.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Add-ExcelChart</command:name>
      <command:verb>Add</command:verb>
      <command:noun>ExcelChart</command:noun>
      <maml:description>
        <maml:para>Creates a chart in an existing Excel worksheet.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Creates a chart.</maml:para>
      <maml:para>It is possible to configure the type of chart, the range of X values (labels) and Y values, the title, the legend, the ranges for both axes, the format and position of the axes.</maml:para>
      <maml:para>Normally the command does not return anything, but if -passthru is specified the chart is returned so that it can be customized.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Add-ExcelChart</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Worksheet</maml:name>
          <maml:Description>
            <maml:para>An existing Sheet where the chart will be created.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ExcelWorksheet</command:parameterValue>
          <dev:type>
            <maml:name>ExcelWorksheet</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Title</maml:name>
          <maml:Description>
            <maml:para>The title for the chart.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ChartType</maml:name>
          <maml:Description>
            <maml:para>One of the built-in chart types, such as Pie, ClusteredColumn, Line etc. Defaults to "ColumnStacked".</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Area</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Line</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Pie</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Bubble</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnClustered3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnStacked3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnStacked1003D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarClustered3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarStacked3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarStacked1003D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineMarkers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineMarkersStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineMarkersStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PieOfPie</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PieExploded</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PieExploded3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarOfPie</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatterSmooth</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatterSmoothNoMarkers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatterLines</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatterLinesNoMarkers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AreaStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AreaStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AreaStacked3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AreaStacked1003D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DoughnutExploded</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">RadarMarkers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">RadarFilled</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Surface</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SurfaceWireframe</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SurfaceTopView</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SurfaceTopViewWireframe</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Bubble3DEffect</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">StockHLC</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">StockOHLC</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">StockVHLC</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">StockVOHLC</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderColClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderColStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderColStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderBarClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderBarStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderBarStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderCol</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeColClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeColStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeColStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeBarClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeBarStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeBarStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeCol</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidColClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidColStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidColStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidBarClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidBarStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidBarStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidCol</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatter</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Radar</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Doughnut</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Pie3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Line3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Column3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Area3D</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">eChartType</command:parameterValue>
          <dev:type>
            <maml:name>eChartType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>ColumnStacked</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ChartTrendLine</maml:name>
          <maml:Description>
            <maml:para>{{ Fill ChartTrendLine Description }}</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Exponential</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Linear</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Logarithmic</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MovingAvgerage</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Polynomial</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Power</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">eTrendLine[]</command:parameterValue>
          <dev:type>
            <maml:name>eTrendLine[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>XRange</maml:name>
          <maml:Description>
            <maml:para>The range of cells containing values for the X-Axis - usually labels.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>YRange</maml:name>
          <maml:Description>
            <maml:para>The range(s) of cells holding values for the Y-Axis - usually "data".</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Width</maml:name>
          <maml:Description>
            <maml:para>Width of the chart in Pixels; defaults to 500.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>500</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Height</maml:name>
          <maml:Description>
            <maml:para>Height of the chart in Pixels; defaults to 350.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>350</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Row</maml:name>
          <maml:Description>
            <maml:para>Row position of the top left corner of the chart. ) places at the top of the sheet, 1 below row 1 and so on.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RowOffSetPixels</maml:name>
          <maml:Description>
            <maml:para>Offset to position the chart by a fraction  of a row.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>10</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Column</maml:name>
          <maml:Description>
            <maml:para>Column position of the top left corner of the chart; 0 places at the edge of the sheet 1 to the right of column A and so on.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>6</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ColumnOffSetPixels</maml:name>
          <maml:Description>
            <maml:para>Offset to position the chart by a fraction of a column.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>5</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>LegendPosition</maml:name>
          <maml:Description>
            <maml:para>Location of the key, either left, right, top, bottom or TopRight.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Top</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Left</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Right</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Bottom</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">TopRight</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">eLegendPosition</command:parameterValue>
          <dev:type>
            <maml:name>eLegendPosition</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>LegendSize</maml:name>
          <maml:Description>
            <maml:para>Font size for the key.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>LegendBold</maml:name>
          <maml:Description>
            <maml:para>Sets the key in bold type.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoLegend</maml:name>
          <maml:Description>
            <maml:para>If specified, turns of display of the key. If you only have one data series it may be preferable to use the title to say what the chart is.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ShowCategory</maml:name>
          <maml:Description>
            <maml:para>Attaches a category label, in charts which support this.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ShowPercent</maml:name>
          <maml:Description>
            <maml:para>Attaches a percentage label, in charts which support this.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SeriesHeader</maml:name>
          <maml:Description>
            <maml:para>Specify explicit name(s) for the data series, which will appear in the legend/key. The contents of a cell can be specified in the from =Sheet9!Z10 .</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TitleBold</maml:name>
          <maml:Description>
            <maml:para>Sets the title in bold face.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TitleSize</maml:name>
          <maml:Description>
            <maml:para>Sets the point size for the title.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>XAxisTitleText</maml:name>
          <maml:Description>
            <maml:para>Specifies a title for the X-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>XAxisTitleBold</maml:name>
          <maml:Description>
            <maml:para>Sets the X-axis title in bold face.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>XAxisTitleSize</maml:name>
          <maml:Description>
            <maml:para>Sets the font size for the axis title.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>XAxisNumberformat</maml:name>
          <maml:Description>
            <maml:para>A number formatting string, like "#,##0.00", for numbers along the X-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>XMajorUnit</maml:name>
          <maml:Description>
            <maml:para>Spacing for the major gridlines / tick marks along the X-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>XMinorUnit</maml:name>
          <maml:Description>
            <maml:para>Spacing for the minor gridlines / tick marks along the X-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>XMaxValue</maml:name>
          <maml:Description>
            <maml:para>Maximum value for the scale along the X-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>XMinValue</maml:name>
          <maml:Description>
            <maml:para>Minimum value for the scale along the X-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>XAxisPosition</maml:name>
          <maml:Description>
            <maml:para>Position for the X-axis (Top or Bottom).</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Left</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Bottom</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Right</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Top</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">eAxisPosition</command:parameterValue>
          <dev:type>
            <maml:name>eAxisPosition</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>YAxisTitleText</maml:name>
          <maml:Description>
            <maml:para>Specifies a title for the Y-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>YAxisTitleBold</maml:name>
          <maml:Description>
            <maml:para>Sets the Y-axis title in bold face.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>YAxisTitleSize</maml:name>
          <maml:Description>
            <maml:para>Sets the font size for the Y-axis title</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>YAxisNumberformat</maml:name>
          <maml:Description>
            <maml:para>A number formatting string, like "#,##0.00", for numbers on the Y-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>YMajorUnit</maml:name>
          <maml:Description>
            <maml:para>Spacing for the major gridlines / tick marks on the Y-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>YMinorUnit</maml:name>
          <maml:Description>
            <maml:para>Spacing for the minor gridlines / tick marks on the Y-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>YMaxValue</maml:name>
          <maml:Description>
            <maml:para>Maximum value on the Y-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>YMinValue</maml:name>
          <maml:Description>
            <maml:para>Minimum value on the Y-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>YAxisPosition</maml:name>
          <maml:Description>
            <maml:para>Position for the Y-axis (Left or Right).</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Left</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Bottom</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Right</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Top</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">eAxisPosition</command:parameterValue>
          <dev:type>
            <maml:name>eAxisPosition</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PassThru</maml:name>
          <maml:Description>
            <maml:para>Add-Excel chart doesn't normally return anything, but if -PassThru is specified it returns the newly created chart to allow it to be fine tuned.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Add-ExcelChart</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotTable</maml:name>
          <maml:Description>
            <maml:para>Instead of specify X and Y ranges, get data from a PivotTable by passing a PivotTable Object.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ExcelPivotTable</command:parameterValue>
          <dev:type>
            <maml:name>ExcelPivotTable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Title</maml:name>
          <maml:Description>
            <maml:para>The title for the chart.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ChartType</maml:name>
          <maml:Description>
            <maml:para>One of the built-in chart types, such as Pie, ClusteredColumn, Line etc. Defaults to "ColumnStacked".</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Area</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Line</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Pie</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Bubble</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnClustered3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnStacked3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnStacked1003D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarClustered3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarStacked3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarStacked1003D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineMarkers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineMarkersStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineMarkersStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PieOfPie</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PieExploded</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PieExploded3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarOfPie</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatterSmooth</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatterSmoothNoMarkers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatterLines</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatterLinesNoMarkers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AreaStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AreaStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AreaStacked3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AreaStacked1003D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DoughnutExploded</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">RadarMarkers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">RadarFilled</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Surface</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SurfaceWireframe</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SurfaceTopView</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SurfaceTopViewWireframe</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Bubble3DEffect</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">StockHLC</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">StockOHLC</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">StockVHLC</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">StockVOHLC</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderColClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderColStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderColStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderBarClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderBarStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderBarStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderCol</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeColClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeColStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeColStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeBarClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeBarStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeBarStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeCol</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidColClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidColStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidColStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidBarClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidBarStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidBarStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidCol</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatter</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Radar</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Doughnut</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Pie3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Line3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Column3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Area3D</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">eChartType</command:parameterValue>
          <dev:type>
            <maml:name>eChartType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>ColumnStacked</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ChartTrendLine</maml:name>
          <maml:Description>
            <maml:para>{{ Fill ChartTrendLine Description }}</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Exponential</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Linear</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Logarithmic</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MovingAvgerage</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Polynomial</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Power</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">eTrendLine[]</command:parameterValue>
          <dev:type>
            <maml:name>eTrendLine[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>XRange</maml:name>
          <maml:Description>
            <maml:para>The range of cells containing values for the X-Axis - usually labels.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>YRange</maml:name>
          <maml:Description>
            <maml:para>The range(s) of cells holding values for the Y-Axis - usually "data".</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Width</maml:name>
          <maml:Description>
            <maml:para>Width of the chart in Pixels; defaults to 500.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>500</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Height</maml:name>
          <maml:Description>
            <maml:para>Height of the chart in Pixels; defaults to 350.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>350</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Row</maml:name>
          <maml:Description>
            <maml:para>Row position of the top left corner of the chart. ) places at the top of the sheet, 1 below row 1 and so on.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RowOffSetPixels</maml:name>
          <maml:Description>
            <maml:para>Offset to position the chart by a fraction  of a row.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>10</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Column</maml:name>
          <maml:Description>
            <maml:para>Column position of the top left corner of the chart; 0 places at the edge of the sheet 1 to the right of column A and so on.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>6</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ColumnOffSetPixels</maml:name>
          <maml:Description>
            <maml:para>Offset to position the chart by a fraction of a column.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>5</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>LegendPosition</maml:name>
          <maml:Description>
            <maml:para>Location of the key, either left, right, top, bottom or TopRight.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Top</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Left</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Right</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Bottom</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">TopRight</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">eLegendPosition</command:parameterValue>
          <dev:type>
            <maml:name>eLegendPosition</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>LegendSize</maml:name>
          <maml:Description>
            <maml:para>Font size for the key.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>LegendBold</maml:name>
          <maml:Description>
            <maml:para>Sets the key in bold type.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoLegend</maml:name>
          <maml:Description>
            <maml:para>If specified, turns of display of the key. If you only have one data series it may be preferable to use the title to say what the chart is.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ShowCategory</maml:name>
          <maml:Description>
            <maml:para>Attaches a category label, in charts which support this.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ShowPercent</maml:name>
          <maml:Description>
            <maml:para>Attaches a percentage label, in charts which support this.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SeriesHeader</maml:name>
          <maml:Description>
            <maml:para>Specify explicit name(s) for the data series, which will appear in the legend/key. The contents of a cell can be specified in the from =Sheet9!Z10 .</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TitleBold</maml:name>
          <maml:Description>
            <maml:para>Sets the title in bold face.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TitleSize</maml:name>
          <maml:Description>
            <maml:para>Sets the point size for the title.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>XAxisTitleText</maml:name>
          <maml:Description>
            <maml:para>Specifies a title for the X-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>XAxisTitleBold</maml:name>
          <maml:Description>
            <maml:para>Sets the X-axis title in bold face.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>XAxisTitleSize</maml:name>
          <maml:Description>
            <maml:para>Sets the font size for the axis title.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>XAxisNumberformat</maml:name>
          <maml:Description>
            <maml:para>A number formatting string, like "#,##0.00", for numbers along the X-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>XMajorUnit</maml:name>
          <maml:Description>
            <maml:para>Spacing for the major gridlines / tick marks along the X-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>XMinorUnit</maml:name>
          <maml:Description>
            <maml:para>Spacing for the minor gridlines / tick marks along the X-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>XMaxValue</maml:name>
          <maml:Description>
            <maml:para>Maximum value for the scale along the X-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>XMinValue</maml:name>
          <maml:Description>
            <maml:para>Minimum value for the scale along the X-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>XAxisPosition</maml:name>
          <maml:Description>
            <maml:para>Position for the X-axis (Top or Bottom).</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Left</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Bottom</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Right</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Top</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">eAxisPosition</command:parameterValue>
          <dev:type>
            <maml:name>eAxisPosition</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>YAxisTitleText</maml:name>
          <maml:Description>
            <maml:para>Specifies a title for the Y-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>YAxisTitleBold</maml:name>
          <maml:Description>
            <maml:para>Sets the Y-axis title in bold face.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>YAxisTitleSize</maml:name>
          <maml:Description>
            <maml:para>Sets the font size for the Y-axis title</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>YAxisNumberformat</maml:name>
          <maml:Description>
            <maml:para>A number formatting string, like "#,##0.00", for numbers on the Y-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>YMajorUnit</maml:name>
          <maml:Description>
            <maml:para>Spacing for the major gridlines / tick marks on the Y-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>YMinorUnit</maml:name>
          <maml:Description>
            <maml:para>Spacing for the minor gridlines / tick marks on the Y-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>YMaxValue</maml:name>
          <maml:Description>
            <maml:para>Maximum value on the Y-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>YMinValue</maml:name>
          <maml:Description>
            <maml:para>Minimum value on the Y-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>YAxisPosition</maml:name>
          <maml:Description>
            <maml:para>Position for the Y-axis (Left or Right).</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Left</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Bottom</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Right</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Top</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">eAxisPosition</command:parameterValue>
          <dev:type>
            <maml:name>eAxisPosition</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PassThru</maml:name>
          <maml:Description>
            <maml:para>Add-Excel chart doesn't normally return anything, but if -PassThru is specified it returns the newly created chart to allow it to be fine tuned.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Worksheet</maml:name>
        <maml:Description>
          <maml:para>An existing Sheet where the chart will be created.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelWorksheet</command:parameterValue>
        <dev:type>
          <maml:name>ExcelWorksheet</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PivotTable</maml:name>
        <maml:Description>
          <maml:para>Instead of specify X and Y ranges, get data from a PivotTable by passing a PivotTable Object.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelPivotTable</command:parameterValue>
        <dev:type>
          <maml:name>ExcelPivotTable</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Title</maml:name>
        <maml:Description>
          <maml:para>The title for the chart.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ChartType</maml:name>
        <maml:Description>
          <maml:para>One of the built-in chart types, such as Pie, ClusteredColumn, Line etc. Defaults to "ColumnStacked".</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">eChartType</command:parameterValue>
        <dev:type>
          <maml:name>eChartType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>ColumnStacked</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ChartTrendLine</maml:name>
        <maml:Description>
          <maml:para>{{ Fill ChartTrendLine Description }}</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">eTrendLine[]</command:parameterValue>
        <dev:type>
          <maml:name>eTrendLine[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>XRange</maml:name>
        <maml:Description>
          <maml:para>The range of cells containing values for the X-Axis - usually labels.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>YRange</maml:name>
        <maml:Description>
          <maml:para>The range(s) of cells holding values for the Y-Axis - usually "data".</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Width</maml:name>
        <maml:Description>
          <maml:para>Width of the chart in Pixels; defaults to 500.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>500</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Height</maml:name>
        <maml:Description>
          <maml:para>Height of the chart in Pixels; defaults to 350.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>350</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Row</maml:name>
        <maml:Description>
          <maml:para>Row position of the top left corner of the chart. ) places at the top of the sheet, 1 below row 1 and so on.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>RowOffSetPixels</maml:name>
        <maml:Description>
          <maml:para>Offset to position the chart by a fraction  of a row.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>10</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Column</maml:name>
        <maml:Description>
          <maml:para>Column position of the top left corner of the chart; 0 places at the edge of the sheet 1 to the right of column A and so on.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>6</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ColumnOffSetPixels</maml:name>
        <maml:Description>
          <maml:para>Offset to position the chart by a fraction of a column.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>5</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>LegendPosition</maml:name>
        <maml:Description>
          <maml:para>Location of the key, either left, right, top, bottom or TopRight.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">eLegendPosition</command:parameterValue>
        <dev:type>
          <maml:name>eLegendPosition</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>LegendSize</maml:name>
        <maml:Description>
          <maml:para>Font size for the key.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>LegendBold</maml:name>
        <maml:Description>
          <maml:para>Sets the key in bold type.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NoLegend</maml:name>
        <maml:Description>
          <maml:para>If specified, turns of display of the key. If you only have one data series it may be preferable to use the title to say what the chart is.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ShowCategory</maml:name>
        <maml:Description>
          <maml:para>Attaches a category label, in charts which support this.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ShowPercent</maml:name>
        <maml:Description>
          <maml:para>Attaches a percentage label, in charts which support this.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SeriesHeader</maml:name>
        <maml:Description>
          <maml:para>Specify explicit name(s) for the data series, which will appear in the legend/key. The contents of a cell can be specified in the from =Sheet9!Z10 .</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>TitleBold</maml:name>
        <maml:Description>
          <maml:para>Sets the title in bold face.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>TitleSize</maml:name>
        <maml:Description>
          <maml:para>Sets the point size for the title.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>XAxisTitleText</maml:name>
        <maml:Description>
          <maml:para>Specifies a title for the X-axis.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>XAxisTitleBold</maml:name>
        <maml:Description>
          <maml:para>Sets the X-axis title in bold face.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>XAxisTitleSize</maml:name>
        <maml:Description>
          <maml:para>Sets the font size for the axis title.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>XAxisNumberformat</maml:name>
        <maml:Description>
          <maml:para>A number formatting string, like "#,##0.00", for numbers along the X-axis.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>XMajorUnit</maml:name>
        <maml:Description>
          <maml:para>Spacing for the major gridlines / tick marks along the X-axis.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>XMinorUnit</maml:name>
        <maml:Description>
          <maml:para>Spacing for the minor gridlines / tick marks along the X-axis.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>XMaxValue</maml:name>
        <maml:Description>
          <maml:para>Maximum value for the scale along the X-axis.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>XMinValue</maml:name>
        <maml:Description>
          <maml:para>Minimum value for the scale along the X-axis.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>XAxisPosition</maml:name>
        <maml:Description>
          <maml:para>Position for the X-axis (Top or Bottom).</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">eAxisPosition</command:parameterValue>
        <dev:type>
          <maml:name>eAxisPosition</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>YAxisTitleText</maml:name>
        <maml:Description>
          <maml:para>Specifies a title for the Y-axis.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>YAxisTitleBold</maml:name>
        <maml:Description>
          <maml:para>Sets the Y-axis title in bold face.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>YAxisTitleSize</maml:name>
        <maml:Description>
          <maml:para>Sets the font size for the Y-axis title</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>YAxisNumberformat</maml:name>
        <maml:Description>
          <maml:para>A number formatting string, like "#,##0.00", for numbers on the Y-axis.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>YMajorUnit</maml:name>
        <maml:Description>
          <maml:para>Spacing for the major gridlines / tick marks on the Y-axis.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>YMinorUnit</maml:name>
        <maml:Description>
          <maml:para>Spacing for the minor gridlines / tick marks on the Y-axis.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>YMaxValue</maml:name>
        <maml:Description>
          <maml:para>Maximum value on the Y-axis.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>YMinValue</maml:name>
        <maml:Description>
          <maml:para>Minimum value on the Y-axis.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>YAxisPosition</maml:name>
        <maml:Description>
          <maml:para>Position for the Y-axis (Left or Right).</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">eAxisPosition</command:parameterValue>
        <dev:type>
          <maml:name>eAxisPosition</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PassThru</maml:name>
        <maml:Description>
          <maml:para>Add-Excel chart doesn't normally return anything, but if -PassThru is specified it returns the newly created chart to allow it to be fine tuned.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>OfficeOpenXml.Drawing.Chart.ExcelChart</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>PS\&gt; $Excel = ConvertFrom-Csv    @"
    Product, City,    Sales
    Apple,   London,    300
    Orange,  London,    400
    Banana,  London,    300
    Orange,  Paris,     600
    Banana,  Paris,     300
    Apple,   New York, 1200
"@  | Export-Excel  -Path test.xlsx -PassThru
    Add-ExcelChart -Worksheet $Excel.Workbook.Worksheets[1] -ChartType "Doughnut" -XRange "A2:B7"  -YRange "C2:C7" -width 500
    Close-ExcelPackage -Show $Excel</dev:code>
        <dev:remarks>
          <maml:para>The first command expands a multi-line string into 6 rows of data which is exported to new Excel file; leaving an ExcelPackage object in $excel The second command adds a chart - the cell ranges are explicitly specified.</maml:para>
          <maml:para>Note that the XRange (labels) is TWO columns wide and the chart will combine the name of the product and the name of the City to create the label.</maml:para>
          <maml:para>The width of the chart is set explictly, the default legend is used and there is no Chart title.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>PS\&gt; $Excel = Invoke-Sum (Get-Process) Company Handles, PM, VirtualMemorySize | Export-Excel $path  -AutoSize -ExcelChartDefinition $c -AutoNameRange -PassThru
     Add-ExcelChart -Worksheet $Excel.Workbook.Worksheets[1] -Title "VM use" -ChartType PieExploded3D   -XRange "Name" -YRange "VirtualMemorySize" -NoLegend -ShowCategory
     Close-ExcelPackage $Excel -Show</dev:code>
        <dev:remarks>
          <maml:para>The first line exports information and creates named ranges for each column.</maml:para>
          <maml:para>The Second line uses the ranges to specify a chart - the labels come from the range "Name" and the data from the range "VirtualMemorySize"</maml:para>
          <maml:para>The chart is specified as a 3D exploded PIE chart, with a title of "VM Use" and instead of a legend the the pie slices are identified with a label.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <dev:code>PS\&gt; $Excel = Invoke-Sum (Get-Process) Company Handles, PM, VirtualMemorySize | Export-Excel test.xlsx  -TableName Processes -PassThru
      Add-ExcelChart -Worksheet $Excel.Workbook.Worksheets[1] -Title Stats -ChartType LineMarkersStacked   -XRange "Processes[Name]" -YRange "Processes[PM]", "Processes[VirtualMemorySize]" -SeriesHeader 'PM', 'VMSize'
      Close-ExcelPackage $Excel -Show</dev:code>
        <dev:remarks>
          <maml:para>The first line exports information to a table in new file; and captures the excel Package object in $Excel</maml:para>
          <maml:para>The second line creates a chart on the first page of the work sheet, using the notation "TableName[ColumnnName]" to refer to the data, the labels come Name column in the table, and the data series from its PM and VirtualMemorySize columns. The display names for these in the header are set to 'PM' and 'VMSize'.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
        <dev:code>PS\&gt; $excel = 0..360 | ForEach-Object {[pscustomobject][ordered]@{x = $_; Sinx = "=Sin(Radians(x)) "}} | Export-Excel -AutoNameRange -Path Text.xlsx -WorkSheetname SinX -PassThru
Add-ExcelChart -Worksheet $excel.Workbook.Worksheets["Sinx"] -ChartType line -XRange "X" -YRange "Sinx"  -Title "Graph of Sine X" -TitleBold -TitleSize 14 \`
               -Column 2 -ColumnOffSetPixels 35 -Width 800 -XAxisTitleText "Degrees" -XAxisTitleBold -XAxisTitleSize 12 -XMajorUnit 30 -XMinorUnit 10 -XMinValue 0 -XMaxValue 361  -XAxisNumberformat "000" \`
               -YMinValue -1.25 -YMaxValue 1.25 -YMajorUnit 0.25 -YAxisNumberformat "0.00" -YAxisTitleText "Sine" -YAxisTitleBold -YAxisTitleSize 12 \`
               -SeriesHeader "Sin(x)" -LegendSize 8 -legendBold  -LegendPosition Bottom
Close-ExcelPackage $Excel -Show</dev:code>
        <dev:remarks>
          <maml:para>The first line puts numbers from 0 to 360 into a sheet, as the first column, and a formula to calculate the Sine of that number of number of degrees in the second column. It creates named-ranges for the two columns - "X" and "SinX" respectively</maml:para>
          <maml:para>The Add-ExcelChart command adds a chart to that worksheet, specifying a line chart with the X values coming from named-range "X" and the Y values coming from named-range "SinX". The chart has a title, and is positioned to the right of column 2 and sized 800 pixels wide</maml:para>
          <maml:para>The X-axis is labelled "Degrees", in bold 12 point type and runs from 0 to 361 with labels every 30, and minor tick marks every 10. Degrees are shown padded to 3 digits.</maml:para>
          <maml:para>The Y-axis is labelled "Sine" and to allow some room above and below its scale runs from -1.25 to 1.25, and is marked off in units of 0.25 shown to two decimal places.</maml:para>
          <maml:para>The key will for the chart will be at the bottom in 8 point bold type and the line will be named "Sin(x)".</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Add-ExcelDataValidationRule</command:name>
      <command:verb>Add</command:verb>
      <command:noun>ExcelDataValidationRule</command:noun>
      <maml:description>
        <maml:para>Adds data validation to a range of cells</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Excel supports the validation of user input, and ranges of cells can be marked to only contain numbers, or date, or Text up to a particular length, or selections from a list. This command adds validation rules to a worksheet.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Add-ExcelDataValidationRule</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="Address">
          <maml:name>Range</maml:name>
          <maml:Description>
            <maml:para>The range of cells to be validate, for example, "B2:C100"</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>WorkSheet</maml:name>
          <maml:Description>
            <maml:para>The worksheet where the cells should be validated</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ExcelWorksheet</command:parameterValue>
          <dev:type>
            <maml:name>ExcelWorksheet</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ValidationType</maml:name>
          <maml:Description>
            <maml:para>An option corresponding to a choice from the 'Allow' pull down on the settings page in the Excel dialog. "Any" means "any allowed" - in other words, no Validation</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Operator</maml:name>
          <maml:Description>
            <maml:para>The operator to apply to Decimal, Integer, TextLength, DateTime and time fields, for example "equal" or "between"</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">between</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">notBetween</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">equal</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">notEqual</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">lessThan</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">lessThanOrEqual</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">greaterThan</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">greaterThanOrEqual</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelDataValidationOperator</command:parameterValue>
          <dev:type>
            <maml:name>ExcelDataValidationOperator</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Equal</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Value</maml:name>
          <maml:Description>
            <maml:para>For Decimal, Integer, TextLength, DateTime the [first] data value</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Value2</maml:name>
          <maml:Description>
            <maml:para>When using the between operator, the second data  value</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Formula</maml:name>
          <maml:Description>
            <maml:para>The [first] data value as a formula. Use absolute formulas $A$1 if (e.g.) you want all cells to check against the same list</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Formula2</maml:name>
          <maml:Description>
            <maml:para>When using the between operator, the second data value as a formula</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ValueSet</maml:name>
          <maml:Description>
            <maml:para>When using the list validation type, a set of values (rather than refering to Sheet!B$2:B$100 )</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ShowErrorMessage</maml:name>
          <maml:Description>
            <maml:para>Corresponds to the the 'Show Error alert ...' check box on error alert page in the Excel dialog</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ErrorStyle</maml:name>
          <maml:Description>
            <maml:para>Stop, Warning, or Infomation, corresponding to to the style setting in the Excel dialog</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">undefined</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">stop</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">warning</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">information</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelDataValidationWarningStyle</command:parameterValue>
          <dev:type>
            <maml:name>ExcelDataValidationWarningStyle</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ErrorTitle</maml:name>
          <maml:Description>
            <maml:para>The title for the message box  corresponding to to the title setting in the Excel dialog</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ErrorBody</maml:name>
          <maml:Description>
            <maml:para>The error message corresponding to to the Error message setting in the Excel dialog</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ShowPromptMessage</maml:name>
          <maml:Description>
            <maml:para>Corresponds to the the 'Show Input message ...' check box on input message  page in the Excel dialog</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PromptBody</maml:name>
          <maml:Description>
            <maml:para>The prompt message corresponding to to the Input message setting in the Excel dialog</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PromptTitle</maml:name>
          <maml:Description>
            <maml:para>The title for the message box  corresponding to to the title setting in the Excel dialog</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoBlank</maml:name>
          <maml:Description>
            <maml:para>By default the 'Ignore blank' option will be selected, unless NoBlank is sepcified.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="Address">
        <maml:name>Range</maml:name>
        <maml:Description>
          <maml:para>The range of cells to be validate, for example, "B2:C100"</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>WorkSheet</maml:name>
        <maml:Description>
          <maml:para>The worksheet where the cells should be validated</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelWorksheet</command:parameterValue>
        <dev:type>
          <maml:name>ExcelWorksheet</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ValidationType</maml:name>
        <maml:Description>
          <maml:para>An option corresponding to a choice from the 'Allow' pull down on the settings page in the Excel dialog. "Any" means "any allowed" - in other words, no Validation</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Operator</maml:name>
        <maml:Description>
          <maml:para>The operator to apply to Decimal, Integer, TextLength, DateTime and time fields, for example "equal" or "between"</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelDataValidationOperator</command:parameterValue>
        <dev:type>
          <maml:name>ExcelDataValidationOperator</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Equal</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Value</maml:name>
        <maml:Description>
          <maml:para>For Decimal, Integer, TextLength, DateTime the [first] data value</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Value2</maml:name>
        <maml:Description>
          <maml:para>When using the between operator, the second data  value</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Formula</maml:name>
        <maml:Description>
          <maml:para>The [first] data value as a formula. Use absolute formulas $A$1 if (e.g.) you want all cells to check against the same list</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Formula2</maml:name>
        <maml:Description>
          <maml:para>When using the between operator, the second data value as a formula</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ValueSet</maml:name>
        <maml:Description>
          <maml:para>When using the list validation type, a set of values (rather than refering to Sheet!B$2:B$100 )</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ShowErrorMessage</maml:name>
        <maml:Description>
          <maml:para>Corresponds to the the 'Show Error alert ...' check box on error alert page in the Excel dialog</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ErrorStyle</maml:name>
        <maml:Description>
          <maml:para>Stop, Warning, or Infomation, corresponding to to the style setting in the Excel dialog</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelDataValidationWarningStyle</command:parameterValue>
        <dev:type>
          <maml:name>ExcelDataValidationWarningStyle</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ErrorTitle</maml:name>
        <maml:Description>
          <maml:para>The title for the message box  corresponding to to the title setting in the Excel dialog</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ErrorBody</maml:name>
        <maml:Description>
          <maml:para>The error message corresponding to to the Error message setting in the Excel dialog</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ShowPromptMessage</maml:name>
        <maml:Description>
          <maml:para>Corresponds to the the 'Show Input message ...' check box on input message  page in the Excel dialog</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PromptBody</maml:name>
        <maml:Description>
          <maml:para>The prompt message corresponding to to the Input message setting in the Excel dialog</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PromptTitle</maml:name>
        <maml:Description>
          <maml:para>The title for the message box  corresponding to to the title setting in the Excel dialog</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NoBlank</maml:name>
        <maml:Description>
          <maml:para>By default the 'Ignore blank' option will be selected, unless NoBlank is sepcified.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>PS\&gt;Add-ExcelDataValidationRule -WorkSheet $PlanSheet -Range 'E2:E1001' -ValidationType Integer -Operator between -Value 0 -Value2 100 \`
     -ShowErrorMessage -ErrorStyle stop -ErrorTitle 'Invalid Data' -ErrorBody 'Percentage must be a whole number between 0 and 100'</dev:code>
        <dev:remarks>
          <maml:para>This defines a validation rule on cells E2-E1001; it is an integer rule and requires a number between 0 and 100. If a value is input with a fraction, negative number, or positive number &gt; 100 a stop dialog box appears.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>PS\&gt;Add-ExcelDataValidationRule -WorkSheet $PlanSheet -Range 'B2:B1001' -ValidationType List  -Formula 'values!$a$2:$a$1000'
       -ShowErrorMessage -ErrorStyle stop -ErrorTitle 'Invalid Data' -ErrorBody 'You must select an item from the list'</dev:code>
        <dev:remarks>
          <maml:para>This defines a list rule on Cells B2:1001, and the posible values are in a sheet named "values" at cells A2 to A1000 Blank cells in this range are ignored.</maml:para>
          <maml:para>If $ signs were left out of the fomrmula B2 would be checked against A2-A1000, B3, against A3-A1001, B4 against A4-A1002 up to B1001 beng checked against A1001-A1999</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <dev:code>PS\&gt;Add-ExcelDataValidationRule -WorkSheet $PlanSheet -Range 'I2:N1001' -ValidationType List    -ValueSet @('yes','YES','Yes')
        -ShowErrorMessage -ErrorStyle stop -ErrorTitle 'Invalid Data' -ErrorBody "Select Yes or leave blank for no"</dev:code>
        <dev:remarks>
          <maml:para>Similar to the previous example but this time provides a value set; Excel comparisons are case sesnsitive, hence 3 versions of Yes.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Add-ExcelName</command:name>
      <command:verb>Add</command:verb>
      <command:noun>ExcelName</command:noun>
      <maml:description>
        <maml:para>Adds a named-range to an existing Excel worksheet.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>It is often helpful to be able to refer to sets of cells with a name rather than using their co-ordinates; Add-ExcelName sets up these names.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Add-ExcelName</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>Range</maml:name>
          <maml:Description>
            <maml:para>The range of cells to assign as a name.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ExcelRange</command:parameterValue>
          <dev:type>
            <maml:name>ExcelRange</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
          <maml:name>RangeName</maml:name>
          <maml:Description>
            <maml:para>The name to assign to the range. If the name exists it will be updated to the new range.  If no name is specified, the first cell in the range will be used as the name.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
        <maml:name>Range</maml:name>
        <maml:Description>
          <maml:para>The range of cells to assign as a name.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelRange</command:parameterValue>
        <dev:type>
          <maml:name>ExcelRange</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
        <maml:name>RangeName</maml:name>
        <maml:Description>
          <maml:para>The name to assign to the range. If the name exists it will be updated to the new range.  If no name is specified, the first cell in the range will be used as the name.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>PS\&gt; Add-ExcelName -Range $ws.Cells[$dataRange] -RangeName $rangeName</dev:code>
        <dev:remarks>
          <maml:para>$WS is a worksheet, and $dataRange is a string describing a range of cells - for example "A1:Z10" -  which will become a named range, using the name in $rangeName.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Add-ExcelTable</command:name>
      <command:verb>Add</command:verb>
      <command:noun>ExcelTable</command:noun>
      <maml:description>
        <maml:para>Adds Tables to Excel workbooks.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Unlike named ranges, where the name only needs to be unique within a sheet, Table names must be unique in the workbook.</maml:para>
      <maml:para>Tables carry formatting and by default have a filter.</maml:para>
      <maml:para>The filter, header, totals, first and last column highlights can all be configured.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Add-ExcelTable</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>Range</maml:name>
          <maml:Description>
            <maml:para>The range of cells to assign to a table.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ExcelRange</command:parameterValue>
          <dev:type>
            <maml:name>ExcelRange</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
          <maml:name>TableName</maml:name>
          <maml:Description>
            <maml:para>The name for the Table - this should be unqiue in the Workbook - auto generated names will be used if this is left empty.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
          <maml:name>TableStyle</maml:name>
          <maml:Description>
            <maml:para>The Style for the table, by default "Medium6" is used</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Custom</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light1</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light2</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light3</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light4</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light5</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light6</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light7</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light8</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light9</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light10</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light11</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light12</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light13</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light14</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light15</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light16</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light17</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light18</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light19</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light20</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light21</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium1</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium2</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium3</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium4</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium5</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium6</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium7</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium8</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium9</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium10</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium11</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium12</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium13</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium14</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium15</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium16</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium17</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium18</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium19</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium20</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium21</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium22</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium23</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium24</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium25</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium26</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium27</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium28</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark1</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark2</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark3</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark4</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark5</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark6</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark7</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark8</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark9</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark10</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark11</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">TableStyles</command:parameterValue>
          <dev:type>
            <maml:name>TableStyles</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Medium6</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="none">
          <maml:name>TotalSettings</maml:name>
          <maml:Description>
            <maml:para>A HashTable in the form ColumnName = "Average"|"Count"|"CountNums"|"Max"|"Min"|"None"|"StdDev"|"Sum"|"Var" - if specified, -ShowTotal is not needed.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ShowHeader</maml:name>
          <maml:Description>
            <maml:para>By default the header row is shown - it can be turned off with -ShowHeader:$false.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ShowFilter</maml:name>
          <maml:Description>
            <maml:para>By default the filter is enabled - it can be turned off with -ShowFilter:$false.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ShowTotal</maml:name>
          <maml:Description>
            <maml:para>Show total adds a totals row. This does not automatically sum the columns but provides a drop-down in each to select sum, average etc</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ShowFirstColumn</maml:name>
          <maml:Description>
            <maml:para>Highlights the first column in bold.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ShowLastColumn</maml:name>
          <maml:Description>
            <maml:para>Highlights the last column in bold.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ShowRowStripes</maml:name>
          <maml:Description>
            <maml:para>By default the table formats show striped rows, the can be turned off with -ShowRowStripes:$false</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ShowColumnStripes</maml:name>
          <maml:Description>
            <maml:para>Turns on column stripes.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PassThru</maml:name>
          <maml:Description>
            <maml:para>If -PassThru is specified, the table object will be returned to allow additional changes to be made.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
        <maml:name>Range</maml:name>
        <maml:Description>
          <maml:para>The range of cells to assign to a table.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelRange</command:parameterValue>
        <dev:type>
          <maml:name>ExcelRange</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
        <maml:name>TableName</maml:name>
        <maml:Description>
          <maml:para>The name for the Table - this should be unqiue in the Workbook - auto generated names will be used if this is left empty.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
        <maml:name>TableStyle</maml:name>
        <maml:Description>
          <maml:para>The Style for the table, by default "Medium6" is used</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">TableStyles</command:parameterValue>
        <dev:type>
          <maml:name>TableStyles</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Medium6</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ShowHeader</maml:name>
        <maml:Description>
          <maml:para>By default the header row is shown - it can be turned off with -ShowHeader:$false.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ShowFilter</maml:name>
        <maml:Description>
          <maml:para>By default the filter is enabled - it can be turned off with -ShowFilter:$false.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ShowTotal</maml:name>
        <maml:Description>
          <maml:para>Show total adds a totals row. This does not automatically sum the columns but provides a drop-down in each to select sum, average etc</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="none">
        <maml:name>TotalSettings</maml:name>
        <maml:Description>
          <maml:para>A HashTable in the form ColumnName = "Average"|"Count"|"CountNums"|"Max"|"Min"|"None"|"StdDev"|"Sum"|"Var" - if specified, -ShowTotal is not needed.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>Hashtable</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ShowFirstColumn</maml:name>
        <maml:Description>
          <maml:para>Highlights the first column in bold.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ShowLastColumn</maml:name>
        <maml:Description>
          <maml:para>Highlights the last column in bold.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ShowRowStripes</maml:name>
        <maml:Description>
          <maml:para>By default the table formats show striped rows, the can be turned off with -ShowRowStripes:$false</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ShowColumnStripes</maml:name>
        <maml:Description>
          <maml:para>Turns on column stripes.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PassThru</maml:name>
        <maml:Description>
          <maml:para>If -PassThru is specified, the table object will be returned to allow additional changes to be made.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>OfficeOpenXml.Table.ExcelTable</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>PS\&gt; Add-ExcelTable -Range $ws.Cells[$dataRange] -TableName $TableName</dev:code>
        <dev:remarks>
          <maml:para>$WS is a worksheet, and $dataRange is a string describing a range of cells - for example "A1:Z10". This range which will become a table, named $TableName</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>PS\&gt; Add-ExcelTable -Range $ws.cells[$($ws.Dimension.address)] -TableStyle Light1 -TableName Musictable -ShowFilter:$false -ShowTotal -ShowFirstColumn</dev:code>
        <dev:remarks>
          <maml:para>Again $ws is a worksheet, range here is the whole of the active part of the worksheet. The table style and name are set, the filter is turned off, and a "Totals" row added, and first column is set in bold.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Add-PivotTable</command:name>
      <command:verb>Add</command:verb>
      <command:noun>PivotTable</command:noun>
      <maml:description>
        <maml:para>Adds a PivotTable (and optional PivotChart) to a workbook.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>If the PivotTable already exists, the source data will be updated.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Add-PivotTable</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotTableName</maml:name>
          <maml:Description>
            <maml:para>Name for the new PivotTable - this will be the name of a sheet in the Workbook.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Address</maml:name>
          <maml:Description>
            <maml:para>By default, a PivotTable will be created on its own sheet, but it can be created on an existing sheet by giving the address where the top left corner of the table should go. (Allow two rows for the filter if one is used.)</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ExcelAddressBase</command:parameterValue>
          <dev:type>
            <maml:name>ExcelAddressBase</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExcelPackage</maml:name>
          <maml:Description>
            <maml:para>An Excel-package object for the workbook.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SourceWorkSheet</maml:name>
          <maml:Description>
            <maml:para>Worksheet where the data is found.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SourceRange</maml:name>
          <maml:Description>
            <maml:para>Address range in the worksheet e.g "A10:F20" - the first row must be column names: if not specified the whole sheet will be used.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotRows</maml:name>
          <maml:Description>
            <maml:para>Fields to set as rows in the PivotTable.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotData</maml:name>
          <maml:Description>
            <maml:para>A hash table in form "FieldName"="Function", where function is one of Average, Count, CountNums, Max, Min, Product, None, StdDev, StdDevP, Sum, Var, VarP.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotColumns</maml:name>
          <maml:Description>
            <maml:para>Fields to set as columns in the PivotTable.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotFilter</maml:name>
          <maml:Description>
            <maml:para>Fields to use to filter in the PivotTable.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotDataToColumn</maml:name>
          <maml:Description>
            <maml:para>If there are multiple data items in a PivotTable, by default they are shown on separate rows; this switch makes them separate columns.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotTotals</maml:name>
          <maml:Description>
            <maml:para>Define whether totals should be added to rows, columns neither, or both (the default is both).</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Both</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoTotalsInPivot</maml:name>
          <maml:Description>
            <maml:para>Included for compatibility - equivalent to -PivotTotals "None".</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GroupDateRow</maml:name>
          <maml:Description>
            <maml:para>The name of a row field which should be grouped by parts of the date/time (ignored if GroupDateRow is not specified)</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GroupDatePart</maml:name>
          <maml:Description>
            <maml:para>The Part(s) of the date to use in the grouping (ignored if GroupDateRow is not specified)</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Years</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Quarters</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Months</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Days</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Hours</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Minutes</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Seconds</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">eDateGroupBy[]</command:parameterValue>
          <dev:type>
            <maml:name>eDateGroupBy[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GroupNumericRow</maml:name>
          <maml:Description>
            <maml:para>The name of a row field which should be grouped by Number (e.g. 0-99, 100-199, 200-299 )</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GroupNumericMin</maml:name>
          <maml:Description>
            <maml:para>The starting point for grouping</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Double</command:parameterValue>
          <dev:type>
            <maml:name>Double</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GroupNumericMax</maml:name>
          <maml:Description>
            <maml:para>The endpoint for grouping</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Double</command:parameterValue>
          <dev:type>
            <maml:name>Double</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1.79769313486232E+308</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GroupNumericInterval</maml:name>
          <maml:Description>
            <maml:para>The interval for grouping</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Double</command:parameterValue>
          <dev:type>
            <maml:name>Double</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>100</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotNumberFormat</maml:name>
          <maml:Description>
            <maml:para>Number format to apply to the data cells in the PivotTable.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotTableStyle</maml:name>
          <maml:Description>
            <maml:para>Apply a table style to the PivotTable.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Custom</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light1</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light2</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light3</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light4</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light5</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light6</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light7</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light8</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light9</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light10</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light11</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light12</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light13</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light14</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light15</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light16</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light17</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light18</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light19</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light20</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light21</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium1</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium2</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium3</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium4</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium5</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium6</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium7</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium8</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium9</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium10</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium11</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium12</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium13</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium14</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium15</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium16</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium17</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium18</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium19</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium20</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium21</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium22</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium23</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium24</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium25</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium26</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium27</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium28</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark1</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark2</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark3</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark4</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark5</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark6</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark7</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark8</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark9</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark10</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark11</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">TableStyles</command:parameterValue>
          <dev:type>
            <maml:name>TableStyles</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none">
          <maml:name>PivotChartDefinition</maml:name>
          <maml:Description>
            <maml:para>Use a chart definition instead of specifying chart settings one by one.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Activate</maml:name>
          <maml:Description>
            <maml:para>If there is already content in the workbook the sheet with the PivotTable will not be active UNLESS Activate is specified.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PassThru</maml:name>
          <maml:Description>
            <maml:para>Return the PivotTable so it can be customized.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Add-PivotTable</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotTableName</maml:name>
          <maml:Description>
            <maml:para>Name for the new PivotTable - this will be the name of a sheet in the Workbook.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Address</maml:name>
          <maml:Description>
            <maml:para>By default, a PivotTable will be created on its own sheet, but it can be created on an existing sheet by giving the address where the top left corner of the table should go. (Allow two rows for the filter if one is used.)</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ExcelAddressBase</command:parameterValue>
          <dev:type>
            <maml:name>ExcelAddressBase</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExcelPackage</maml:name>
          <maml:Description>
            <maml:para>An Excel-package object for the workbook.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SourceWorkSheet</maml:name>
          <maml:Description>
            <maml:para>Worksheet where the data is found.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SourceRange</maml:name>
          <maml:Description>
            <maml:para>Address range in the worksheet e.g "A10:F20" - the first row must be column names: if not specified the whole sheet will be used.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotRows</maml:name>
          <maml:Description>
            <maml:para>Fields to set as rows in the PivotTable.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotData</maml:name>
          <maml:Description>
            <maml:para>A hash table in form "FieldName"="Function", where function is one of Average, Count, CountNums, Max, Min, Product, None, StdDev, StdDevP, Sum, Var, VarP.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotColumns</maml:name>
          <maml:Description>
            <maml:para>Fields to set as columns in the PivotTable.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotFilter</maml:name>
          <maml:Description>
            <maml:para>Fields to use to filter in the PivotTable.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotDataToColumn</maml:name>
          <maml:Description>
            <maml:para>If there are multiple data items in a PivotTable, by default they are shown on separate rows; this switch makes them separate columns.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotTotals</maml:name>
          <maml:Description>
            <maml:para>Define whether totals should be added to rows, columns neither, or both (the default is both).</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Both</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoTotalsInPivot</maml:name>
          <maml:Description>
            <maml:para>Included for compatibility - equivalent to -PivotTotals "None".</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GroupDateRow</maml:name>
          <maml:Description>
            <maml:para>The name of a row field which should be grouped by parts of the date/time (ignored if GroupDateRow is not specified)</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GroupDatePart</maml:name>
          <maml:Description>
            <maml:para>The Part(s) of the date to use in the grouping (ignored if GroupDateRow is not specified)</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Years</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Quarters</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Months</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Days</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Hours</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Minutes</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Seconds</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">eDateGroupBy[]</command:parameterValue>
          <dev:type>
            <maml:name>eDateGroupBy[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GroupNumericRow</maml:name>
          <maml:Description>
            <maml:para>The name of a row field which should be grouped by Number (e.g. 0-99, 100-199, 200-299 )</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GroupNumericMin</maml:name>
          <maml:Description>
            <maml:para>The starting point for grouping</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Double</command:parameterValue>
          <dev:type>
            <maml:name>Double</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GroupNumericMax</maml:name>
          <maml:Description>
            <maml:para>The endpoint for grouping</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Double</command:parameterValue>
          <dev:type>
            <maml:name>Double</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1.79769313486232E+308</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GroupNumericInterval</maml:name>
          <maml:Description>
            <maml:para>The interval for grouping</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Double</command:parameterValue>
          <dev:type>
            <maml:name>Double</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>100</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotNumberFormat</maml:name>
          <maml:Description>
            <maml:para>Number format to apply to the data cells in the PivotTable.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotTableStyle</maml:name>
          <maml:Description>
            <maml:para>Apply a table style to the PivotTable.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Custom</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light1</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light2</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light3</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light4</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light5</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light6</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light7</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light8</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light9</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light10</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light11</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light12</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light13</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light14</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light15</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light16</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light17</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light18</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light19</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light20</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light21</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium1</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium2</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium3</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium4</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium5</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium6</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium7</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium8</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium9</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium10</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium11</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium12</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium13</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium14</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium15</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium16</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium17</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium18</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium19</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium20</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium21</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium22</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium23</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium24</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium25</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium26</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium27</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium28</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark1</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark2</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark3</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark4</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark5</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark6</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark7</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark8</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark9</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark10</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark11</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">TableStyles</command:parameterValue>
          <dev:type>
            <maml:name>TableStyles</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>IncludePivotChart</maml:name>
          <maml:Description>
            <maml:para>If specified, a chart will be included.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ChartTitle</maml:name>
          <maml:Description>
            <maml:para>Optional title for the pivot chart, by default the title omitted.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ChartHeight</maml:name>
          <maml:Description>
            <maml:para>Height of the chart in Pixels (400 by default).</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>400</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ChartWidth</maml:name>
          <maml:Description>
            <maml:para>Width of the chart in Pixels (600 by default).</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>600</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ChartRow</maml:name>
          <maml:Description>
            <maml:para>Cell position of the top left corner of the chart, there will be this number of rows above the top edge of the chart (default is 0, chart starts at top edge of row 1).</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ChartColumn</maml:name>
          <maml:Description>
            <maml:para>Cell position of the top left corner of the chart, there will be this number of cells to the left of the chart (default is 4, chart starts at left edge of column E).</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>4</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ChartRowOffSetPixels</maml:name>
          <maml:Description>
            <maml:para>Vertical offset of the chart from the cell corner.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ChartColumnOffSetPixels</maml:name>
          <maml:Description>
            <maml:para>Horizontal offset of the chart from the cell corner.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ChartType</maml:name>
          <maml:Description>
            <maml:para>Type of chart; defaults to "Pie".</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Area</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Line</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Pie</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Bubble</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnClustered3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnStacked3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnStacked1003D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarClustered3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarStacked3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarStacked1003D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineMarkers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineMarkersStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineMarkersStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PieOfPie</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PieExploded</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PieExploded3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarOfPie</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatterSmooth</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatterSmoothNoMarkers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatterLines</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatterLinesNoMarkers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AreaStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AreaStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AreaStacked3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AreaStacked1003D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DoughnutExploded</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">RadarMarkers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">RadarFilled</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Surface</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SurfaceWireframe</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SurfaceTopView</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SurfaceTopViewWireframe</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Bubble3DEffect</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">StockHLC</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">StockOHLC</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">StockVHLC</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">StockVOHLC</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderColClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderColStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderColStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderBarClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderBarStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderBarStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderCol</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeColClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeColStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeColStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeBarClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeBarStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeBarStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeCol</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidColClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidColStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidColStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidBarClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidBarStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidBarStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidCol</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatter</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Radar</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Doughnut</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Pie3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Line3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Column3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Area3D</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">eChartType</command:parameterValue>
          <dev:type>
            <maml:name>eChartType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Pie</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoLegend</maml:name>
          <maml:Description>
            <maml:para>If specified hides the chart legend.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ShowCategory</maml:name>
          <maml:Description>
            <maml:para>If specified attaches the category to slices in a pie chart : not supported on all chart types, this may give errors if applied to an unsupported type.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ShowPercent</maml:name>
          <maml:Description>
            <maml:para>If specified attaches percentages to slices in a pie chart.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Activate</maml:name>
          <maml:Description>
            <maml:para>If there is already content in the workbook the sheet with the PivotTable will not be active UNLESS Activate is specified.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PassThru</maml:name>
          <maml:Description>
            <maml:para>Return the PivotTable so it can be customized.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PivotTableName</maml:name>
        <maml:Description>
          <maml:para>Name for the new PivotTable - this will be the name of a sheet in the Workbook.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Address</maml:name>
        <maml:Description>
          <maml:para>By default, a PivotTable will be created on its own sheet, but it can be created on an existing sheet by giving the address where the top left corner of the table should go. (Allow two rows for the filter if one is used.)</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelAddressBase</command:parameterValue>
        <dev:type>
          <maml:name>ExcelAddressBase</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ExcelPackage</maml:name>
        <maml:Description>
          <maml:para>An Excel-package object for the workbook.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SourceWorkSheet</maml:name>
        <maml:Description>
          <maml:para>Worksheet where the data is found.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SourceRange</maml:name>
        <maml:Description>
          <maml:para>Address range in the worksheet e.g "A10:F20" - the first row must be column names: if not specified the whole sheet will be used.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PivotRows</maml:name>
        <maml:Description>
          <maml:para>Fields to set as rows in the PivotTable.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PivotData</maml:name>
        <maml:Description>
          <maml:para>A hash table in form "FieldName"="Function", where function is one of Average, Count, CountNums, Max, Min, Product, None, StdDev, StdDevP, Sum, Var, VarP.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PivotColumns</maml:name>
        <maml:Description>
          <maml:para>Fields to set as columns in the PivotTable.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PivotFilter</maml:name>
        <maml:Description>
          <maml:para>Fields to use to filter in the PivotTable.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PivotDataToColumn</maml:name>
        <maml:Description>
          <maml:para>If there are multiple data items in a PivotTable, by default they are shown on separate rows; this switch makes them separate columns.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PivotTotals</maml:name>
        <maml:Description>
          <maml:para>Define whether totals should be added to rows, columns neither, or both (the default is both).</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Both</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NoTotalsInPivot</maml:name>
        <maml:Description>
          <maml:para>Included for compatibility - equivalent to -PivotTotals "None".</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>GroupDateRow</maml:name>
        <maml:Description>
          <maml:para>The name of a row field which should be grouped by parts of the date/time (ignored if GroupDateRow is not specified)</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>GroupDatePart</maml:name>
        <maml:Description>
          <maml:para>The Part(s) of the date to use in the grouping (ignored if GroupDateRow is not specified)</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">eDateGroupBy[]</command:parameterValue>
        <dev:type>
          <maml:name>eDateGroupBy[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>GroupNumericRow</maml:name>
        <maml:Description>
          <maml:para>The name of a row field which should be grouped by Number (e.g. 0-99, 100-199, 200-299 )</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>GroupNumericMin</maml:name>
        <maml:Description>
          <maml:para>The starting point for grouping</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Double</command:parameterValue>
        <dev:type>
          <maml:name>Double</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>GroupNumericMax</maml:name>
        <maml:Description>
          <maml:para>The endpoint for grouping</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Double</command:parameterValue>
        <dev:type>
          <maml:name>Double</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>1.79769313486232E+308</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>GroupNumericInterval</maml:name>
        <maml:Description>
          <maml:para>The interval for grouping</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Double</command:parameterValue>
        <dev:type>
          <maml:name>Double</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>100</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PivotNumberFormat</maml:name>
        <maml:Description>
          <maml:para>Number format to apply to the data cells in the PivotTable.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PivotTableStyle</maml:name>
        <maml:Description>
          <maml:para>Apply a table style to the PivotTable.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">TableStyles</command:parameterValue>
        <dev:type>
          <maml:name>TableStyles</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none">
        <maml:name>PivotChartDefinition</maml:name>
        <maml:Description>
          <maml:para>Use a chart definition instead of specifying chart settings one by one.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>IncludePivotChart</maml:name>
        <maml:Description>
          <maml:para>If specified, a chart will be included.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ChartTitle</maml:name>
        <maml:Description>
          <maml:para>Optional title for the pivot chart, by default the title omitted.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ChartHeight</maml:name>
        <maml:Description>
          <maml:para>Height of the chart in Pixels (400 by default).</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>400</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ChartWidth</maml:name>
        <maml:Description>
          <maml:para>Width of the chart in Pixels (600 by default).</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>600</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ChartRow</maml:name>
        <maml:Description>
          <maml:para>Cell position of the top left corner of the chart, there will be this number of rows above the top edge of the chart (default is 0, chart starts at top edge of row 1).</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ChartColumn</maml:name>
        <maml:Description>
          <maml:para>Cell position of the top left corner of the chart, there will be this number of cells to the left of the chart (default is 4, chart starts at left edge of column E).</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>4</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ChartRowOffSetPixels</maml:name>
        <maml:Description>
          <maml:para>Vertical offset of the chart from the cell corner.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ChartColumnOffSetPixels</maml:name>
        <maml:Description>
          <maml:para>Horizontal offset of the chart from the cell corner.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ChartType</maml:name>
        <maml:Description>
          <maml:para>Type of chart; defaults to "Pie".</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">eChartType</command:parameterValue>
        <dev:type>
          <maml:name>eChartType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Pie</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NoLegend</maml:name>
        <maml:Description>
          <maml:para>If specified hides the chart legend.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ShowCategory</maml:name>
        <maml:Description>
          <maml:para>If specified attaches the category to slices in a pie chart : not supported on all chart types, this may give errors if applied to an unsupported type.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ShowPercent</maml:name>
        <maml:Description>
          <maml:para>If specified attaches percentages to slices in a pie chart.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Activate</maml:name>
        <maml:Description>
          <maml:para>If there is already content in the workbook the sheet with the PivotTable will not be active UNLESS Activate is specified.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PassThru</maml:name>
        <maml:Description>
          <maml:para>Return the PivotTable so it can be customized.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>OfficeOpenXml.Table.PivotTable.ExcelPivotTable</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>PS\&gt; $excel = Get-Service | Export-Excel -Path test.xlsx -WorksheetName Services -PassThru -AutoSize -DisplayPropertySet -TableName ServiceTable -Title "Services on $Env:COMPUTERNAME"
    Add-PivotTable -ExcelPackage $excel  -PivotTableName ServiceSummary   -SourceRange $excel.Workbook.Worksheets\[1\].Tables\[0\].Address -PivotRows Status -PivotData Name -NoTotalsInPivot -Activate
     Close-ExcelPackage $excel -Show</dev:code>
        <dev:remarks>
          <maml:para>This exports data to new workbook and creates a table with the data in it.</maml:para>
          <maml:para>The Pivot table is added on its own page, the table created in the first command is used as the source for the PivotTable;  which counts the service names in for each Status.</maml:para>
          <maml:para>At the end the Pivot page is made active.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>PS\&gt;  $chartdef = New-ExcelChartDefinition -Title "Gross and net by city and product"  -ChartType ColumnClustered `
         -Column 11 -Width 500 -Height 360 -YMajorUnit 500 -YMinorUnit 100 -YAxisNumberformat "$#,##0" -LegendPosition Bottom
      $excel = ConvertFrom-Csv    @"
Product, City, Gross, Net
Apple, London , 300, 250
Orange, London , 400, 350
Banana, London , 300, 200
Orange, Paris,   600, 500
Banana, Paris,   300, 200
Apple, New York, 1200,700
"@  | Export-Excel  -Path "test.xlsx"  -TableStyle Medium13 -tablename "RawData" -PassThru
      Add-PivotTable -PivotTableName Sales -Address $excel.Workbook.Worksheets[1].Cells["F1"] `
            -SourceWorkSheet $excel.Workbook.Worksheets[1]  -PivotRows City -PivotColumns Product -PivotData @{Gross="Sum";Net="Sum"} `
            -PivotNumberFormat "$#,##0.00"  -PivotTotals Both  -PivotTableStyle Medium12 -PivotChartDefinition $chartdef
      Close-ExcelPackage -show $excel</dev:code>
        <dev:remarks>
          <maml:para>This script starts by defining a chart.</maml:para>
          <maml:para>Then it exports some data to an XLSX file and keeps the file open.</maml:para>
          <maml:para>The next step is to add the pivot table, normally this would be on its own sheet in the workbook, but here -Address is specified to place it beside the data.</maml:para>
          <maml:para>The Add-Pivot table is given the chart definition and told to create a tale using the City field to create rows, the Product field to create columns and the data should be the sum of the gross field and the sum of the net field; grand totals for both gross and net are included for rows (Cities) and columns (Products) and the data is explicitly formatted as a currency.</maml:para>
          <maml:para>Note that in the chart definition the number format for the axis does not include any fraction part.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <dev:code>PS&gt; $excel = Convertfrom-csv @"
Location,OrderDate,quantity
Boston,1/1/2017,100
New York,1/21/2017,200
Boston,1/11/2017,300
New York,1/9/2017,400
Boston,1/18/2017,500
Boston,2/1/2017,600
New York,2/21/2017,700
New York,2/11/2017,800
Boston,2/9/2017,900
Boston,2/18/2017,1000
New York,1/1/2018,100
Boston,1/21/2018,200
New York,1/11/2018,300
Boston,1/9/2018,400
New York,1/18/2018,500
Boston,2/1/2018,600
Boston,2/21/2018,700
New York,2/11/2018,800
New York,2/9/2018,900
Boston,2/18/2018,1000
"@ |  Select-Object -Property @{n="OrderDate";e={[datetime]::ParseExact($_.OrderDate,"M/d/yyyy",(Get-Culture))}},
        Location, Quantity |  Export-Excel "test2.xlsx" -PassThru -AutoSize
      Set-ExcelColumn -Worksheet $excel.sheet1 -Column 1 -NumberFormat 'Short Date'
      $pt = Add-PivotTable -PassThru -PivotTableName "ByDate" -Address $excel.Sheet1.cells["F1"] -SourceWorkSheet $excel.Sheet1  -PivotRows location,orderdate -PivotData @{'quantity'='sum'}  -GroupDateRow orderdate -GroupDatePart 'Months,Years' -PivotTotals None
      $pt.RowFields[0].SubtotalTop=$false
      $pt.RowFields[0].Compact=$false
      Close-ExcelPackage $excel -Show</dev:code>
        <dev:remarks>
          <maml:para>Here the data contains dates formatted as strings using US format.</maml:para>
          <maml:para>These are converted to DateTime objects before being exported to Excel; the "OrderDate" column is formatted with the local short-date style.</maml:para>
          <maml:para>Then the PivotTable is added; it groups information by date and location, the date is split into years and then months.</maml:para>
          <maml:para>No grand totals are displayed.</maml:para>
          <maml:para>The Pivot table object is caught in a variable, and the "Location" column has its subtotal moved from the top to the bottom of each location section, and the "Compact" option is disabled to prevent "Year" moving into the same column as location.</maml:para>
          <maml:para>Finally the workbook is saved and shown in Excel.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Add-WorkSheet</command:name>
      <command:verb>Add</command:verb>
      <command:noun>WorkSheet</command:noun>
      <maml:description>
        <maml:para>Adds a worksheet to an existing workbook.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>If the named worksheet already exists, the -Clearsheet parameter decides whether it should be deleted and a new one returned, or if not specified the existing sheet will be returned.</maml:para>
      <maml:para>By default the sheet is created at the end of the work book, the -MoveXXXX switches allow the sheet to be [re]positioned at the start or before or after another sheet.</maml:para>
      <maml:para>A new sheet will only be made the default sheet when excel opens if -Activate is specified.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Add-WorkSheet</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="none">
          <maml:name>ExcelPackage</maml:name>
          <maml:Description>
            <maml:para>An object representing an Excel Package.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ExcelPackage</command:parameterValue>
          <dev:type>
            <maml:name>ExcelPackage</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>WorksheetName</maml:name>
          <maml:Description>
            <maml:para>The name of the worksheet, 'Sheet1' by default.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ClearSheet</maml:name>
          <maml:Description>
            <maml:para>If the worksheet already exists, by default it will returned, unless -ClearSheet is specified in which case it will be deleted and re-created.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MoveToStart</maml:name>
          <maml:Description>
            <maml:para>If specified, the worksheet will be moved to the start of the workbook.</maml:para>
            <maml:para>MoveToStart takes precedence over MoveToEnd, Movebefore and MoveAfter if more than one is specified.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MoveToEnd</maml:name>
          <maml:Description>
            <maml:para>If specified, the worksheet will be moved to the end of the workbook.</maml:para>
            <maml:para>(This is the default position for newly created sheets, but it can be used to move existing sheets.)</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MoveBefore</maml:name>
          <maml:Description>
            <maml:para>If specified, the worksheet will be moved before the nominated one (which can be an index starting from 1, or a name).</maml:para>
            <maml:para>MoveBefore takes precedence over MoveAfter if both are specified.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MoveAfter</maml:name>
          <maml:Description>
            <maml:para>If specified, the worksheet will be moved after the nominated one (which can be an index starting from 1, or a name or *).</maml:para>
            <maml:para>If * is used, the worksheet names will be examined starting with the first one, and the sheet placed after the last sheet which comes before it alphabetically.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Activate</maml:name>
          <maml:Description>
            <maml:para>If there is already content in the workbook the new sheet will not be active UNLESS Activate is specified.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CopySource</maml:name>
          <maml:Description>
            <maml:para>If worksheet is provided as a copy source the new worksheet will be a copy of it. The source can be in the same workbook, or in a different file.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ExcelWorksheet</command:parameterValue>
          <dev:type>
            <maml:name>ExcelWorksheet</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoClobber</maml:name>
          <maml:Description>
            <maml:para>Ignored but retained for backwards compatibility.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Add-WorkSheet</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExcelWorkbook</maml:name>
          <maml:Description>
            <maml:para>An Excel Workbook to which the Worksheet will be added - a Package contains one Workbook, so you can use whichever fits at the time.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ExcelWorkbook</command:parameterValue>
          <dev:type>
            <maml:name>ExcelWorkbook</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>WorksheetName</maml:name>
          <maml:Description>
            <maml:para>The name of the worksheet, 'Sheet1' by default.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ClearSheet</maml:name>
          <maml:Description>
            <maml:para>If the worksheet already exists, by default it will returned, unless -ClearSheet is specified in which case it will be deleted and re-created.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MoveToStart</maml:name>
          <maml:Description>
            <maml:para>If specified, the worksheet will be moved to the start of the workbook.</maml:para>
            <maml:para>MoveToStart takes precedence over MoveToEnd, Movebefore and MoveAfter if more than one is specified.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MoveToEnd</maml:name>
          <maml:Description>
            <maml:para>If specified, the worksheet will be moved to the end of the workbook.</maml:para>
            <maml:para>(This is the default position for newly created sheets, but it can be used to move existing sheets.)</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MoveBefore</maml:name>
          <maml:Description>
            <maml:para>If specified, the worksheet will be moved before the nominated one (which can be an index starting from 1, or a name).</maml:para>
            <maml:para>MoveBefore takes precedence over MoveAfter if both are specified.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MoveAfter</maml:name>
          <maml:Description>
            <maml:para>If specified, the worksheet will be moved after the nominated one (which can be an index starting from 1, or a name or *).</maml:para>
            <maml:para>If * is used, the worksheet names will be examined starting with the first one, and the sheet placed after the last sheet which comes before it alphabetically.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Activate</maml:name>
          <maml:Description>
            <maml:para>If there is already content in the workbook the new sheet will not be active UNLESS Activate is specified.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CopySource</maml:name>
          <maml:Description>
            <maml:para>If worksheet is provided as a copy source the new worksheet will be a copy of it. The source can be in the same workbook, or in a different file.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ExcelWorksheet</command:parameterValue>
          <dev:type>
            <maml:name>ExcelWorksheet</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoClobber</maml:name>
          <maml:Description>
            <maml:para>Ignored but retained for backwards compatibility.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="none">
        <maml:name>ExcelPackage</maml:name>
        <maml:Description>
          <maml:para>An object representing an Excel Package.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelPackage</command:parameterValue>
        <dev:type>
          <maml:name>ExcelPackage</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ExcelWorkbook</maml:name>
        <maml:Description>
          <maml:para>An Excel Workbook to which the Worksheet will be added - a Package contains one Workbook, so you can use whichever fits at the time.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelWorkbook</command:parameterValue>
        <dev:type>
          <maml:name>ExcelWorkbook</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>WorksheetName</maml:name>
        <maml:Description>
          <maml:para>The name of the worksheet, 'Sheet1' by default.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ClearSheet</maml:name>
        <maml:Description>
          <maml:para>If the worksheet already exists, by default it will returned, unless -ClearSheet is specified in which case it will be deleted and re-created.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MoveToStart</maml:name>
        <maml:Description>
          <maml:para>If specified, the worksheet will be moved to the start of the workbook.</maml:para>
          <maml:para>MoveToStart takes precedence over MoveToEnd, Movebefore and MoveAfter if more than one is specified.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MoveToEnd</maml:name>
        <maml:Description>
          <maml:para>If specified, the worksheet will be moved to the end of the workbook.</maml:para>
          <maml:para>(This is the default position for newly created sheets, but it can be used to move existing sheets.)</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MoveBefore</maml:name>
        <maml:Description>
          <maml:para>If specified, the worksheet will be moved before the nominated one (which can be an index starting from 1, or a name).</maml:para>
          <maml:para>MoveBefore takes precedence over MoveAfter if both are specified.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MoveAfter</maml:name>
        <maml:Description>
          <maml:para>If specified, the worksheet will be moved after the nominated one (which can be an index starting from 1, or a name or *).</maml:para>
          <maml:para>If * is used, the worksheet names will be examined starting with the first one, and the sheet placed after the last sheet which comes before it alphabetically.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Activate</maml:name>
        <maml:Description>
          <maml:para>If there is already content in the workbook the new sheet will not be active UNLESS Activate is specified.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CopySource</maml:name>
        <maml:Description>
          <maml:para>If worksheet is provided as a copy source the new worksheet will be a copy of it. The source can be in the same workbook, or in a different file.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelWorksheet</command:parameterValue>
        <dev:type>
          <maml:name>ExcelWorksheet</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NoClobber</maml:name>
        <maml:Description>
          <maml:para>Ignored but retained for backwards compatibility.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>OfficeOpenXml.ExcelWorksheet</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>PS\&gt; $WorksheetActors = $ExcelPackage | Add-WorkSheet -WorkSheetname Actors</dev:code>
        <dev:remarks>
          <maml:para>$ExcelPackage holds an Excel package object (returned by Open-ExcelPackage, or Export-Excel -passthru). This command will add a sheet named 'Actors', or return the sheet if it exists, and the result is stored in $WorkSheetActors.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>PS\&gt; $WorksheetActors = Add-WorkSheet -ExcelPackage $ExcelPackage -WorkSheetname "Actors" -ClearSheet -MoveToStart</dev:code>
        <dev:remarks>
          <maml:para>This time the Excel package object is passed as a parameter instead of piped.</maml:para>
          <maml:para>If the 'Actors' sheet already exists it is deleted and re-created.</maml:para>
          <maml:para>The new sheet will be created last in the workbook, and -MoveToStart Moves it to the start.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <dev:code>PS\&gt; $null = Add-WorkSheet -ExcelWorkbook $wb -WorkSheetname $DestinationName -CopySource $sourceWs -Activate</dev:code>
        <dev:remarks>
          <maml:para>This time a workbook is used instead of a package, and a worksheet is copied - $SourceWs is a worksheet object, which can come from the same workbook or a different one.</maml:para>
          <maml:para>Here the new copy of the data is made the active sheet when the workbook is opened.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Close-ExcelPackage</command:name>
      <command:verb>Close</command:verb>
      <command:noun>ExcelPackage</command:noun>
      <maml:description>
        <maml:para>Closes an Excel Package, saving, saving under a new name or abandoning changes and opening the file in Excel as required.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>When working with an ExcelPackage object, the Workbook is held in memory and not saved until the .Save() method of the package is called.</maml:para>
      <maml:para>Close-ExcelPackage saves and disposes of the Package object.</maml:para>
      <maml:para>It can be called with -NoSave to abandon the file without saving, with a new "SaveAs" filename, and/or with a password to protect the file. And -Show will open the file in Excel; -Calculate will try to update the workbook, although not everything can be recalculated</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Close-ExcelPackage</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="none">
          <maml:name>ExcelPackage</maml:name>
          <maml:Description>
            <maml:para>Package to close.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ExcelPackage</command:parameterValue>
          <dev:type>
            <maml:name>ExcelPackage</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
          <maml:name>SaveAs</maml:name>
          <maml:Description>
            <maml:para>Save file with a new name (ignored if -NoSave Specified).</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
          <maml:name>Password</maml:name>
          <maml:Description>
            <maml:para>Password to protect the file.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Show</maml:name>
          <maml:Description>
            <maml:para>Open the file in Excel.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoSave</maml:name>
          <maml:Description>
            <maml:para>Abandon the file without saving.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Calculate</maml:name>
          <maml:Description>
            <maml:para>Attempt to recalculation the workbook before saving</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="none">
        <maml:name>ExcelPackage</maml:name>
        <maml:Description>
          <maml:para>Package to close.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelPackage</command:parameterValue>
        <dev:type>
          <maml:name>ExcelPackage</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Show</maml:name>
        <maml:Description>
          <maml:para>Open the file in Excel.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NoSave</maml:name>
        <maml:Description>
          <maml:para>Abandon the file without saving.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
        <maml:name>SaveAs</maml:name>
        <maml:Description>
          <maml:para>Save file with a new name (ignored if -NoSave Specified).</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
        <maml:name>Password</maml:name>
        <maml:Description>
          <maml:para>Password to protect the file.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Calculate</maml:name>
        <maml:Description>
          <maml:para>Attempt to recalculation the workbook before saving</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Close-ExcelPackage -show $excel</dev:code>
        <dev:remarks>
          <maml:para>$excel holds a package object, this saves the workbook and loads it into Excel.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Close-ExcelPackage -NoSave $excel</dev:code>
        <dev:remarks>
          <maml:para>$excel holds a package object, this disposes of it without writing it to disk.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Compare-WorkSheet</command:name>
      <command:verb>Compare</command:verb>
      <command:noun>WorkSheet</command:noun>
      <maml:description>
        <maml:para>Compares two worksheets and shows the differences.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>This command takes two file names, one or two worksheet names and a name for a "key" column.</maml:para>
      <maml:para>It reads the worksheet from each file and decides the column names and builds a hashtable of the key-column values and the rows in which they appear.</maml:para>
      <maml:para>It then uses PowerShell's Compare-Object command to compare the sheets (explicitly checking all the column names which have not been excluded).</maml:para>
      <maml:para>For the difference rows it adds the row number for the key of that row - we have to add the key after doing the comparison, otherwise identical rows at different positions in the file will not be considered a match.</maml:para>
      <maml:para>We also add the name of the file and sheet in which the difference occurs.</maml:para>
      <maml:para>If -BackgroundColor is specified the difference rows will be changed to that background in the orginal file.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Compare-WorkSheet</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>Referencefile</maml:name>
          <maml:Description>
            <maml:para>First file to compare.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
          <maml:name>Differencefile</maml:name>
          <maml:Description>
            <maml:para>Second file to compare.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>WorkSheetName</maml:name>
          <maml:Description>
            <maml:para>Name(s) of worksheets to compare.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Sheet1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Property</maml:name>
          <maml:Description>
            <maml:para>Properties to include in the comparison - supports wildcards, default is "*".</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>*</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExcludeProperty</maml:name>
          <maml:Description>
            <maml:para>Properties to exclude from the comparison - supports wildcards.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Headername</maml:name>
          <maml:Description>
            <maml:para>Specifies custom property names to use, instead of the values defined in the starting row of the sheet.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Startrow</maml:name>
          <maml:Description>
            <maml:para>The row from where we start to import data: all rows above the start row are disregarded. By default, this is the first row.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AllDataBackgroundColor</maml:name>
          <maml:Description>
            <maml:para>If specified, highlights all the cells - so you can make Equal cells one color, and Different cells another.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BackgroundColor</maml:name>
          <maml:Description>
            <maml:para>If specified, highlights the rows with differences.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TabColor</maml:name>
          <maml:Description>
            <maml:para>If specified identifies the tabs which contain difference rows (ignored if -BackgroundColor is omitted).</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Key</maml:name>
          <maml:Description>
            <maml:para>Name of a column which is unique and will be used to add a row to the DIFF object, defaults to "Name".</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Name</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FontColor</maml:name>
          <maml:Description>
            <maml:para>If specified, highlights the DIFF columns in rows which have the same key.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Show</maml:name>
          <maml:Description>
            <maml:para>If specified, opens the Excel workbooks instead of outputting the diff to the console (unless -PassThru is also specified).</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GridView</maml:name>
          <maml:Description>
            <maml:para>If specified, the command tries to the show the DIFF in a Grid-View and not on the console (unless-PassThru is also specified). This works best with few columns selected, and requires a key.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PassThru</maml:name>
          <maml:Description>
            <maml:para>If specified a full set of DIFF data is returned without filtering to the specified properties.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>IncludeEqual</maml:name>
          <maml:Description>
            <maml:para>If specified the result will include equal rows as well. By default only different rows are returned.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExcludeDifferent</maml:name>
          <maml:Description>
            <maml:para>If specified, the result includes only the rows where both are equal.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Compare-WorkSheet</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>Referencefile</maml:name>
          <maml:Description>
            <maml:para>First file to compare.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
          <maml:name>Differencefile</maml:name>
          <maml:Description>
            <maml:para>Second file to compare.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>WorkSheetName</maml:name>
          <maml:Description>
            <maml:para>Name(s) of worksheets to compare.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Sheet1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Property</maml:name>
          <maml:Description>
            <maml:para>Properties to include in the comparison - supports wildcards, default is "*".</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>*</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExcludeProperty</maml:name>
          <maml:Description>
            <maml:para>Properties to exclude from the comparison - supports wildcards.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoHeader</maml:name>
          <maml:Description>
            <maml:para>Automatically generate property names (P1, P2, P3 ...) instead of the using the values the starting row of the sheet.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Startrow</maml:name>
          <maml:Description>
            <maml:para>The row from where we start to import data: all rows above the start row are disregarded. By default, this is the first row.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AllDataBackgroundColor</maml:name>
          <maml:Description>
            <maml:para>If specified, highlights all the cells - so you can make Equal cells one color, and Different cells another.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BackgroundColor</maml:name>
          <maml:Description>
            <maml:para>If specified, highlights the rows with differences.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TabColor</maml:name>
          <maml:Description>
            <maml:para>If specified identifies the tabs which contain difference rows (ignored if -BackgroundColor is omitted).</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Key</maml:name>
          <maml:Description>
            <maml:para>Name of a column which is unique and will be used to add a row to the DIFF object, defaults to "Name".</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Name</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FontColor</maml:name>
          <maml:Description>
            <maml:para>If specified, highlights the DIFF columns in rows which have the same key.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Show</maml:name>
          <maml:Description>
            <maml:para>If specified, opens the Excel workbooks instead of outputting the diff to the console (unless -PassThru is also specified).</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GridView</maml:name>
          <maml:Description>
            <maml:para>If specified, the command tries to the show the DIFF in a Grid-View and not on the console (unless-PassThru is also specified). This works best with few columns selected, and requires a key.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PassThru</maml:name>
          <maml:Description>
            <maml:para>If specified a full set of DIFF data is returned without filtering to the specified properties.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>IncludeEqual</maml:name>
          <maml:Description>
            <maml:para>If specified the result will include equal rows as well. By default only different rows are returned.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExcludeDifferent</maml:name>
          <maml:Description>
            <maml:para>If specified, the result includes only the rows where both are equal.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
        <maml:name>Referencefile</maml:name>
        <maml:Description>
          <maml:para>First file to compare.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
        <maml:name>Differencefile</maml:name>
        <maml:Description>
          <maml:para>Second file to compare.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>WorkSheetName</maml:name>
        <maml:Description>
          <maml:para>Name(s) of worksheets to compare.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Sheet1</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Property</maml:name>
        <maml:Description>
          <maml:para>Properties to include in the comparison - supports wildcards, default is "*".</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>*</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ExcludeProperty</maml:name>
        <maml:Description>
          <maml:para>Properties to exclude from the comparison - supports wildcards.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Headername</maml:name>
        <maml:Description>
          <maml:para>Specifies custom property names to use, instead of the values defined in the starting row of the sheet.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NoHeader</maml:name>
        <maml:Description>
          <maml:para>Automatically generate property names (P1, P2, P3 ...) instead of the using the values the starting row of the sheet.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Startrow</maml:name>
        <maml:Description>
          <maml:para>The row from where we start to import data: all rows above the start row are disregarded. By default, this is the first row.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>1</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AllDataBackgroundColor</maml:name>
        <maml:Description>
          <maml:para>If specified, highlights all the cells - so you can make Equal cells one color, and Different cells another.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BackgroundColor</maml:name>
        <maml:Description>
          <maml:para>If specified, highlights the rows with differences.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>TabColor</maml:name>
        <maml:Description>
          <maml:para>If specified identifies the tabs which contain difference rows (ignored if -BackgroundColor is omitted).</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Key</maml:name>
        <maml:Description>
          <maml:para>Name of a column which is unique and will be used to add a row to the DIFF object, defaults to "Name".</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Name</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>FontColor</maml:name>
        <maml:Description>
          <maml:para>If specified, highlights the DIFF columns in rows which have the same key.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Show</maml:name>
        <maml:Description>
          <maml:para>If specified, opens the Excel workbooks instead of outputting the diff to the console (unless -PassThru is also specified).</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>GridView</maml:name>
        <maml:Description>
          <maml:para>If specified, the command tries to the show the DIFF in a Grid-View and not on the console (unless-PassThru is also specified). This works best with few columns selected, and requires a key.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PassThru</maml:name>
        <maml:Description>
          <maml:para>If specified a full set of DIFF data is returned without filtering to the specified properties.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>IncludeEqual</maml:name>
        <maml:Description>
          <maml:para>If specified the result will include equal rows as well. By default only different rows are returned.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ExcludeDifferent</maml:name>
        <maml:Description>
          <maml:para>If specified, the result includes only the rows where both are equal.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>PS\&gt; Compare-WorkSheet -Referencefile 'Server56.xlsx' -Differencefile 'Server57.xlsx' -WorkSheetName Products -key IdentifyingNumber -ExcludeProperty Install* | Format-Table</dev:code>
        <dev:remarks>
          <maml:para>The two workbooks in this example contain the result of redirecting a subset of properties from Get-WmiObject -Class win32_product to Export-Excel.</maml:para>
          <maml:para>The command compares the "Products" pages in the two workbooks, but we don't want to register a difference if the software was installed on a different date or from a different place, and excluding Install* removes InstallDate and InstallSource.</maml:para>
          <maml:para>This data doesn't have a "Name" column, so we specify the "IdentifyingNumber" column as the key.</maml:para>
          <maml:para>The results will be presented as a table.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>PS\&gt; Compare-WorkSheet "Server54.xlsx" "Server55.xlsx" -WorkSheetName Services -GridView</dev:code>
        <dev:remarks>
          <maml:para>This time two workbooks contain the result of redirecting the command Get-WmiObject -Class win32_service to Export-Excel.</maml:para>
          <maml:para>Here the -Differencefile and -Referencefile parameter switches are assumed and the default setting for -Key ("Name") works for services.</maml:para>
          <maml:para>This will display the differences between the "Services" sheets using a grid view</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <dev:code>PS\&gt; Compare-WorkSheet 'Server54.xlsx' 'Server55.xlsx' -WorkSheetName Services -BackgroundColor lightGreen</dev:code>
        <dev:remarks>
          <maml:para>This version of the command outputs the differences between the "services" pages and highlights any different rows in the spreadsheet files.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
        <dev:code>PS\&gt; Compare-WorkSheet 'Server54.xlsx' 'Server55.xlsx' -WorkSheetName Services -BackgroundColor lightGreen -FontColor Red -Show</dev:code>
        <dev:remarks>
          <maml:para>This example builds on the previous one: this time where two changed rows have the value in the "Name" column (the default value for -Key), this version adds highlighting of the changed cells in red; and then opens the Excel file.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 5 --------------------------</maml:title>
        <dev:code>PS\&gt; Compare-WorkSheet 'Pester-tests.xlsx' 'Pester-tests.xlsx' -WorkSheetName 'Server1','Server2' -Property "full Description","Executed","Result" -Key "full Description"</dev:code>
        <dev:remarks>
          <maml:para>This time the reference file and the difference file are the same file and two different sheets are used.</maml:para>
          <maml:para>Because the tests include the machine name and time the test was run, the command specifies that a limited set of columns should be used.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 6 --------------------------</maml:title>
        <dev:code>PS\&gt; Compare-WorkSheet 'Server54.xlsx' 'Server55.xlsx' -WorkSheetName general -Startrow 2 -Headername Label,value -Key Label -GridView -ExcludeDifferent</dev:code>
        <dev:remarks>
          <maml:para>The "General" page in the two workbooks has a title and two unlabelled columns with a row each for CPU, Memory, Domain, Disk and so on.</maml:para>
          <maml:para>So the command is told to start at row 2 in order to skip the title and given names for the columns: the first is "label" and the second "Value"; the label acts as the key.</maml:para>
          <maml:para>This time we are interested in those rows which are the same in both sheets, and the result is displayed using grid view.</maml:para>
          <maml:para>Note that grid view works best when the number of columns is small.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 7 --------------------------</maml:title>
        <dev:code>PS\&gt;Compare-WorkSheet 'Server1.xlsx' 'Server2.xlsx' -WorkSheetName general -Startrow 2 -Headername Label,value -Key Label -BackgroundColor White -Show -AllDataBackgroundColor LightGray</dev:code>
        <dev:remarks>
          <maml:para>This version of the previous command highlights all the cells in LightGray and then sets the changed rows back to white.</maml:para>
          <maml:para>Only the unchanged rows are highlighted.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Convert-ExcelRangeToImage</command:name>
      <command:verb>Convert</command:verb>
      <command:noun>ExcelRangeToImage</command:noun>
      <maml:description>
        <maml:para>Gets the specified part of an Excel file and exports it as an image</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Excel allows charts to be exported directly to a file, but it can't do this with the rest of a sheet. To work round this, this function</maml:para>
      <maml:para>* Opens a copy of Excel and loads a file</maml:para>
      <maml:para>* Selects a worksheet and then a range of cells in that worksheet</maml:para>
      <maml:para>* Copies the select to the clipboard</maml:para>
      <maml:para>* Saves the clipboard contents as an image file (it will save as .JPG unless the file name ends .BMP or .PNG)</maml:para>
      <maml:para>* Copies a single cell to the clipboard (to prevent the "you have put a lot in the clipboard" message appearing)</maml:para>
      <maml:para>* Closes Excel</maml:para>
      <maml:para>Unlike most functions in the module it needs a local copy of Excel to be installed.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Convert-ExcelRangeToImage</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>Path</maml:name>
          <maml:Description>
            <maml:para>Path to the Excel file</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
          <maml:name>WorkSheetname</maml:name>
          <maml:Description>
            <maml:para>Worksheet name - if none is specified "Sheet1" will be assumed</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Sheet1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
          <maml:name>Range</maml:name>
          <maml:Description>
            <maml:para>Range of cells within the sheet, e.g "A1:Z99"</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="none">
          <maml:name>Destination</maml:name>
          <maml:Description>
            <maml:para>A bmp, png or jpg file where the result will be saved</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>"$pwd\temp.png"</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Show</maml:name>
          <maml:Description>
            <maml:para>If specified opens the image in the default viewer.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
        <maml:name>Path</maml:name>
        <maml:Description>
          <maml:para>Path to the Excel file</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
        <maml:name>WorkSheetname</maml:name>
        <maml:Description>
          <maml:para>Worksheet name - if none is specified "Sheet1" will be assumed</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Sheet1</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
        <maml:name>Range</maml:name>
        <maml:Description>
          <maml:para>Range of cells within the sheet, e.g "A1:Z99"</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="none">
        <maml:name>Destination</maml:name>
        <maml:Description>
          <maml:para>A bmp, png or jpg file where the result will be saved</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>"$pwd\temp.png"</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Show</maml:name>
        <maml:Description>
          <maml:para>If specified opens the image in the default viewer.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples />
    <command:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>ConvertFrom-ExcelSheet</command:name>
      <command:verb>ConvertFrom</command:verb>
      <command:noun>ExcelSheet</command:noun>
      <maml:description>
        <maml:para>Exports Sheets from Excel Workbooks to CSV files.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>This command provides a convenient way to run Import-Excel @ImportParameters | Select-Object @selectParameters | export-Csv @ ExportParameters It can take the parameters -AsText , as used in Import-Excel, )Properties &amp; -ExcludeProperties as used in Select-Object and -Append, -Delimiter and -Encoding as used in Export-CSV</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>ConvertFrom-ExcelSheet</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
          <maml:name>Path</maml:name>
          <maml:Description>
            <maml:para>The path to the .XLSX file which will be exported.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>OutputPath</maml:name>
          <maml:Description>
            <maml:para>The directory where the output file(s) will be created. The file name(s) will match the name of the workbook page which contained the data.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
          <maml:name>SheetName</maml:name>
          <maml:Description>
            <maml:para>The name of a sheet to export, or a regular expression which is used to identify sheets</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
          <maml:name>Encoding</maml:name>
          <maml:Description>
            <maml:para>Sets the text encoding for the output data file; UTF8 bu default</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Encoding</command:parameterValue>
          <dev:type>
            <maml:name>Encoding</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="none">
          <maml:name>Extension</maml:name>
          <maml:Description>
            <maml:para>Sets the file extension for the exported data, defaults to CSV</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">.txt</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">.log</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">.csv</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="5" aliases="none">
          <maml:name>Delimiter</maml:name>
          <maml:Description>
            <maml:para>Selects , or ; as the delimeter for the exported data - if not specified , is used by default.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">;</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false"></command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false"></command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="6" aliases="none">
          <maml:name>Property</maml:name>
          <maml:Description>
            <maml:para>Specifies the properties to select. Wildcards are permitted - the default is "*". The value of the Property parameter can be a new calculated property, and follows the same pattern as Select-Item</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="7" aliases="none">
          <maml:name>ExcludeProperty</maml:name>
          <maml:Description>
            <maml:para>Specifies the properties that to exclude from the export. Wildcards are permitted. This parameter is effective only when the command also includes the Property parameter.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="8" aliases="none">
          <maml:name>AsText</maml:name>
          <maml:Description>
            <maml:para>AsText allows selected columns to be returned as the text displayed in their cells, instead of their value. (* is supported as a wildcard.)</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="8" aliases="none">
          <maml:name>AsDate</maml:name>
          <maml:Description>
            <maml:para>Not all date formats are recognized as indicating the number in the cell represents a date  AsDate forces the number which would be returned to be converted to a date. (* is supported as a wildcard.)</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Append</maml:name>
          <maml:Description>
            <maml:para>Use this parameter to have the export add output to the end of the file. Without this parameter,  the command replaces the file contents without warning.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Append</maml:name>
        <maml:Description>
          <maml:para>Use this parameter to have the export add output to the end of the file. Without this parameter,  the command replaces the file contents without warning.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="8" aliases="none">
        <maml:name>AsText</maml:name>
        <maml:Description>
          <maml:para>AsText allows selected columns to be returned as the text displayed in their cells, instead of their value. (* is supported as a wildcard.)</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="8" aliases="none">
        <maml:name>AsDate</maml:name>
        <maml:Description>
          <maml:para>Not all date formats are recognized as indicating the number in the cell represents a date  AsDate forces the number which would be returned to be converted to a date. (* is supported as a wildcard.)</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="5" aliases="none">
        <maml:name>Delimiter</maml:name>
        <maml:Description>
          <maml:para>Selects , or ; as the delimeter for the exported data - if not specified , is used by default.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
        <maml:name>Encoding</maml:name>
        <maml:Description>
          <maml:para>Sets the text encoding for the output data file; UTF8 bu default</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Encoding</command:parameterValue>
        <dev:type>
          <maml:name>Encoding</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="7" aliases="none">
        <maml:name>ExcludeProperty</maml:name>
        <maml:Description>
          <maml:para>Specifies the properties that to exclude from the export. Wildcards are permitted. This parameter is effective only when the command also includes the Property parameter.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="none">
        <maml:name>Extension</maml:name>
        <maml:Description>
          <maml:para>Sets the file extension for the exported data, defaults to CSV</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
        <maml:name>OutputPath</maml:name>
        <maml:Description>
          <maml:para>The directory where the output file(s) will be created. The file name(s) will match the name of the workbook page which contained the data.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
        <maml:name>Path</maml:name>
        <maml:Description>
          <maml:para>The path to the .XLSX file which will be exported.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="6" aliases="none">
        <maml:name>Property</maml:name>
        <maml:Description>
          <maml:para>Specifies the properties to select. Wildcards are permitted - the default is "*". The value of the Property parameter can be a new calculated property, and follows the same pattern as Select-Item</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
        <maml:name>SheetName</maml:name>
        <maml:Description>
          <maml:para>The name of a sheet to export, or a regular expression which is used to identify sheets</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>System.Object</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>PS C:\&gt; ConvertFrom-ExcelSheet Path .\__tests__\First10Races.xlsx -OutputPath .. -AsText GridPosition,date</dev:code>
        <dev:remarks>
          <maml:para>First10Races.xlsx contains information about Motor races. The race date and grid (starting) position are stored with custom formats. The command specifies the path to the file, and the directory to create the output file, and specifies that the columns "GridPosition" and "Date" should be treated as text to preserve their formatting</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>PS C:\&gt; ConvertFrom-ExcelSheet Path .\__tests__\First10Races.xlsx -OutputPath .. -AsText "GridPosition" -Property driver, @{n="date"; e={[datetime]::FromOADate($_.Date).tostring("#MM/dd/yyyy#")}} , FinishPosition, GridPosition</dev:code>
        <dev:remarks>
          <maml:para>This uses the same file as example 1. Because the race date has a custom format, it imports as a number, The requirement is to create a CSV file with the Driver, a specially formatted Date, FinishPostion and GridPostion (keeping its custom formatting). The command specifies the path to the file, and the directory to create the output file, specifies that the column "GridPosition" should be treated as text instead of a number, and the output properties should be Driver, a calculated "date" field, FinishPosition and GridPsition. FromOADate converts the dates used by Excel (Days since Jan 1 1900) to a datetime object.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/dfinke/ImportExcel</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>ConvertFrom-ExcelToSQLInsert</command:name>
      <command:verb>ConvertFrom</command:verb>
      <command:noun>ExcelToSQLInsert</command:noun>
      <maml:description>
        <maml:para>Generate SQL insert statements from Excel spreadsheet.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Generate SQL insert statements from Excel spreadsheet.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>ConvertFrom-ExcelToSQLInsert</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>TableName</maml:name>
          <maml:Description>
            <maml:para>Name of the target database table.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="2" aliases="FullName">
          <maml:name>Path</maml:name>
          <maml:Description>
            <maml:para>Path to an existing .XLSX file This parameter is passed to Import-Excel as is.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="Sheet">
          <maml:name>WorkSheetname</maml:name>
          <maml:Description>
            <maml:para>Specifies the name of the worksheet in the Excel workbook to import. By default, if no name is provided, the first worksheet will be imported. This parameter is passed to Import-Excel as is.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="HeaderRow, TopRow">
          <maml:name>StartRow</maml:name>
          <maml:Description>
            <maml:para>The row from where we start to import data, all rows above the StartRow are disregarded. By default this is the first row. When the parameters '-NoHeader' and '-HeaderName' are not provided, this row will contain the column headers that will be used as property names. When one of both parameters are provided, the property names are automatically created and this row will be treated as a regular row containing data.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="5" aliases="none">
          <maml:name>Header</maml:name>
          <maml:Description>
            <maml:para>Specifies custom property names to use, instead of the values defined in the column headers of the TopRow. If you provide fewr header names than there is data in the worksheet, then only the data with a corresponding header name will be imported and the data without header name will be disregarded. If you provide more header names than there is data in the worksheet, then all data will be imported and all objects will have all the property names you defined in the header names. As such, the last properties will be blank as there is no data for them.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoHeader</maml:name>
          <maml:Description>
            <maml:para>Automatically generate property names (P1, P2, P3, ..) instead of the ones defined in the column headers of the TopRow. This switch is best used when you want to import the complete worksheet 'as is' and are not concerned with the property names.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DataOnly</maml:name>
          <maml:Description>
            <maml:para>Import only rows and columns that contain data, empty rows and empty columns are not imported.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConvertEmptyStringsToNull</maml:name>
          <maml:Description>
            <maml:para>If specified, cells without any data are replaced with NULL, instead of an empty string. This is to address behviors in certain DBMS where an empty string is insert as 0 for INT column, instead of a NULL value.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>UseMSSQLSyntax</maml:name>
          <maml:Description>
            <maml:para>{{ Fill UseMSSQLSyntax Description }}</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
        <maml:name>TableName</maml:name>
        <maml:Description>
          <maml:para>Name of the target database table.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="2" aliases="FullName">
        <maml:name>Path</maml:name>
        <maml:Description>
          <maml:para>Path to an existing .XLSX file This parameter is passed to Import-Excel as is.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="Sheet">
        <maml:name>WorkSheetname</maml:name>
        <maml:Description>
          <maml:para>Specifies the name of the worksheet in the Excel workbook to import. By default, if no name is provided, the first worksheet will be imported. This parameter is passed to Import-Excel as is.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>1</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="HeaderRow, TopRow">
        <maml:name>StartRow</maml:name>
        <maml:Description>
          <maml:para>The row from where we start to import data, all rows above the StartRow are disregarded. By default this is the first row. When the parameters '-NoHeader' and '-HeaderName' are not provided, this row will contain the column headers that will be used as property names. When one of both parameters are provided, the property names are automatically created and this row will be treated as a regular row containing data.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="5" aliases="none">
        <maml:name>Header</maml:name>
        <maml:Description>
          <maml:para>Specifies custom property names to use, instead of the values defined in the column headers of the TopRow. If you provide fewr header names than there is data in the worksheet, then only the data with a corresponding header name will be imported and the data without header name will be disregarded. If you provide more header names than there is data in the worksheet, then all data will be imported and all objects will have all the property names you defined in the header names. As such, the last properties will be blank as there is no data for them.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NoHeader</maml:name>
        <maml:Description>
          <maml:para>Automatically generate property names (P1, P2, P3, ..) instead of the ones defined in the column headers of the TopRow. This switch is best used when you want to import the complete worksheet 'as is' and are not concerned with the property names.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>DataOnly</maml:name>
        <maml:Description>
          <maml:para>Import only rows and columns that contain data, empty rows and empty columns are not imported.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConvertEmptyStringsToNull</maml:name>
        <maml:Description>
          <maml:para>If specified, cells without any data are replaced with NULL, instead of an empty string. This is to address behviors in certain DBMS where an empty string is insert as 0 for INT column, instead of a NULL value.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>UseMSSQLSyntax</maml:name>
        <maml:Description>
          <maml:para>{{ Fill UseMSSQLSyntax Description }}</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Generate SQL insert statements from Movies.xlsx file, leaving blank cells as empty strings:

----------------------------------------------------------
| File: Movies.xlsx            -           Sheet: Sheet1 |
----------------------------------------------------------
|           A            B            C                  |
|1     Movie Name      Year         Rating               |
|2     The Bodyguard   1992           9                  |
|3     The Matrix      1999           8                  |
|4     Skyfall         2012           9                  |
|5     The Avengers    2012                              |
----------------------------------------------------------

PS C:\&gt;  ConvertFrom-ExcelToSQLInsert -TableName "Movies" -Path 'C:\Movies.xlsx'
INSERT INTO Movies ('Movie Name', 'Year', 'Rating') Values('The Bodyguard', '1992', '9');
INSERT INTO Movies ('Movie Name', 'Year', 'Rating') Values('The Matrix', '1999', '8');
INSERT INTO Movies ('Movie Name', 'Year', 'Rating') Values('Skyfall', '2012', '9');
INSERT INTO Movies ('Movie Name', 'Year', 'Rating') Values('The Avengers', '2012', '');</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Generate SQL insert statements from Movies.xlsx file, specify NULL instead of an empty string.

----------------------------------------------------------
| File: Movies.xlsx            -           Sheet: Sheet1 |
----------------------------------------------------------
|           A            B            C                  |
|1     Movie Name      Year         Rating               |
|2     The Bodyguard   1992           9                  |
|3     The Matrix      1999           8                  |
|4     Skyfall         2012           9                  |
|5     The Avengers    2012                              |
----------------------------------------------------------

PS C:\&gt; ConvertFrom-ExcelToSQLInsert -TableName "Movies" -Path "C:\Movies.xlsx" -ConvertEmptyStringsToNull
INSERT INTO Movies ('Movie Name', 'Year', 'Rating') Values('The Bodyguard', '1992', '9');
INSERT INTO Movies ('Movie Name', 'Year', 'Rating') Values('The Matrix', '1999', '8');
INSERT INTO Movies ('Movie Name', 'Year', 'Rating') Values('Skyfall', '2012', '9');
INSERT INTO Movies ('Movie Name', 'Year', 'Rating') Values('The Avengers', '2012', NULL);</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Copy-ExcelWorkSheet</command:name>
      <command:verb>Copy</command:verb>
      <command:noun>ExcelWorkSheet</command:noun>
      <maml:description>
        <maml:para>Copies a worksheet between workbooks or within the same workbook.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Copy-ExcelWorkSheet takes a Source object which is either a worksheet, or a package, Workbook or path, in which case the source worksheet can be specified by name or number (starting from 1). The destination worksheet can be explicitly named, or will follow the name of the source if no name is specified. The Destination workbook can be given as the path to an XLSx file, an ExcelPackage object or an ExcelWorkbook object.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Copy-ExcelWorkSheet</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="SourceWorkbook">
          <maml:name>SourceObject</maml:name>
          <maml:Description>
            <maml:para>An ExcelWorkbook or ExcelPackage object or the path to an XLSx file where the data is found.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
          <maml:name>SourceWorkSheet</maml:name>
          <maml:Description>
            <maml:para>Name or number (starting from 1) of the worksheet in the source workbook (defaults to 1).</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
          <maml:name>DestinationWorkbook</maml:name>
          <maml:Description>
            <maml:para>An ExcelWorkbook or ExcelPackage object or the path to an XLSx file where the data should be copied.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="none">
          <maml:name>DestinationWorksheet</maml:name>
          <maml:Description>
            <maml:para>Name of the worksheet in the destination workbook; by default the same as the source worksheet's name. If the sheet exists it will be deleted and re-copied.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Show</maml:name>
          <maml:Description>
            <maml:para>if the destination is an excel package or a path, launch excel and open the file on completion.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="SourceWorkbook">
        <maml:name>SourceObject</maml:name>
        <maml:Description>
          <maml:para>An ExcelWorkbook or ExcelPackage object or the path to an XLSx file where the data is found.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
        <maml:name>SourceWorkSheet</maml:name>
        <maml:Description>
          <maml:para>Name or number (starting from 1) of the worksheet in the source workbook (defaults to 1).</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>1</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
        <maml:name>DestinationWorkbook</maml:name>
        <maml:Description>
          <maml:para>An ExcelWorkbook or ExcelPackage object or the path to an XLSx file where the data should be copied.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="none">
        <maml:name>DestinationWorksheet</maml:name>
        <maml:Description>
          <maml:para>Name of the worksheet in the destination workbook; by default the same as the source worksheet's name. If the sheet exists it will be deleted and re-copied.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Show</maml:name>
        <maml:Description>
          <maml:para>if the destination is an excel package or a path, launch excel and open the file on completion.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Copy-ExcelWorkSheet -SourceWorkbook Test1.xlsx  -DestinationWorkbook Test2.xlsx</dev:code>
        <dev:remarks>
          <maml:para>This is the simplest version of the command: no source worksheet is specified so Copy-ExcelWorksheet uses the first sheet in the workbook No Destination sheet is specified so the new worksheet will be the same as the one which is being copied.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Copy-ExcelWorkSheet -SourceWorkbook Server1.xlsx -sourceWorksheet "Settings" -DestinationWorkbook Settings.xlsx -DestinationWorksheet "Server1"</dev:code>
        <dev:remarks>
          <maml:para>Here the Settings page from Server1's workbook is copied to the 'Server1" page of a "Settings" workbook.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <dev:code>$excel = Open-ExcelPackage   .\test.xlsx</dev:code>
        <dev:remarks>
          <maml:para>C:\&gt; Copy-ExcelWorkSheet -SourceWorkbook  $excel -SourceWorkSheet "first" -DestinationWorkbook $excel -Show -DestinationWorksheet Duplicate This opens the workbook test.xlsx and copies the worksheet named "first" to a new worksheet named "Duplicate", because -Show is specified the file is saved and opened in Excel</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
        <dev:code>$excel = Open-ExcelPackage .\test.xlsx</dev:code>
        <dev:remarks>
          <maml:para>C:\&gt; Copy-ExcelWorkSheet -SourceWorkbook  $excel -SourceWorkSheet 1 -DestinationWorkbook $excel  -DestinationWorksheet Duplicate C:\&gt; Close-ExcelPackage $excel This is almost the same as the previous example, except source sheet is specified by position rather than name and because -Show is not specified, so other steps can be carried using the package object, at the end the file is saved by Close-ExcelPackage</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Expand-NumberFormat</command:name>
      <command:verb>Expand</command:verb>
      <command:noun>NumberFormat</command:noun>
      <maml:description>
        <maml:para>Converts short names for number formats to the formatting strings used in Excel</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Where you can type a number format you can write, for example, 'Short-Date' and the module will translate it into the format string used by Excel. Some formats, like Short-Date, change when Excel loads (so date will use the local ordering of year, month and Day). Excel also changes how markers in the are presented different cultures "," is used in the format string to mean "local thousand seperator" but depending on the country "," or "." or " " may used as the thousand seperator.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Expand-NumberFormat</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>NumberFormat</maml:name>
          <maml:Description>
            <maml:para>The format string to Expand</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
        <maml:name>NumberFormat</maml:name>
        <maml:Description>
          <maml:para>The format string to Expand</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>System.String</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Expand-NumberFormat percentage</dev:code>
        <dev:remarks>
          <maml:para>Returns "0.00%"</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Expand-NumberFormat Currency</dev:code>
        <dev:remarks>
          <maml:para>Returns the currency format specified in the local regional settings, which may not be the same as Excel uses.</maml:para>
          <maml:para>The regional settings set the currency symbol and then whether it is before or after the number and separated with a space or not; for negative numbers the number may be wrapped in parentheses or a - sign might appear before or after the number and symbol.</maml:para>
          <maml:para>So this returns $#,##0.00;($#,##0.00) for English US, #,##0.00 €;€#,##0.00- for French.</maml:para>
          <maml:para>Note some Eurozone countries write €1,23 and others 1,23€. In French the decimal point will be rendered as a "," and the thousand separator as a space.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Export-Excel</command:name>
      <command:verb>Export</command:verb>
      <command:noun>Excel</command:noun>
      <maml:description>
        <maml:para>Exports data to an Excel worksheet.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Exports data to an Excel file and where possible tries to convert numbers in text fields so Excel recognizes them as numbers instead of text. After all: Excel is a spreadsheet program used for number manipulation and calculations. The parameter -NoNumberConversion * can be used if number conversion is not desired.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Export-Excel</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>Path</maml:name>
          <maml:Description>
            <maml:para>Path to a new or existing .XLSX file.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="TargetData">
          <maml:name>InputObject</maml:name>
          <maml:Description>
            <maml:para>Date is usually piped into Export-Excel, but it also accepts data through the InputObject parameter</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Calculate</maml:name>
          <maml:Description>
            <maml:para>If specified, a recalculation of the worksheet will be requested before saving.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Show</maml:name>
          <maml:Description>
            <maml:para>Opens the Excel file immediately after creation; convenient for viewing the results instantly without having to search for the file first.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>WorksheetName</maml:name>
          <maml:Description>
            <maml:para>The name of a sheet within the workbook - "Sheet1" by default.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Sheet1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Password</maml:name>
          <maml:Description>
            <maml:para>Sets password protection on the workbook.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ClearSheet</maml:name>
          <maml:Description>
            <maml:para>If specified Export-Excel will remove any existing worksheet with the selected name.</maml:para>
            <maml:para>The default behaviour is to overwrite cells in this sheet as needed (but leaving non-overwritten ones in place).</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Append</maml:name>
          <maml:Description>
            <maml:para>If specified data will be added to the end of an existing sheet, using the same column headings.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Title</maml:name>
          <maml:Description>
            <maml:para>Text of a title to be placed in the top left cell.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TitleFillPattern</maml:name>
          <maml:Description>
            <maml:para>Sets the fill pattern for the title cell.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Solid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Gray125</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Gray0625</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkVertical</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkHorizontal</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkDown</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkUp</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkGrid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkTrellis</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightVertical</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightHorizontal</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightDown</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightUp</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightGrid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightTrellis</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelFillStyle</command:parameterValue>
          <dev:type>
            <maml:name>ExcelFillStyle</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Solid</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TitleBold</maml:name>
          <maml:Description>
            <maml:para>Sets the title in boldface type.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TitleSize</maml:name>
          <maml:Description>
            <maml:para>Sets the point size for the title.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>22</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TitleBackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Sets the cell background color for the title cell.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>IncludePivotTable</maml:name>
          <maml:Description>
            <maml:para>Adds a PivotTable using the data in the worksheet.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotTableName</maml:name>
          <maml:Description>
            <maml:para>If a PivotTable is created from command line parameters, specifies the name of the new sheet holding the pivot. Defaults to "WorksheetName-PivotTable".</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotRows</maml:name>
          <maml:Description>
            <maml:para>Name(s) of column(s) from the spreadsheet which will provide the Row name(s) in a PivotTable created from command line parameters.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotColumns</maml:name>
          <maml:Description>
            <maml:para>Name(s) of columns from the spreadsheet which will provide the Column name(s) in a PivotTable created from command line parameters.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotData</maml:name>
          <maml:Description>
            <maml:para>In a PivotTable created from command line parameters, the fields to use in the table body are given as a Hash-table in the form</maml:para>
            <maml:para>ColumnName = Average|Count|CountNums|Max|Min|Product|None|StdDev|StdDevP|Sum|Var|VarP.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotFilter</maml:name>
          <maml:Description>
            <maml:para>Name(s) columns from the spreadsheet which will provide the Filter name(s) in a PivotTable created from command line parameters.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotDataToColumn</maml:name>
          <maml:Description>
            <maml:para>If there are multiple datasets in a PivotTable, by default they are shown as separate rows under the given row heading; this switch makes them separate columns.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotTableDefinition</maml:name>
          <maml:Description>
            <maml:para>Instead of describing a single PivotTable with multiple command-line parameters; you can use a HashTable in the form PivotTableName = Definition;</maml:para>
            <maml:para>In this table Definition is itself a Hashtable with Sheet, PivotRows, PivotColumns, PivotData, IncludePivotChart and ChartType values. The New-PivotTableDefinition command will create the definition from a command line.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>IncludePivotChart</maml:name>
          <maml:Description>
            <maml:para>Include a chart with the PivotTable - implies -IncludePivotTable.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ChartType</maml:name>
          <maml:Description>
            <maml:para>The type for PivotChart (one of Excel's defined chart types).</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Area</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Line</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Pie</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Bubble</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnClustered3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnStacked3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnStacked1003D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarClustered3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarStacked3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarStacked1003D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineMarkers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineMarkersStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineMarkersStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PieOfPie</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PieExploded</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PieExploded3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarOfPie</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatterSmooth</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatterSmoothNoMarkers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatterLines</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatterLinesNoMarkers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AreaStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AreaStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AreaStacked3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AreaStacked1003D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DoughnutExploded</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">RadarMarkers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">RadarFilled</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Surface</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SurfaceWireframe</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SurfaceTopView</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SurfaceTopViewWireframe</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Bubble3DEffect</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">StockHLC</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">StockOHLC</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">StockVHLC</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">StockVOHLC</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderColClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderColStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderColStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderBarClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderBarStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderBarStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderCol</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeColClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeColStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeColStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeBarClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeBarStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeBarStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeCol</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidColClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidColStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidColStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidBarClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidBarStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidBarStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidCol</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatter</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Radar</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Doughnut</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Pie3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Line3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Column3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Area3D</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">eChartType</command:parameterValue>
          <dev:type>
            <maml:name>eChartType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Pie</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoLegend</maml:name>
          <maml:Description>
            <maml:para>Exclude the legend from the PivotChart.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ShowCategory</maml:name>
          <maml:Description>
            <maml:para>Add category labels to the PivotChart.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ShowPercent</maml:name>
          <maml:Description>
            <maml:para>Add percentage labels to the PivotChart.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AutoSize</maml:name>
          <maml:Description>
            <maml:para>Sizes the width of the Excel column to the maximum width needed to display all the containing data in that cell.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MaxAutoSizeRows</maml:name>
          <maml:Description>
            <maml:para>Autosizing can be time consuming, so this sets a maximum number of rows to look at for the Autosize operation. Default is 1000; If 0 is specified ALL rows will be checked</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1000</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoClobber</maml:name>
          <maml:Description>
            <maml:para>Not used. Left in to avoid problems with older scripts, it may be removed in future versions.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FreezeTopRow</maml:name>
          <maml:Description>
            <maml:para>Freezes headers etc. in the top row.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FreezeFirstColumn</maml:name>
          <maml:Description>
            <maml:para>Freezes titles etc. in the left column.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FreezeTopRowFirstColumn</maml:name>
          <maml:Description>
            <maml:para>Freezes top row and left column (equivalent to Freeze pane 2,2 ).</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FreezePane</maml:name>
          <maml:Description>
            <maml:para>Freezes panes at specified coordinates (in the form  RowNumber, ColumnNumber).</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
          <dev:type>
            <maml:name>Int32[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AutoFilter</maml:name>
          <maml:Description>
            <maml:para>Enables the Excel filter on the complete header row, so users can easily sort, filter and/or search the data in the selected column.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BoldTopRow</maml:name>
          <maml:Description>
            <maml:para>Makes the top row boldface.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoHeader</maml:name>
          <maml:Description>
            <maml:para>Specifies that field names should not be put at the top of columns.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RangeName</maml:name>
          <maml:Description>
            <maml:para>Makes the data in the worksheet a named range.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="Table">
          <maml:name>TableName</maml:name>
          <maml:Description>
            <maml:para>Makes the data in the worksheet a table with a name, and applies a style to it. The name must not contain spaces. If the -Tablestyle parameter is specified without Tablename, "table1", "table2" etc. will be used.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TableStyle</maml:name>
          <maml:Description>
            <maml:para>Selects the style for the named table - if the  Tablename parameter is specified without giving a style, 'Medium6' is used as a default.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Custom</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light1</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light2</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light3</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light4</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light5</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light6</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light7</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light8</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light9</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light10</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light11</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light12</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light13</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light14</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light15</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light16</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light17</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light18</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light19</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light20</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light21</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium1</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium2</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium3</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium4</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium5</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium6</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium7</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium8</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium9</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium10</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium11</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium12</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium13</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium14</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium15</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium16</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium17</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium18</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium19</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium20</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium21</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium22</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium23</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium24</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium25</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium26</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium27</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium28</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark1</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark2</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark3</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark4</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark5</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark6</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark7</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark8</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark9</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark10</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark11</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">TableStyles</command:parameterValue>
          <dev:type>
            <maml:name>TableStyles</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Medium6</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Barchart</maml:name>
          <maml:Description>
            <maml:para>Creates a "quick" bar chart using the first text column as labels and the first numeric column as values.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PieChart</maml:name>
          <maml:Description>
            <maml:para>Creates a "quick" pie chart using the first text column as labels and the first numeric column as values.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>LineChart</maml:name>
          <maml:Description>
            <maml:para>Creates a "quick" line chart using the first text column as labels and the first numeric column as values.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ColumnChart</maml:name>
          <maml:Description>
            <maml:para>Creates a "quick" column chart using the first text column as labels and the first numeric column as values.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExcelChartDefinition</maml:name>
          <maml:Description>
            <maml:para>A hash-table containing ChartType, Title, NoLegend, ShowCategory, ShowPercent, Yrange, Xrange and SeriesHeader for one or more  [non-Pivot] charts. This can be created with the New-ExcelChartDefinition command.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
          <dev:type>
            <maml:name>Object[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>HideSheet</maml:name>
          <maml:Description>
            <maml:para>Name(s) of Sheet(s) to hide in the workbook, supports wildcards. If the selection would cause all sheets to be hidden, the sheet being worked on will be revealed.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>UnHideSheet</maml:name>
          <maml:Description>
            <maml:para>Name(s) of Sheet(s) to reveal in the workbook, supports wildcards.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MoveToStart</maml:name>
          <maml:Description>
            <maml:para>If specified, the worksheet will be moved to the start of the workbook.</maml:para>
            <maml:para>-MoveToStart takes precedence over -MoveToEnd, -Movebefore and -MoveAfter if more than one is specified.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MoveToEnd</maml:name>
          <maml:Description>
            <maml:para>If specified, the worksheet will be moved to the end of the workbook. (This is the default position for newly created sheets, but the option can be specified to move existing sheets.)</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MoveBefore</maml:name>
          <maml:Description>
            <maml:para>If specified, the worksheet will be moved before the nominated one (which can be a position starting from 1, or a name).</maml:para>
            <maml:para>-MoveBefore takes precedence over -MoveAfter if both are specified.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MoveAfter</maml:name>
          <maml:Description>
            <maml:para>If specified, the worksheet will be moved after the nominated one (which can be a position starting from 1, or a name or *).</maml:para>
            <maml:para>If * is used, the worksheet names will be examined starting with the first one, and the sheet placed after the last sheet which comes before it alphabetically.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>KillExcel</maml:name>
          <maml:Description>
            <maml:para>Closes Excel without stopping to ask if work should be saved - prevents errors writing to the file because Excel has it open.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AutoNameRange</maml:name>
          <maml:Description>
            <maml:para>Makes each column a named range.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>StartRow</maml:name>
          <maml:Description>
            <maml:para>Row to start adding data. 1 by default. Row 1 will contain the title, if any is specifed. Then headers will appear (Unless -No header is specified) then the data appears.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>StartColumn</maml:name>
          <maml:Description>
            <maml:para>Column to start adding data - 1 by default.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="PT">
          <maml:name>PassThru</maml:name>
          <maml:Description>
            <maml:para>If specified, Export-Excel returns an object representing the Excel package without saving the package first. To save, you must either use the Close-ExcelPackage command, or send the package object back to Export-Excel which will save and close the file, or use the object's .Save() or SaveAs() method.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Numberformat</maml:name>
          <maml:Description>
            <maml:para>Formats all values that can be converted to a number to the format specified. For examples:</maml:para>
            <maml:para></maml:para>
            <maml:para>'0'         integer (not really needed unless you need to round numbers, Excel will use default cell properties).</maml:para>
            <maml:para>'#'         integer without displaying the number 0 in the cell.</maml:para>
            <maml:para>'0.0'       number with 1 decimal place.</maml:para>
            <maml:para>'0.00'      number with 2 decimal places.</maml:para>
            <maml:para>'#,##0.00'  number with 2 decimal places and thousand-separator.</maml:para>
            <maml:para>'€#,##0.00' number with 2 decimal places and thousand-separator and money-symbol.</maml:para>
            <maml:para>'0%'        number with 2 decimal places and thousand-separator and money-symbol.</maml:para>
            <maml:para>'[Blue]$#,##0.00;[Red]-$#,##0.00'</maml:para>
            <maml:para>            blue for positive numbers and red for negative numbers;  Both proceeded by a '$' sign</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>General</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExcludeProperty</maml:name>
          <maml:Description>
            <maml:para>Specifies properties which may exist in the target data but should not be placed on the worksheet.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoAliasOrScriptPropeties</maml:name>
          <maml:Description>
            <maml:para>Some objects in PowerShell duplicate existing properties by adding aliases, or have Script properties which may take a long time to return a value and slow the export down, if specified this option removes these properties</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DisplayPropertySet</maml:name>
          <maml:Description>
            <maml:para>Many (but not all) objects in PowerShell have a hidden property named psStandardmembers with a child property DefaultDisplayPropertySet ; this parameter reduces the properties exported to those in this set.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoNumberConversion</maml:name>
          <maml:Description>
            <maml:para>By default the command will convert all values to numbers if possible, but this isn't always desirable. -NoNumberConversion allows you to add exceptions for the conversion.</maml:para>
            <maml:para>The only Wildcard allowed is * for all properties</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalFormat</maml:name>
          <maml:Description>
            <maml:para>One or more conditional formatting rules defined with New-ConditionalFormattingIconSet.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
          <dev:type>
            <maml:name>Object[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalText</maml:name>
          <maml:Description>
            <maml:para>Applies a Conditional formatting rule defined with New-ConditionalText. When specific conditions are met the format is applied.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
          <dev:type>
            <maml:name>Object[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Style</maml:name>
          <maml:Description>
            <maml:para>Takes style settings as a hash-table (which may be built with the New-ExcelStyle command) and applies them to the worksheet. If the hash-table contains a range the settings apply to the range, otherewise they apply to the whole sheet.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
          <dev:type>
            <maml:name>Object[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CellStyleSB</maml:name>
          <maml:Description>
            <maml:para>A script block which is run at the end of the export to apply styles to cells (although it can be used for other purposes). The script block is given three paramaters; an object containing the current worksheet, the Total number of Rows and the number of the last column.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ScriptBlock</command:parameterValue>
          <dev:type>
            <maml:name>ScriptBlock</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Activate</maml:name>
          <maml:Description>
            <maml:para>If there is already content in the workbook, a new sheet will not be active UNLESS Activate is specified; when a PivotTable is created its sheet will be activated by this switch.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Now</maml:name>
          <maml:Description>
            <maml:para>The -Now switch is a shortcut that automatically creates a temporary file, enables "AutoSize", "TableName" and "Show", and opens the file immediately.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ReturnRange</maml:name>
          <maml:Description>
            <maml:para>If specified, Export-Excel returns the range of added cells in the format "A1:Z100".</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotTotals</maml:name>
          <maml:Description>
            <maml:para>By default, PivotTables have totals for each row (on the right) and for each column at the bottom. This allows just one or neither to be selected.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Both</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoTotalsInPivot</maml:name>
          <maml:Description>
            <maml:para>In a PivotTable created from command line parameters, prevents the addition of totals to rows and columns.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ReZip</maml:name>
          <maml:Description>
            <maml:para>If specified, Export-Excel will expand the contents of the .XLSX file (which is multiple files in a zip archive) and rebuild it.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Export-Excel</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExcelPackage</maml:name>
          <maml:Description>
            <maml:para>An object representing an Excel Package - usually this is returned by specifying -PassThru allowing multiple commands to work on the same workbook without saving and reloading each time.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ExcelPackage</command:parameterValue>
          <dev:type>
            <maml:name>ExcelPackage</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="TargetData">
          <maml:name>InputObject</maml:name>
          <maml:Description>
            <maml:para>Date is usually piped into Export-Excel, but it also accepts data through the InputObject parameter</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Calculate</maml:name>
          <maml:Description>
            <maml:para>If specified, a recalculation of the worksheet will be requested before saving.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Show</maml:name>
          <maml:Description>
            <maml:para>Opens the Excel file immediately after creation; convenient for viewing the results instantly without having to search for the file first.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>WorksheetName</maml:name>
          <maml:Description>
            <maml:para>The name of a sheet within the workbook - "Sheet1" by default.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Sheet1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Password</maml:name>
          <maml:Description>
            <maml:para>Sets password protection on the workbook.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ClearSheet</maml:name>
          <maml:Description>
            <maml:para>If specified Export-Excel will remove any existing worksheet with the selected name.</maml:para>
            <maml:para>The default behaviour is to overwrite cells in this sheet as needed (but leaving non-overwritten ones in place).</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Append</maml:name>
          <maml:Description>
            <maml:para>If specified data will be added to the end of an existing sheet, using the same column headings.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Title</maml:name>
          <maml:Description>
            <maml:para>Text of a title to be placed in the top left cell.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TitleFillPattern</maml:name>
          <maml:Description>
            <maml:para>Sets the fill pattern for the title cell.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Solid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Gray125</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Gray0625</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkVertical</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkHorizontal</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkDown</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkUp</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkGrid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkTrellis</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightVertical</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightHorizontal</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightDown</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightUp</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightGrid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightTrellis</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelFillStyle</command:parameterValue>
          <dev:type>
            <maml:name>ExcelFillStyle</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Solid</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TitleBold</maml:name>
          <maml:Description>
            <maml:para>Sets the title in boldface type.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TitleSize</maml:name>
          <maml:Description>
            <maml:para>Sets the point size for the title.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>22</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TitleBackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Sets the cell background color for the title cell.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>IncludePivotTable</maml:name>
          <maml:Description>
            <maml:para>Adds a PivotTable using the data in the worksheet.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotTableName</maml:name>
          <maml:Description>
            <maml:para>If a PivotTable is created from command line parameters, specifies the name of the new sheet holding the pivot. Defaults to "WorksheetName-PivotTable".</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotRows</maml:name>
          <maml:Description>
            <maml:para>Name(s) of column(s) from the spreadsheet which will provide the Row name(s) in a PivotTable created from command line parameters.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotColumns</maml:name>
          <maml:Description>
            <maml:para>Name(s) of columns from the spreadsheet which will provide the Column name(s) in a PivotTable created from command line parameters.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotData</maml:name>
          <maml:Description>
            <maml:para>In a PivotTable created from command line parameters, the fields to use in the table body are given as a Hash-table in the form</maml:para>
            <maml:para>ColumnName = Average|Count|CountNums|Max|Min|Product|None|StdDev|StdDevP|Sum|Var|VarP.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotFilter</maml:name>
          <maml:Description>
            <maml:para>Name(s) columns from the spreadsheet which will provide the Filter name(s) in a PivotTable created from command line parameters.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotDataToColumn</maml:name>
          <maml:Description>
            <maml:para>If there are multiple datasets in a PivotTable, by default they are shown as separate rows under the given row heading; this switch makes them separate columns.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotTableDefinition</maml:name>
          <maml:Description>
            <maml:para>Instead of describing a single PivotTable with multiple command-line parameters; you can use a HashTable in the form PivotTableName = Definition;</maml:para>
            <maml:para>In this table Definition is itself a Hashtable with Sheet, PivotRows, PivotColumns, PivotData, IncludePivotChart and ChartType values. The New-PivotTableDefinition command will create the definition from a command line.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>IncludePivotChart</maml:name>
          <maml:Description>
            <maml:para>Include a chart with the PivotTable - implies -IncludePivotTable.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ChartType</maml:name>
          <maml:Description>
            <maml:para>The type for PivotChart (one of Excel's defined chart types).</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Area</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Line</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Pie</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Bubble</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnClustered3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnStacked3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnStacked1003D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarClustered3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarStacked3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarStacked1003D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineMarkers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineMarkersStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineMarkersStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PieOfPie</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PieExploded</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PieExploded3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarOfPie</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatterSmooth</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatterSmoothNoMarkers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatterLines</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatterLinesNoMarkers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AreaStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AreaStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AreaStacked3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AreaStacked1003D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DoughnutExploded</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">RadarMarkers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">RadarFilled</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Surface</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SurfaceWireframe</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SurfaceTopView</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SurfaceTopViewWireframe</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Bubble3DEffect</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">StockHLC</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">StockOHLC</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">StockVHLC</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">StockVOHLC</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderColClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderColStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderColStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderBarClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderBarStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderBarStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderCol</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeColClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeColStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeColStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeBarClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeBarStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeBarStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeCol</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidColClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidColStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidColStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidBarClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidBarStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidBarStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidCol</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatter</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Radar</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Doughnut</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Pie3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Line3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Column3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Area3D</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">eChartType</command:parameterValue>
          <dev:type>
            <maml:name>eChartType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Pie</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoLegend</maml:name>
          <maml:Description>
            <maml:para>Exclude the legend from the PivotChart.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ShowCategory</maml:name>
          <maml:Description>
            <maml:para>Add category labels to the PivotChart.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ShowPercent</maml:name>
          <maml:Description>
            <maml:para>Add percentage labels to the PivotChart.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AutoSize</maml:name>
          <maml:Description>
            <maml:para>Sizes the width of the Excel column to the maximum width needed to display all the containing data in that cell.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MaxAutoSizeRows</maml:name>
          <maml:Description>
            <maml:para>Autosizing can be time consuming, so this sets a maximum number of rows to look at for the Autosize operation. Default is 1000; If 0 is specified ALL rows will be checked</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1000</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoClobber</maml:name>
          <maml:Description>
            <maml:para>Not used. Left in to avoid problems with older scripts, it may be removed in future versions.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FreezeTopRow</maml:name>
          <maml:Description>
            <maml:para>Freezes headers etc. in the top row.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FreezeFirstColumn</maml:name>
          <maml:Description>
            <maml:para>Freezes titles etc. in the left column.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FreezeTopRowFirstColumn</maml:name>
          <maml:Description>
            <maml:para>Freezes top row and left column (equivalent to Freeze pane 2,2 ).</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FreezePane</maml:name>
          <maml:Description>
            <maml:para>Freezes panes at specified coordinates (in the form  RowNumber, ColumnNumber).</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
          <dev:type>
            <maml:name>Int32[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AutoFilter</maml:name>
          <maml:Description>
            <maml:para>Enables the Excel filter on the complete header row, so users can easily sort, filter and/or search the data in the selected column.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BoldTopRow</maml:name>
          <maml:Description>
            <maml:para>Makes the top row boldface.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoHeader</maml:name>
          <maml:Description>
            <maml:para>Specifies that field names should not be put at the top of columns.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RangeName</maml:name>
          <maml:Description>
            <maml:para>Makes the data in the worksheet a named range.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="Table">
          <maml:name>TableName</maml:name>
          <maml:Description>
            <maml:para>Makes the data in the worksheet a table with a name, and applies a style to it. The name must not contain spaces. If the -Tablestyle parameter is specified without Tablename, "table1", "table2" etc. will be used.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TableStyle</maml:name>
          <maml:Description>
            <maml:para>Selects the style for the named table - if the  Tablename parameter is specified without giving a style, 'Medium6' is used as a default.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Custom</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light1</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light2</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light3</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light4</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light5</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light6</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light7</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light8</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light9</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light10</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light11</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light12</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light13</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light14</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light15</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light16</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light17</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light18</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light19</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light20</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light21</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium1</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium2</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium3</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium4</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium5</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium6</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium7</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium8</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium9</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium10</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium11</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium12</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium13</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium14</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium15</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium16</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium17</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium18</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium19</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium20</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium21</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium22</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium23</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium24</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium25</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium26</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium27</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium28</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark1</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark2</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark3</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark4</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark5</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark6</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark7</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark8</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark9</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark10</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark11</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">TableStyles</command:parameterValue>
          <dev:type>
            <maml:name>TableStyles</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Medium6</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Barchart</maml:name>
          <maml:Description>
            <maml:para>Creates a "quick" bar chart using the first text column as labels and the first numeric column as values.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PieChart</maml:name>
          <maml:Description>
            <maml:para>Creates a "quick" pie chart using the first text column as labels and the first numeric column as values.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>LineChart</maml:name>
          <maml:Description>
            <maml:para>Creates a "quick" line chart using the first text column as labels and the first numeric column as values.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ColumnChart</maml:name>
          <maml:Description>
            <maml:para>Creates a "quick" column chart using the first text column as labels and the first numeric column as values.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExcelChartDefinition</maml:name>
          <maml:Description>
            <maml:para>A hash-table containing ChartType, Title, NoLegend, ShowCategory, ShowPercent, Yrange, Xrange and SeriesHeader for one or more  [non-Pivot] charts. This can be created with the New-ExcelChartDefinition command.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
          <dev:type>
            <maml:name>Object[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>HideSheet</maml:name>
          <maml:Description>
            <maml:para>Name(s) of Sheet(s) to hide in the workbook, supports wildcards. If the selection would cause all sheets to be hidden, the sheet being worked on will be revealed.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>UnHideSheet</maml:name>
          <maml:Description>
            <maml:para>Name(s) of Sheet(s) to reveal in the workbook, supports wildcards.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MoveToStart</maml:name>
          <maml:Description>
            <maml:para>If specified, the worksheet will be moved to the start of the workbook.</maml:para>
            <maml:para>-MoveToStart takes precedence over -MoveToEnd, -Movebefore and -MoveAfter if more than one is specified.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MoveToEnd</maml:name>
          <maml:Description>
            <maml:para>If specified, the worksheet will be moved to the end of the workbook. (This is the default position for newly created sheets, but the option can be specified to move existing sheets.)</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MoveBefore</maml:name>
          <maml:Description>
            <maml:para>If specified, the worksheet will be moved before the nominated one (which can be a position starting from 1, or a name).</maml:para>
            <maml:para>-MoveBefore takes precedence over -MoveAfter if both are specified.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MoveAfter</maml:name>
          <maml:Description>
            <maml:para>If specified, the worksheet will be moved after the nominated one (which can be a position starting from 1, or a name or *).</maml:para>
            <maml:para>If * is used, the worksheet names will be examined starting with the first one, and the sheet placed after the last sheet which comes before it alphabetically.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>KillExcel</maml:name>
          <maml:Description>
            <maml:para>Closes Excel without stopping to ask if work should be saved - prevents errors writing to the file because Excel has it open.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AutoNameRange</maml:name>
          <maml:Description>
            <maml:para>Makes each column a named range.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>StartRow</maml:name>
          <maml:Description>
            <maml:para>Row to start adding data. 1 by default. Row 1 will contain the title, if any is specifed. Then headers will appear (Unless -No header is specified) then the data appears.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>StartColumn</maml:name>
          <maml:Description>
            <maml:para>Column to start adding data - 1 by default.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="PT">
          <maml:name>PassThru</maml:name>
          <maml:Description>
            <maml:para>If specified, Export-Excel returns an object representing the Excel package without saving the package first. To save, you must either use the Close-ExcelPackage command, or send the package object back to Export-Excel which will save and close the file, or use the object's .Save() or SaveAs() method.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Numberformat</maml:name>
          <maml:Description>
            <maml:para>Formats all values that can be converted to a number to the format specified. For examples:</maml:para>
            <maml:para></maml:para>
            <maml:para>'0'         integer (not really needed unless you need to round numbers, Excel will use default cell properties).</maml:para>
            <maml:para>'#'         integer without displaying the number 0 in the cell.</maml:para>
            <maml:para>'0.0'       number with 1 decimal place.</maml:para>
            <maml:para>'0.00'      number with 2 decimal places.</maml:para>
            <maml:para>'#,##0.00'  number with 2 decimal places and thousand-separator.</maml:para>
            <maml:para>'€#,##0.00' number with 2 decimal places and thousand-separator and money-symbol.</maml:para>
            <maml:para>'0%'        number with 2 decimal places and thousand-separator and money-symbol.</maml:para>
            <maml:para>'[Blue]$#,##0.00;[Red]-$#,##0.00'</maml:para>
            <maml:para>            blue for positive numbers and red for negative numbers;  Both proceeded by a '$' sign</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>General</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExcludeProperty</maml:name>
          <maml:Description>
            <maml:para>Specifies properties which may exist in the target data but should not be placed on the worksheet.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoAliasOrScriptPropeties</maml:name>
          <maml:Description>
            <maml:para>Some objects in PowerShell duplicate existing properties by adding aliases, or have Script properties which may take a long time to return a value and slow the export down, if specified this option removes these properties</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DisplayPropertySet</maml:name>
          <maml:Description>
            <maml:para>Many (but not all) objects in PowerShell have a hidden property named psStandardmembers with a child property DefaultDisplayPropertySet ; this parameter reduces the properties exported to those in this set.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoNumberConversion</maml:name>
          <maml:Description>
            <maml:para>By default the command will convert all values to numbers if possible, but this isn't always desirable. -NoNumberConversion allows you to add exceptions for the conversion.</maml:para>
            <maml:para>The only Wildcard allowed is * for all properties</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalFormat</maml:name>
          <maml:Description>
            <maml:para>One or more conditional formatting rules defined with New-ConditionalFormattingIconSet.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
          <dev:type>
            <maml:name>Object[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalText</maml:name>
          <maml:Description>
            <maml:para>Applies a Conditional formatting rule defined with New-ConditionalText. When specific conditions are met the format is applied.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
          <dev:type>
            <maml:name>Object[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Style</maml:name>
          <maml:Description>
            <maml:para>Takes style settings as a hash-table (which may be built with the New-ExcelStyle command) and applies them to the worksheet. If the hash-table contains a range the settings apply to the range, otherewise they apply to the whole sheet.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
          <dev:type>
            <maml:name>Object[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CellStyleSB</maml:name>
          <maml:Description>
            <maml:para>A script block which is run at the end of the export to apply styles to cells (although it can be used for other purposes). The script block is given three paramaters; an object containing the current worksheet, the Total number of Rows and the number of the last column.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ScriptBlock</command:parameterValue>
          <dev:type>
            <maml:name>ScriptBlock</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Activate</maml:name>
          <maml:Description>
            <maml:para>If there is already content in the workbook, a new sheet will not be active UNLESS Activate is specified; when a PivotTable is created its sheet will be activated by this switch.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ReturnRange</maml:name>
          <maml:Description>
            <maml:para>If specified, Export-Excel returns the range of added cells in the format "A1:Z100".</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotTotals</maml:name>
          <maml:Description>
            <maml:para>By default, PivotTables have totals for each row (on the right) and for each column at the bottom. This allows just one or neither to be selected.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Both</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoTotalsInPivot</maml:name>
          <maml:Description>
            <maml:para>In a PivotTable created from command line parameters, prevents the addition of totals to rows and columns.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ReZip</maml:name>
          <maml:Description>
            <maml:para>If specified, Export-Excel will expand the contents of the .XLSX file (which is multiple files in a zip archive) and rebuild it.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
        <maml:name>Path</maml:name>
        <maml:Description>
          <maml:para>Path to a new or existing .XLSX file.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ExcelPackage</maml:name>
        <maml:Description>
          <maml:para>An object representing an Excel Package - usually this is returned by specifying -PassThru allowing multiple commands to work on the same workbook without saving and reloading each time.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelPackage</command:parameterValue>
        <dev:type>
          <maml:name>ExcelPackage</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="TargetData">
        <maml:name>InputObject</maml:name>
        <maml:Description>
          <maml:para>Date is usually piped into Export-Excel, but it also accepts data through the InputObject parameter</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Calculate</maml:name>
        <maml:Description>
          <maml:para>If specified, a recalculation of the worksheet will be requested before saving.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Show</maml:name>
        <maml:Description>
          <maml:para>Opens the Excel file immediately after creation; convenient for viewing the results instantly without having to search for the file first.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>WorksheetName</maml:name>
        <maml:Description>
          <maml:para>The name of a sheet within the workbook - "Sheet1" by default.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Sheet1</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Password</maml:name>
        <maml:Description>
          <maml:para>Sets password protection on the workbook.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ClearSheet</maml:name>
        <maml:Description>
          <maml:para>If specified Export-Excel will remove any existing worksheet with the selected name.</maml:para>
          <maml:para>The default behaviour is to overwrite cells in this sheet as needed (but leaving non-overwritten ones in place).</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Append</maml:name>
        <maml:Description>
          <maml:para>If specified data will be added to the end of an existing sheet, using the same column headings.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Title</maml:name>
        <maml:Description>
          <maml:para>Text of a title to be placed in the top left cell.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>TitleFillPattern</maml:name>
        <maml:Description>
          <maml:para>Sets the fill pattern for the title cell.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelFillStyle</command:parameterValue>
        <dev:type>
          <maml:name>ExcelFillStyle</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Solid</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>TitleBold</maml:name>
        <maml:Description>
          <maml:para>Sets the title in boldface type.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>TitleSize</maml:name>
        <maml:Description>
          <maml:para>Sets the point size for the title.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>22</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>TitleBackgroundColor</maml:name>
        <maml:Description>
          <maml:para>Sets the cell background color for the title cell.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>IncludePivotTable</maml:name>
        <maml:Description>
          <maml:para>Adds a PivotTable using the data in the worksheet.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PivotTableName</maml:name>
        <maml:Description>
          <maml:para>If a PivotTable is created from command line parameters, specifies the name of the new sheet holding the pivot. Defaults to "WorksheetName-PivotTable".</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PivotRows</maml:name>
        <maml:Description>
          <maml:para>Name(s) of column(s) from the spreadsheet which will provide the Row name(s) in a PivotTable created from command line parameters.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PivotColumns</maml:name>
        <maml:Description>
          <maml:para>Name(s) of columns from the spreadsheet which will provide the Column name(s) in a PivotTable created from command line parameters.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PivotData</maml:name>
        <maml:Description>
          <maml:para>In a PivotTable created from command line parameters, the fields to use in the table body are given as a Hash-table in the form</maml:para>
          <maml:para>ColumnName = Average|Count|CountNums|Max|Min|Product|None|StdDev|StdDevP|Sum|Var|VarP.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PivotFilter</maml:name>
        <maml:Description>
          <maml:para>Name(s) columns from the spreadsheet which will provide the Filter name(s) in a PivotTable created from command line parameters.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PivotDataToColumn</maml:name>
        <maml:Description>
          <maml:para>If there are multiple datasets in a PivotTable, by default they are shown as separate rows under the given row heading; this switch makes them separate columns.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PivotTableDefinition</maml:name>
        <maml:Description>
          <maml:para>Instead of describing a single PivotTable with multiple command-line parameters; you can use a HashTable in the form PivotTableName = Definition;</maml:para>
          <maml:para>In this table Definition is itself a Hashtable with Sheet, PivotRows, PivotColumns, PivotData, IncludePivotChart and ChartType values. The New-PivotTableDefinition command will create the definition from a command line.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>Hashtable</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>IncludePivotChart</maml:name>
        <maml:Description>
          <maml:para>Include a chart with the PivotTable - implies -IncludePivotTable.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ChartType</maml:name>
        <maml:Description>
          <maml:para>The type for PivotChart (one of Excel's defined chart types).</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">eChartType</command:parameterValue>
        <dev:type>
          <maml:name>eChartType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Pie</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NoLegend</maml:name>
        <maml:Description>
          <maml:para>Exclude the legend from the PivotChart.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ShowCategory</maml:name>
        <maml:Description>
          <maml:para>Add category labels to the PivotChart.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ShowPercent</maml:name>
        <maml:Description>
          <maml:para>Add percentage labels to the PivotChart.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AutoSize</maml:name>
        <maml:Description>
          <maml:para>Sizes the width of the Excel column to the maximum width needed to display all the containing data in that cell.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MaxAutoSizeRows</maml:name>
        <maml:Description>
          <maml:para>Autosizing can be time consuming, so this sets a maximum number of rows to look at for the Autosize operation. Default is 1000; If 0 is specified ALL rows will be checked</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>1000</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NoClobber</maml:name>
        <maml:Description>
          <maml:para>Not used. Left in to avoid problems with older scripts, it may be removed in future versions.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>FreezeTopRow</maml:name>
        <maml:Description>
          <maml:para>Freezes headers etc. in the top row.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>FreezeFirstColumn</maml:name>
        <maml:Description>
          <maml:para>Freezes titles etc. in the left column.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>FreezeTopRowFirstColumn</maml:name>
        <maml:Description>
          <maml:para>Freezes top row and left column (equivalent to Freeze pane 2,2 ).</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>FreezePane</maml:name>
        <maml:Description>
          <maml:para>Freezes panes at specified coordinates (in the form  RowNumber, ColumnNumber).</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
        <dev:type>
          <maml:name>Int32[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AutoFilter</maml:name>
        <maml:Description>
          <maml:para>Enables the Excel filter on the complete header row, so users can easily sort, filter and/or search the data in the selected column.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BoldTopRow</maml:name>
        <maml:Description>
          <maml:para>Makes the top row boldface.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NoHeader</maml:name>
        <maml:Description>
          <maml:para>Specifies that field names should not be put at the top of columns.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>RangeName</maml:name>
        <maml:Description>
          <maml:para>Makes the data in the worksheet a named range.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="Table">
        <maml:name>TableName</maml:name>
        <maml:Description>
          <maml:para>Makes the data in the worksheet a table with a name, and applies a style to it. The name must not contain spaces. If the -Tablestyle parameter is specified without Tablename, "table1", "table2" etc. will be used.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>TableStyle</maml:name>
        <maml:Description>
          <maml:para>Selects the style for the named table - if the  Tablename parameter is specified without giving a style, 'Medium6' is used as a default.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">TableStyles</command:parameterValue>
        <dev:type>
          <maml:name>TableStyles</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Medium6</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Barchart</maml:name>
        <maml:Description>
          <maml:para>Creates a "quick" bar chart using the first text column as labels and the first numeric column as values.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PieChart</maml:name>
        <maml:Description>
          <maml:para>Creates a "quick" pie chart using the first text column as labels and the first numeric column as values.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>LineChart</maml:name>
        <maml:Description>
          <maml:para>Creates a "quick" line chart using the first text column as labels and the first numeric column as values.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ColumnChart</maml:name>
        <maml:Description>
          <maml:para>Creates a "quick" column chart using the first text column as labels and the first numeric column as values.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ExcelChartDefinition</maml:name>
        <maml:Description>
          <maml:para>A hash-table containing ChartType, Title, NoLegend, ShowCategory, ShowPercent, Yrange, Xrange and SeriesHeader for one or more  [non-Pivot] charts. This can be created with the New-ExcelChartDefinition command.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
        <dev:type>
          <maml:name>Object[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>HideSheet</maml:name>
        <maml:Description>
          <maml:para>Name(s) of Sheet(s) to hide in the workbook, supports wildcards. If the selection would cause all sheets to be hidden, the sheet being worked on will be revealed.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>UnHideSheet</maml:name>
        <maml:Description>
          <maml:para>Name(s) of Sheet(s) to reveal in the workbook, supports wildcards.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MoveToStart</maml:name>
        <maml:Description>
          <maml:para>If specified, the worksheet will be moved to the start of the workbook.</maml:para>
          <maml:para>-MoveToStart takes precedence over -MoveToEnd, -Movebefore and -MoveAfter if more than one is specified.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MoveToEnd</maml:name>
        <maml:Description>
          <maml:para>If specified, the worksheet will be moved to the end of the workbook. (This is the default position for newly created sheets, but the option can be specified to move existing sheets.)</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MoveBefore</maml:name>
        <maml:Description>
          <maml:para>If specified, the worksheet will be moved before the nominated one (which can be a position starting from 1, or a name).</maml:para>
          <maml:para>-MoveBefore takes precedence over -MoveAfter if both are specified.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MoveAfter</maml:name>
        <maml:Description>
          <maml:para>If specified, the worksheet will be moved after the nominated one (which can be a position starting from 1, or a name or *).</maml:para>
          <maml:para>If * is used, the worksheet names will be examined starting with the first one, and the sheet placed after the last sheet which comes before it alphabetically.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>KillExcel</maml:name>
        <maml:Description>
          <maml:para>Closes Excel without stopping to ask if work should be saved - prevents errors writing to the file because Excel has it open.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AutoNameRange</maml:name>
        <maml:Description>
          <maml:para>Makes each column a named range.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>StartRow</maml:name>
        <maml:Description>
          <maml:para>Row to start adding data. 1 by default. Row 1 will contain the title, if any is specifed. Then headers will appear (Unless -No header is specified) then the data appears.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>1</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>StartColumn</maml:name>
        <maml:Description>
          <maml:para>Column to start adding data - 1 by default.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>1</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="PT">
        <maml:name>PassThru</maml:name>
        <maml:Description>
          <maml:para>If specified, Export-Excel returns an object representing the Excel package without saving the package first. To save, you must either use the Close-ExcelPackage command, or send the package object back to Export-Excel which will save and close the file, or use the object's .Save() or SaveAs() method.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Numberformat</maml:name>
        <maml:Description>
          <maml:para>Formats all values that can be converted to a number to the format specified. For examples:</maml:para>
          <maml:para></maml:para>
          <maml:para>'0'         integer (not really needed unless you need to round numbers, Excel will use default cell properties).</maml:para>
          <maml:para>'#'         integer without displaying the number 0 in the cell.</maml:para>
          <maml:para>'0.0'       number with 1 decimal place.</maml:para>
          <maml:para>'0.00'      number with 2 decimal places.</maml:para>
          <maml:para>'#,##0.00'  number with 2 decimal places and thousand-separator.</maml:para>
          <maml:para>'€#,##0.00' number with 2 decimal places and thousand-separator and money-symbol.</maml:para>
          <maml:para>'0%'        number with 2 decimal places and thousand-separator and money-symbol.</maml:para>
          <maml:para>'[Blue]$#,##0.00;[Red]-$#,##0.00'</maml:para>
          <maml:para>            blue for positive numbers and red for negative numbers;  Both proceeded by a '$' sign</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>General</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ExcludeProperty</maml:name>
        <maml:Description>
          <maml:para>Specifies properties which may exist in the target data but should not be placed on the worksheet.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NoAliasOrScriptPropeties</maml:name>
        <maml:Description>
          <maml:para>Some objects in PowerShell duplicate existing properties by adding aliases, or have Script properties which may take a long time to return a value and slow the export down, if specified this option removes these properties</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>DisplayPropertySet</maml:name>
        <maml:Description>
          <maml:para>Many (but not all) objects in PowerShell have a hidden property named psStandardmembers with a child property DefaultDisplayPropertySet ; this parameter reduces the properties exported to those in this set.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NoNumberConversion</maml:name>
        <maml:Description>
          <maml:para>By default the command will convert all values to numbers if possible, but this isn't always desirable. -NoNumberConversion allows you to add exceptions for the conversion.</maml:para>
          <maml:para>The only Wildcard allowed is * for all properties</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalFormat</maml:name>
        <maml:Description>
          <maml:para>One or more conditional formatting rules defined with New-ConditionalFormattingIconSet.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
        <dev:type>
          <maml:name>Object[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalText</maml:name>
        <maml:Description>
          <maml:para>Applies a Conditional formatting rule defined with New-ConditionalText. When specific conditions are met the format is applied.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
        <dev:type>
          <maml:name>Object[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Style</maml:name>
        <maml:Description>
          <maml:para>Takes style settings as a hash-table (which may be built with the New-ExcelStyle command) and applies them to the worksheet. If the hash-table contains a range the settings apply to the range, otherewise they apply to the whole sheet.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
        <dev:type>
          <maml:name>Object[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CellStyleSB</maml:name>
        <maml:Description>
          <maml:para>A script block which is run at the end of the export to apply styles to cells (although it can be used for other purposes). The script block is given three paramaters; an object containing the current worksheet, the Total number of Rows and the number of the last column.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ScriptBlock</command:parameterValue>
        <dev:type>
          <maml:name>ScriptBlock</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Activate</maml:name>
        <maml:Description>
          <maml:para>If there is already content in the workbook, a new sheet will not be active UNLESS Activate is specified; when a PivotTable is created its sheet will be activated by this switch.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Now</maml:name>
        <maml:Description>
          <maml:para>The -Now switch is a shortcut that automatically creates a temporary file, enables "AutoSize", "TableName" and "Show", and opens the file immediately.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ReturnRange</maml:name>
        <maml:Description>
          <maml:para>If specified, Export-Excel returns the range of added cells in the format "A1:Z100".</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PivotTotals</maml:name>
        <maml:Description>
          <maml:para>By default, PivotTables have totals for each row (on the right) and for each column at the bottom. This allows just one or neither to be selected.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Both</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NoTotalsInPivot</maml:name>
        <maml:Description>
          <maml:para>In a PivotTable created from command line parameters, prevents the addition of totals to rows and columns.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ReZip</maml:name>
        <maml:Description>
          <maml:para>If specified, Export-Excel will expand the contents of the .XLSX file (which is multiple files in a zip archive) and rebuild it.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>OfficeOpenXml.ExcelPackage</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>PS\&gt; Get-Process | Export-Excel .\Test.xlsx -show</dev:code>
        <dev:remarks>
          <maml:para>Export all the processes to the Excel file 'Test.xlsx' and open the file immediately.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>PS\&gt; $ExcelParams = @{
    Path    = $env:TEMP + '\Excel.xlsx'
    Show    = $true
    Verbose = $true
}
PS\&gt; Remove-Item -Path $ExcelParams.Path -Force -EA Ignore
PS\&gt; Write-Output -1 668 34 777 860 -0.5 119 -0.1 234 788 |
        Export-Excel @ExcelParams -NumberFormat ' [Blue$#,##0.00; [Red]-$#,##0.00'</dev:code>
        <dev:remarks>
          <maml:para>Exports all data to the Excel file 'Excel.xslx' and colors the negative values in Red and the positive values in Blue.</maml:para>
          <maml:para>It will also add a dollar sign in front of the numbers which use a thousand seperator and display to two decimal places.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <dev:code>PS\&gt; $ExcelParams = @{
    Path    = $env:TEMP + '\Excel.xlsx'
    Show    = $true
    Verbose = $true
}
PS\&gt; Remove-Item -Path $ExcelParams.Path -Force -EA Ignore
PS\&gt; [PSCustOmobject][Ordered]@{
    Date      = Get-Date
    Formula1  = '=SUM(F2:G2)'
    String1   = 'My String'
    String2   = 'a'
    IPAddress = '10.10.25.5'
    Number1   = '07670'
    Number2   = '0,26'
    Number3   = '1.555,83'
    Number4   = '1.2'
    Number5   = '-31'
    PhoneNr1  = '+32 44'
    PhoneNr2  = '+32 4 4444 444'
    PhoneNr3  =  '+3244444444'
} | Export-Excel @ExcelParams -NoNumberConversion IPAddress, Number1</dev:code>
        <dev:remarks>
          <maml:para>Exports all data to the Excel file "Excel.xlsx" and tries to convert all values to numbers where possible except for "IPAddress" and "Number1", which are stored in the sheet 'as is', without being converted to a number.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
        <dev:code>PS\&gt; $ExcelParams = @{
    Path    = $env:TEMP + '\Excel.xlsx'
    Show    = $true
    Verbose = $true
}
PS\&gt; Remove-Item -Path $ExcelParams.Path -Force -EA Ignore
PS\&gt; [PSCustOmobject][Ordered]@{
    Date      = Get-Date
    Formula1  = '=SUM(F2:G2)'
    String1   = 'My String'
    String2   = 'a'
    IPAddress = '10.10.25.5'
    Number1   = '07670'
    Number2   = '0,26'
    Number3   = '1.555,83'
    Number4   = '1.2'
    Number5   = '-31'
    PhoneNr1  = '+32 44'
    PhoneNr2  = '+32 4 4444 444'
    PhoneNr3  =  '+3244444444'
} | Export-Excel @ExcelParams -NoNumberConversion *</dev:code>
        <dev:remarks>
          <maml:para>Exports all data to the Excel file 'Excel.xslx' as is, no number conversion will take place.  This means that Excel will show the exact same data that you handed over to the 'Export-Excel' function.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 5 --------------------------</maml:title>
        <dev:code>PS\&gt; $ExcelParams = @{
        Path    = $env:TEMP + '\Excel.xlsx'
        Show    = $true
        Verbose = $true
}
PS\&gt; Remove-Item -Path $ExcelParams.Path -Force -EA Ignore
PS\&gt; Write-Output 489 668 299 777 860 151 119 497 234 788 |
        Export-Excel @ExcelParams -ConditionalText $(
            New-ConditionalText -ConditionalType GreaterThan 525 -ConditionalTextColor DarkRed -BackgroundColor LightPink
        )</dev:code>
        <dev:remarks>
          <maml:para>Exports data that will have a Conditional Formatting rule in Excel that will show cells with a value is greater than 525, with a background fill color of "LightPink" and the text in "DarkRed".</maml:para>
          <maml:para>Where the condition is not met the color will be the default, black text on a white background.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 6 --------------------------</maml:title>
        <dev:code>PS\&gt; $ExcelParams = @{
    Path    = $env:TEMP + '\Excel.xlsx'
    Show    = $true
    Verbose = $true
}
PS\&gt; Remove-Item -Path $ExcelParams.Path -Force -EA Ignore
PS\&gt; Get-Service | Select-Object -Property Name, Status, DisplayName, ServiceName |
        Export-Excel @ExcelParams -ConditionalText $(
            New-ConditionalText Stop DarkRed LightPink
            New-ConditionalText Running Blue Cyan
        )</dev:code>
        <dev:remarks>
          <maml:para>Exports all services to an Excel sheet, setting a Conditional formatting rule that will set the background fill color to "LightPink" and the text color to "DarkRed" when the value contains the word "Stop".</maml:para>
          <maml:para>If the value contains the word "Running" it will have a background fill color of "Cyan" and text colored 'Blue'.</maml:para>
          <maml:para>If neither condition is met, the color will be the default, black text on a white background.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 7 --------------------------</maml:title>
        <dev:code>PS\&gt; $ExcelParams = @{
        Path      = $env:TEMP + '\Excel.xlsx'
        Show      = $true
        Verbose   = $true
    }
PS\&gt; Remove-Item -Path $ExcelParams.Path -Force -EA Ignore
PS\&gt; $Array = @()
PS\&gt; $Obj1 = [PSCustomObject]@{
    Member1   = 'First'
    Member2   = 'Second'
}

PS\&gt; $Obj2 = [PSCustomObject]@{
    Member1   = 'First'
    Member2   = 'Second'
    Member3   = 'Third'
}

 PS\&gt; $Obj3 = [PSCustomObject]@{
    Member1   = 'First'
    Member2   = 'Second'
    Member3   = 'Third'
    Member4   = 'Fourth'
}

PS\&gt; $Array = $Obj1, $Obj2, $Obj3
PS\&gt; $Array | Out-GridView -Title 'Not showing Member3 and Member4'
PS\&gt; $Array | Update-FirstObjectProperties | Export-Excel @ExcelParams -WorksheetName Numbers</dev:code>
        <dev:remarks>
          <maml:para>Updates the first object of the array by adding property 'Member3' and 'Member4'. Afterwards, all objects are exported to an Excel file and all column headers are visible.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 8 --------------------------</maml:title>
        <dev:code>PS\&gt; Get-Process | Export-Excel .\test.xlsx -WorksheetName Processes -IncludePivotTable -Show -PivotRows Company -PivotData PM</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 9 --------------------------</maml:title>
        <dev:code>PS\&gt; Get-Process | Export-Excel .\test.xlsx -WorksheetName Processes -ChartType PieExploded3D -IncludePivotChart -IncludePivotTable -Show -PivotRows Company -PivotData PM</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 10 --------------------------</maml:title>
        <dev:code>PS\&gt; Get-Service | Export-Excel 'c:\temp\test.xlsx'  -Show -IncludePivotTable -PivotRows status -PivotData @{status='count'}</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 11 --------------------------</maml:title>
        <dev:code>PS\&gt; $pt = [ordered]@{}
PS\&gt; $pt.pt1=@{
    SourceWorkSheet   = 'Sheet1';
    PivotRows         = 'Status'
    PivotData         = @{'Status'='count'}
    IncludePivotChart = $true
    ChartType         = 'BarClustered3D'
}
PS\&gt; $pt.pt2=@
    SourceWorkSheet   = 'Sheet2';
    PivotRows         = 'Company'
    PivotData         = @{'Company'='count'}
    IncludePivotChart = $true
    ChartType         = 'PieExploded3D'
}
PS\&gt; Remove-Item  -Path .\test.xlsx
PS\&gt; Get-Service | Select-Object    -Property Status,Name,DisplayName,StartType | Export-Excel -Path .\test.xlsx -AutoSize
PS\&gt; Get-Process | Select-Object    -Property Name,Company,Handles,CPU,VM       | Export-Excel -Path .\test.xlsx -AutoSize -WorksheetName 'sheet2'
PS\&gt; Export-Excel -Path .\test.xlsx -PivotTableDefinition $pt -Show</dev:code>
        <dev:remarks>
          <maml:para>This example defines two PivotTables.</maml:para>
          <maml:para>Then it puts Service data on Sheet1 with one call to Export-Excel and Process Data on sheet2 with a second call to Export-Excel.</maml:para>
          <maml:para>The third and final call adds the two PivotTables and opens the spreadsheet in Excel.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 12 --------------------------</maml:title>
        <dev:code>PS\&gt; Remove-Item  -Path .\test.xlsx
PS\&gt; $excel = Get-Service | Select-Object -Property Status,Name,DisplayName,StartType | Export-Excel -Path .\test.xlsx -PassThru
PS\&gt; $excel.Workbook.Worksheets ["Sheet1"].Row(1).style.font.bold = $true
PS\&gt; $excel.Workbook.Worksheets ["Sheet1"].Column(3 ).width = 29
PS\&gt; $excel.Workbook.Worksheets ["Sheet1"].Column(3 ).Style.wraptext = $true
PS\&gt; $excel.Save()
PS\&gt; $excel.Dispose()
PS\&gt; Start-Process .\test.xlsx</dev:code>
        <dev:remarks>
          <maml:para>This example uses -PassThru.</maml:para>
          <maml:para>It puts service information into sheet1 of the workbook and saves the ExcelPackage object in $Excel.</maml:para>
          <maml:para>It then uses the package object to apply formatting, and then saves the workbook and disposes of the object, before loading the document in Excel.</maml:para>
          <maml:para>Note: Other commands in the module remove the need to work directly with the package object in this way.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 13 --------------------------</maml:title>
        <dev:code>PS\&gt; Remove-Item -Path .\test.xlsx -ErrorAction Ignore
PS\&gt; $excel = Get-Process | Select-Object -Property Name,Company,Handles,CPU,PM,NPM,WS |
        Export-Excel -Path .\test.xlsx -ClearSheet -WorksheetName "Processes" -PassThru
PS\&gt; $sheet = $excel.Workbook.Worksheets ["Processes"]
PS\&gt; $sheet.Column(1) | Set-ExcelRange -Bold -AutoFit
PS\&gt; $sheet.Column(2) | Set-ExcelRange -Width 29 -WrapText
PS\&gt; $sheet.Column(3) | Set-ExcelRange -HorizontalAlignment Right -NFormat "#,###"
PS\&gt; Set-ExcelRange -Address $sheet.Cells ["E1:H1048576"]  -HorizontalAlignment Right -NFormat "#,###"
PS\&gt; Set-ExcelRange -Address $sheet.Column(4)  -HorizontalAlignment Right -NFormat "#,##0.0" -Bold
PS\&gt; Set-ExcelRange -Address $sheet.Row(1) -Bold -HorizontalAlignment Center
PS\&gt; Add-ConditionalFormatting -WorkSheet $sheet -Range "D2:D1048576" -DataBarColor Red
PS\&gt; Add-ConditionalFormatting -WorkSheet $sheet -Range "G2:G1048576" -RuleType GreaterThan -ConditionValue "104857600" -ForeGroundColor Red
PS\&gt; foreach ($c in 5..9) {Set-ExcelRange -Address $sheet.Column($c)  -AutoFit }
PS\&gt; Export-Excel -ExcelPackage $excel -WorksheetName "Processes" -IncludePivotChart -ChartType ColumnClustered -NoLegend -PivotRows company -PivotData @{'Name'='Count'}  -Show</dev:code>
        <dev:remarks>
          <maml:para>This a more sophisticated version of the previous example showing different ways of using Set-ExcelRange, and also adding conditional formatting.</maml:para>
          <maml:para>In the final command a PivotChart is added and the workbook is opened in Excel.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 14 --------------------------</maml:title>
        <dev:code>PS\&gt; 0..360 | ForEach-Object {[pscustomobject][ordered]@{X=$_; Sinx="=Sin(Radians(x)) "} } |
        Export-Excel -now -LineChart -AutoNameRange</dev:code>
        <dev:remarks>
          <maml:para>Creates a line chart showing the value of Sine(x) for values of X between 0 and 360 degrees.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 15 --------------------------</maml:title>
        <dev:code>PS\&gt; Invoke-Sqlcmd -ServerInstance localhost\DEFAULT -Database AdventureWorks2014 -Query "select *  from sys.tables" -OutputAs DataRows |
       Export-Excel -Path .\SysTables_AdventureWorks2014.xlsx -WorksheetName Tables</dev:code>
        <dev:remarks>
          <maml:para>Runs a query against a SQL Server database and outputs the resulting rows as DataRows using the -OutputAs parameter. The results are then piped to the Export-Excel function.</maml:para>
          <maml:para>NOTE: You need to install the SqlServer module from the PowerShell Gallery in order to get the -OutputAs parameter for the Invoke-Sqlcmd cmdlet.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>https://github.com/dfinke/ImportExcel</maml:linkText>
        <maml:uri>https://github.com/dfinke/ImportExcel</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-ExcelSheetInfo</command:name>
      <command:verb>Get</command:verb>
      <command:noun>ExcelSheetInfo</command:noun>
      <maml:description>
        <maml:para>Get worksheet names and their indices of an Excel workbook.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-ExcelSheetInfo cmdlet gets worksheet names and their indices of an Excel workbook.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-ExcelSheetInfo</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="FullName">
          <maml:name>Path</maml:name>
          <maml:Description>
            <maml:para>Specifies the path to the Excel file. (This parameter is required.)</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="FullName">
        <maml:name>Path</maml:name>
        <maml:Description>
          <maml:para>Specifies the path to the Excel file. (This parameter is required.)</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <maml:alertSet>
      <maml:alert>
        <maml:para>CHANGELOG 2016/01/07 Added Created by Johan Akerstrom (https://github.com/CosmosKey)</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Get-ExcelSheetInfo .\Test.xlsx</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>https://github.com/dfinke/ImportExcel</maml:linkText>
        <maml:uri>https://github.com/dfinke/ImportExcel</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-ExcelWorkbookInfo</command:name>
      <command:verb>Get</command:verb>
      <command:noun>ExcelWorkbookInfo</command:noun>
      <maml:description>
        <maml:para>Retrieve information of an Excel workbook.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-ExcelWorkbookInfo cmdlet retrieves information (LastModifiedBy, LastPrinted, Created, Modified, ...) fron an Excel workbook. These are the same details that are visible in Windows Explorer when right clicking the Excel file, selecting Properties and check the Details tabpage.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-ExcelWorkbookInfo</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="FullName">
          <maml:name>Path</maml:name>
          <maml:Description>
            <maml:para>Specifies the path to the Excel file. This parameter is required.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="FullName">
        <maml:name>Path</maml:name>
        <maml:Description>
          <maml:para>Specifies the path to the Excel file. This parameter is required.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <maml:alertSet>
      <maml:alert>
        <maml:para>CHANGELOG 2016/01/07 Added Created by Johan Akerstrom (https://github.com/CosmosKey)</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Get-ExcelWorkbookInfo .\Test.xlsx</dev:code>
        <dev:remarks>
          <maml:para>CorePropertiesXml     : #document Title                 : Subject               : Author                : Konica Minolta User Comments              : Keywords              : LastModifiedBy        : Bond, James (London) GBR LastPrinted           : 2017-01-21T12:36:11Z Created               : 17/01/2017 13:51:32 Category              : Status                : ExtendedPropertiesXml : #document Application           : Microsoft Excel HyperlinkBase         : AppVersion            : 14.0300 Company               : Secret Service Manager               : Modified              : 10/02/2017 12:45:37 CustomPropertiesXml   : #document</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>https://github.com/dfinke/ImportExcel</maml:linkText>
        <maml:uri>https://github.com/dfinke/ImportExcel</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Import-Excel</command:name>
      <command:verb>Import</command:verb>
      <command:noun>Excel</command:noun>
      <maml:description>
        <maml:para>Create custom objects from the rows in an Excel worksheet.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Import-Excel cmdlet creates custom objects from the rows in an Excel worksheet. Each row is represented as one object.</maml:para>
      <maml:para>This is possible without installing Microsoft Excel by using the .NET library 'EPPLus.dll'.</maml:para>
      <maml:para>By default, the property names of the objects are retrieved from the column headers. Because an object cannot have a blank property name, only columns with column headers will be imported.</maml:para>
      <maml:para>If the default behavior is not desired and you want to import the complete worksheet 'as is', the parameter '-NoHeader' can be used. In case you want to provide your own property names, you can use the parameter '-HeaderName'.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Import-Excel</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="FullName">
          <maml:name>Path</maml:name>
          <maml:Description>
            <maml:para>Specifies the path to the Excel file.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="Sheet">
          <maml:name>WorksheetName</maml:name>
          <maml:Description>
            <maml:para>Specifies the name of the worksheet in the Excel workbook to import. By default, if no name is provided, the first worksheet will be imported.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoHeader</maml:name>
          <maml:Description>
            <maml:para>Automatically generate property names (P1, P2, P3, ..) instead of the ones defined in the column headers of the TopRow.</maml:para>
            <maml:para>This switch is best used when you want to import the complete worksheet 'as is' and are not concerned with the property names.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="HeaderRow, TopRow">
          <maml:name>StartRow</maml:name>
          <maml:Description>
            <maml:para>The row from where we start to import data, all rows above the StartRow are disregarded. By default this is the first row.</maml:para>
            <maml:para>When the parameters '-NoHeader' and '-HeaderName' are not provided, this row will contain the column headers that will be used as property names. If either is provided, the property names are automatically created and this row will be treated as a regular row containing data.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="StopRow, BottomRow">
          <maml:name>EndRow</maml:name>
          <maml:Description>
            <maml:para>By default all rows up to the last cell in the sheet will be imported. If specified, import stops at this row.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="LeftColumn">
          <maml:name>StartColumn</maml:name>
          <maml:Description>
            <maml:para>The number of the first column to read data from (1 by default).</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="RightColumn">
          <maml:name>EndColumn</maml:name>
          <maml:Description>
            <maml:para>By default the import reads up to the last populated column, -EndColumn tells the import to stop at an earlier number.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DataOnly</maml:name>
          <maml:Description>
            <maml:para>Import only rows and columns that contain data, empty rows and empty columns are not imported.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AsText</maml:name>
          <maml:Description>
            <maml:para>Normally Import-Excel returns the Cell values. AsText allows selected columns to be returned as the text displayed in their cells. (* is supported as a wildcard.)</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AsDate</maml:name>
          <maml:Description>
            <maml:para>Not all date formats are recognized as indicating the number in the cell represents a date  AsDate forces the number which would be returned to be converted to a date. (* is supported as a wildcard.)</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Password</maml:name>
          <maml:Description>
            <maml:para>Accepts a string that will be used to open a password protected Excel file.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Import-Excel</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="FullName">
          <maml:name>Path</maml:name>
          <maml:Description>
            <maml:para>Specifies the path to the Excel file.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="Sheet">
          <maml:name>WorksheetName</maml:name>
          <maml:Description>
            <maml:para>Specifies the name of the worksheet in the Excel workbook to import. By default, if no name is provided, the first worksheet will be imported.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>HeaderName</maml:name>
          <maml:Description>
            <maml:para>Specifies custom property names to use, instead of the values defined in the column headers of the TopRow.</maml:para>
            <maml:para>If you provide fewer header names than there are columns of data in the worksheet, then data will only be imported from that number of columns - the others will be ignored.</maml:para>
            <maml:para>If you provide more header names than there are columns of data in the worksheet, it will result in blank properties being added to the objects returned.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="HeaderRow, TopRow">
          <maml:name>StartRow</maml:name>
          <maml:Description>
            <maml:para>The row from where we start to import data, all rows above the StartRow are disregarded. By default this is the first row.</maml:para>
            <maml:para>When the parameters '-NoHeader' and '-HeaderName' are not provided, this row will contain the column headers that will be used as property names. If either is provided, the property names are automatically created and this row will be treated as a regular row containing data.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="StopRow, BottomRow">
          <maml:name>EndRow</maml:name>
          <maml:Description>
            <maml:para>By default all rows up to the last cell in the sheet will be imported. If specified, import stops at this row.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="LeftColumn">
          <maml:name>StartColumn</maml:name>
          <maml:Description>
            <maml:para>The number of the first column to read data from (1 by default).</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="RightColumn">
          <maml:name>EndColumn</maml:name>
          <maml:Description>
            <maml:para>By default the import reads up to the last populated column, -EndColumn tells the import to stop at an earlier number.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DataOnly</maml:name>
          <maml:Description>
            <maml:para>Import only rows and columns that contain data, empty rows and empty columns are not imported.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AsText</maml:name>
          <maml:Description>
            <maml:para>Normally Import-Excel returns the Cell values. AsText allows selected columns to be returned as the text displayed in their cells. (* is supported as a wildcard.)</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AsDate</maml:name>
          <maml:Description>
            <maml:para>Not all date formats are recognized as indicating the number in the cell represents a date  AsDate forces the number which would be returned to be converted to a date. (* is supported as a wildcard.)</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Password</maml:name>
          <maml:Description>
            <maml:para>Accepts a string that will be used to open a password protected Excel file.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Import-Excel</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="FullName">
          <maml:name>Path</maml:name>
          <maml:Description>
            <maml:para>Specifies the path to the Excel file.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="Sheet">
          <maml:name>WorksheetName</maml:name>
          <maml:Description>
            <maml:para>Specifies the name of the worksheet in the Excel workbook to import. By default, if no name is provided, the first worksheet will be imported.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="HeaderRow, TopRow">
          <maml:name>StartRow</maml:name>
          <maml:Description>
            <maml:para>The row from where we start to import data, all rows above the StartRow are disregarded. By default this is the first row.</maml:para>
            <maml:para>When the parameters '-NoHeader' and '-HeaderName' are not provided, this row will contain the column headers that will be used as property names. If either is provided, the property names are automatically created and this row will be treated as a regular row containing data.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="StopRow, BottomRow">
          <maml:name>EndRow</maml:name>
          <maml:Description>
            <maml:para>By default all rows up to the last cell in the sheet will be imported. If specified, import stops at this row.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="LeftColumn">
          <maml:name>StartColumn</maml:name>
          <maml:Description>
            <maml:para>The number of the first column to read data from (1 by default).</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="RightColumn">
          <maml:name>EndColumn</maml:name>
          <maml:Description>
            <maml:para>By default the import reads up to the last populated column, -EndColumn tells the import to stop at an earlier number.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DataOnly</maml:name>
          <maml:Description>
            <maml:para>Import only rows and columns that contain data, empty rows and empty columns are not imported.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AsText</maml:name>
          <maml:Description>
            <maml:para>Normally Import-Excel returns the Cell values. AsText allows selected columns to be returned as the text displayed in their cells. (* is supported as a wildcard.)</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AsDate</maml:name>
          <maml:Description>
            <maml:para>Not all date formats are recognized as indicating the number in the cell represents a date  AsDate forces the number which would be returned to be converted to a date. (* is supported as a wildcard.)</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Password</maml:name>
          <maml:Description>
            <maml:para>Accepts a string that will be used to open a password protected Excel file.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Import-Excel</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="Sheet">
          <maml:name>WorksheetName</maml:name>
          <maml:Description>
            <maml:para>Specifies the name of the worksheet in the Excel workbook to import. By default, if no name is provided, the first worksheet will be imported.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExcelPackage</maml:name>
          <maml:Description>
            <maml:para>Instead of specifying a path, provides an Excel Package object (from Open-ExcelPackage). Using this avoids re-reading the whole file when importing multiple parts of it.</maml:para>
            <maml:para>To allow multiple read operations Import-Excel does NOT close the package, and you should use Close-ExcelPackage -noSave to close it.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ExcelPackage</command:parameterValue>
          <dev:type>
            <maml:name>ExcelPackage</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoHeader</maml:name>
          <maml:Description>
            <maml:para>Automatically generate property names (P1, P2, P3, ..) instead of the ones defined in the column headers of the TopRow.</maml:para>
            <maml:para>This switch is best used when you want to import the complete worksheet 'as is' and are not concerned with the property names.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="HeaderRow, TopRow">
          <maml:name>StartRow</maml:name>
          <maml:Description>
            <maml:para>The row from where we start to import data, all rows above the StartRow are disregarded. By default this is the first row.</maml:para>
            <maml:para>When the parameters '-NoHeader' and '-HeaderName' are not provided, this row will contain the column headers that will be used as property names. If either is provided, the property names are automatically created and this row will be treated as a regular row containing data.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="StopRow, BottomRow">
          <maml:name>EndRow</maml:name>
          <maml:Description>
            <maml:para>By default all rows up to the last cell in the sheet will be imported. If specified, import stops at this row.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="LeftColumn">
          <maml:name>StartColumn</maml:name>
          <maml:Description>
            <maml:para>The number of the first column to read data from (1 by default).</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="RightColumn">
          <maml:name>EndColumn</maml:name>
          <maml:Description>
            <maml:para>By default the import reads up to the last populated column, -EndColumn tells the import to stop at an earlier number.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DataOnly</maml:name>
          <maml:Description>
            <maml:para>Import only rows and columns that contain data, empty rows and empty columns are not imported.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AsText</maml:name>
          <maml:Description>
            <maml:para>Normally Import-Excel returns the Cell values. AsText allows selected columns to be returned as the text displayed in their cells. (* is supported as a wildcard.)</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AsDate</maml:name>
          <maml:Description>
            <maml:para>Not all date formats are recognized as indicating the number in the cell represents a date  AsDate forces the number which would be returned to be converted to a date. (* is supported as a wildcard.)</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Password</maml:name>
          <maml:Description>
            <maml:para>Accepts a string that will be used to open a password protected Excel file.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Import-Excel</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="Sheet">
          <maml:name>WorksheetName</maml:name>
          <maml:Description>
            <maml:para>Specifies the name of the worksheet in the Excel workbook to import. By default, if no name is provided, the first worksheet will be imported.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExcelPackage</maml:name>
          <maml:Description>
            <maml:para>Instead of specifying a path, provides an Excel Package object (from Open-ExcelPackage). Using this avoids re-reading the whole file when importing multiple parts of it.</maml:para>
            <maml:para>To allow multiple read operations Import-Excel does NOT close the package, and you should use Close-ExcelPackage -noSave to close it.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ExcelPackage</command:parameterValue>
          <dev:type>
            <maml:name>ExcelPackage</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>HeaderName</maml:name>
          <maml:Description>
            <maml:para>Specifies custom property names to use, instead of the values defined in the column headers of the TopRow.</maml:para>
            <maml:para>If you provide fewer header names than there are columns of data in the worksheet, then data will only be imported from that number of columns - the others will be ignored.</maml:para>
            <maml:para>If you provide more header names than there are columns of data in the worksheet, it will result in blank properties being added to the objects returned.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="HeaderRow, TopRow">
          <maml:name>StartRow</maml:name>
          <maml:Description>
            <maml:para>The row from where we start to import data, all rows above the StartRow are disregarded. By default this is the first row.</maml:para>
            <maml:para>When the parameters '-NoHeader' and '-HeaderName' are not provided, this row will contain the column headers that will be used as property names. If either is provided, the property names are automatically created and this row will be treated as a regular row containing data.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="StopRow, BottomRow">
          <maml:name>EndRow</maml:name>
          <maml:Description>
            <maml:para>By default all rows up to the last cell in the sheet will be imported. If specified, import stops at this row.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="LeftColumn">
          <maml:name>StartColumn</maml:name>
          <maml:Description>
            <maml:para>The number of the first column to read data from (1 by default).</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="RightColumn">
          <maml:name>EndColumn</maml:name>
          <maml:Description>
            <maml:para>By default the import reads up to the last populated column, -EndColumn tells the import to stop at an earlier number.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DataOnly</maml:name>
          <maml:Description>
            <maml:para>Import only rows and columns that contain data, empty rows and empty columns are not imported.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AsText</maml:name>
          <maml:Description>
            <maml:para>Normally Import-Excel returns the Cell values. AsText allows selected columns to be returned as the text displayed in their cells. (* is supported as a wildcard.)</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AsDate</maml:name>
          <maml:Description>
            <maml:para>Not all date formats are recognized as indicating the number in the cell represents a date  AsDate forces the number which would be returned to be converted to a date. (* is supported as a wildcard.)</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Password</maml:name>
          <maml:Description>
            <maml:para>Accepts a string that will be used to open a password protected Excel file.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Import-Excel</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="Sheet">
          <maml:name>WorksheetName</maml:name>
          <maml:Description>
            <maml:para>Specifies the name of the worksheet in the Excel workbook to import. By default, if no name is provided, the first worksheet will be imported.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExcelPackage</maml:name>
          <maml:Description>
            <maml:para>Instead of specifying a path, provides an Excel Package object (from Open-ExcelPackage). Using this avoids re-reading the whole file when importing multiple parts of it.</maml:para>
            <maml:para>To allow multiple read operations Import-Excel does NOT close the package, and you should use Close-ExcelPackage -noSave to close it.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ExcelPackage</command:parameterValue>
          <dev:type>
            <maml:name>ExcelPackage</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="HeaderRow, TopRow">
          <maml:name>StartRow</maml:name>
          <maml:Description>
            <maml:para>The row from where we start to import data, all rows above the StartRow are disregarded. By default this is the first row.</maml:para>
            <maml:para>When the parameters '-NoHeader' and '-HeaderName' are not provided, this row will contain the column headers that will be used as property names. If either is provided, the property names are automatically created and this row will be treated as a regular row containing data.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="StopRow, BottomRow">
          <maml:name>EndRow</maml:name>
          <maml:Description>
            <maml:para>By default all rows up to the last cell in the sheet will be imported. If specified, import stops at this row.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="LeftColumn">
          <maml:name>StartColumn</maml:name>
          <maml:Description>
            <maml:para>The number of the first column to read data from (1 by default).</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="RightColumn">
          <maml:name>EndColumn</maml:name>
          <maml:Description>
            <maml:para>By default the import reads up to the last populated column, -EndColumn tells the import to stop at an earlier number.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DataOnly</maml:name>
          <maml:Description>
            <maml:para>Import only rows and columns that contain data, empty rows and empty columns are not imported.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AsText</maml:name>
          <maml:Description>
            <maml:para>Normally Import-Excel returns the Cell values. AsText allows selected columns to be returned as the text displayed in their cells. (* is supported as a wildcard.)</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AsDate</maml:name>
          <maml:Description>
            <maml:para>Not all date formats are recognized as indicating the number in the cell represents a date  AsDate forces the number which would be returned to be converted to a date. (* is supported as a wildcard.)</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Password</maml:name>
          <maml:Description>
            <maml:para>Accepts a string that will be used to open a password protected Excel file.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="FullName">
        <maml:name>Path</maml:name>
        <maml:Description>
          <maml:para>Specifies the path to the Excel file.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ExcelPackage</maml:name>
        <maml:Description>
          <maml:para>Instead of specifying a path, provides an Excel Package object (from Open-ExcelPackage). Using this avoids re-reading the whole file when importing multiple parts of it.</maml:para>
          <maml:para>To allow multiple read operations Import-Excel does NOT close the package, and you should use Close-ExcelPackage -noSave to close it.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelPackage</command:parameterValue>
        <dev:type>
          <maml:name>ExcelPackage</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="Sheet">
        <maml:name>WorksheetName</maml:name>
        <maml:Description>
          <maml:para>Specifies the name of the worksheet in the Excel workbook to import. By default, if no name is provided, the first worksheet will be imported.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>HeaderName</maml:name>
        <maml:Description>
          <maml:para>Specifies custom property names to use, instead of the values defined in the column headers of the TopRow.</maml:para>
          <maml:para>If you provide fewer header names than there are columns of data in the worksheet, then data will only be imported from that number of columns - the others will be ignored.</maml:para>
          <maml:para>If you provide more header names than there are columns of data in the worksheet, it will result in blank properties being added to the objects returned.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NoHeader</maml:name>
        <maml:Description>
          <maml:para>Automatically generate property names (P1, P2, P3, ..) instead of the ones defined in the column headers of the TopRow.</maml:para>
          <maml:para>This switch is best used when you want to import the complete worksheet 'as is' and are not concerned with the property names.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="HeaderRow, TopRow">
        <maml:name>StartRow</maml:name>
        <maml:Description>
          <maml:para>The row from where we start to import data, all rows above the StartRow are disregarded. By default this is the first row.</maml:para>
          <maml:para>When the parameters '-NoHeader' and '-HeaderName' are not provided, this row will contain the column headers that will be used as property names. If either is provided, the property names are automatically created and this row will be treated as a regular row containing data.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>1</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="StopRow, BottomRow">
        <maml:name>EndRow</maml:name>
        <maml:Description>
          <maml:para>By default all rows up to the last cell in the sheet will be imported. If specified, import stops at this row.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="LeftColumn">
        <maml:name>StartColumn</maml:name>
        <maml:Description>
          <maml:para>The number of the first column to read data from (1 by default).</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>1</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="RightColumn">
        <maml:name>EndColumn</maml:name>
        <maml:Description>
          <maml:para>By default the import reads up to the last populated column, -EndColumn tells the import to stop at an earlier number.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>DataOnly</maml:name>
        <maml:Description>
          <maml:para>Import only rows and columns that contain data, empty rows and empty columns are not imported.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AsText</maml:name>
        <maml:Description>
          <maml:para>Normally Import-Excel returns the Cell values. AsText allows selected columns to be returned as the text displayed in their cells. (* is supported as a wildcard.)</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AsDate</maml:name>
        <maml:Description>
          <maml:para>Not all date formats are recognized as indicating the number in the cell represents a date  AsDate forces the number which would be returned to be converted to a date. (* is supported as a wildcard.)</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Password</maml:name>
        <maml:Description>
          <maml:para>Accepts a string that will be used to open a password protected Excel file.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>----------------------------------------------
| File: Movies.xlsx     -      Sheet: Actors |
----------------------------------------------
|           A           B            C       |
|1     First Name                 Address    |
|2     Chuck         Norris       California |
|3     Jean-Claude   Vandamme     Brussels   |
----------------------------------------------

PS C:&gt; Import-Excel -Path 'C:\Movies.xlsx' -WorkSheetname Actors

First Name: Chuck
Address   : California

First Name: Jean-Claude
Address   : Brussels</dev:code>
        <dev:remarks>
          <maml:para>Import data from an Excel worksheet. One object is created for each row. The property names of the objects consist of the column names defined in the first row. In case a column doesn't have a column header (usually in row 1 when '-StartRow' is not used), then the unnamed columns will be skipped and the data in those columns will not be imported.</maml:para>
          <maml:para>Notice that column 'B' is not imported because there's no value in cell 'B1' that can be used as property name for the objects.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>----------------------------------------------
| File: Movies.xlsx     -      Sheet: Actors |
----------------------------------------------
|           A           B            C       |
|1     First Name                 Address    |
|2     Chuck         Norris       California |
|3     Jean-Claude   Vandamme     Brussels   |
----------------------------------------------

PS\&gt; Import-Excel -Path 'C:\Movies.xlsx' -WorkSheetname Actors -NoHeader

P1: First Name
P2:
P3: Address

P1: Chuck
P2: Norris
P3: California

P1: Jean-Claude
P2: Vandamme
P3: Brussels</dev:code>
        <dev:remarks>
          <maml:para>Imports the complete Excel worksheet 'as is' by using the '-NoHeader' switch. One object is created for each row. The property names of the objects will be automatically generated (P1, P2, P3, ..).</maml:para>
          <maml:para>Notice that the column header (row 1) is imported as an object too.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <dev:code>----------------------------------------------------------
| File: Movies.xlsx            -           Sheet: Movies |
----------------------------------------------------------
|           A            B            C          D       |
|1     The Bodyguard   1992           9                  |
|2     The Matrix      1999           8                  |
|3                                                       |
|4     Skyfall         2012           9                  |
----------------------------------------------------------

PS\&gt; Import-Excel -Path 'C:\Movies.xlsx' -WorkSheetname Movies -HeaderName 'Movie name', 'Year', 'Rating', 'Genre'

Movie name: The Bodyguard
Year      : 1992
Rating    : 9
Genre     :

Movie name: The Matrix
Year      : 1999
Rating    : 8
Genre     :

Movie name:
Year      :
Rating    :
Genre     :

Movie name: Skyfall
Year      : 2012
Rating    : 9
Genre     :</dev:code>
        <dev:remarks>
          <maml:para>This imports data from an Excel worksheet, and as before one object is created for each row. The property names for the objects are defined in the parameter '-HeaderName'. The properties are named starting from the most left column (A) to the right. In case no value is present in one of the columns, that property will have an empty value.</maml:para>
          <maml:para>Notice that empty rows are imported and that data for the property 'Genre' is not present in the worksheet. As such, the 'Genre' property will be blank for all objects.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
        <dev:code>----------------------------------------------------------
| File: Movies.xlsx            -           Sheet: Movies |
----------------------------------------------------------
|           A            B            C          D       |
|1     The Bodyguard   1992           9                  |
|2     The Matrix      1999           8                  |
|3                                                       |
|4     Skyfall         2012           9                  |
----------------------------------------------------------

PS\&gt; Import-Excel -Path 'C:\Movies.xlsx' -WorkSheetname Movies -NoHeader -DataOnly

P1: The Bodyguard
P2: 1992
P3: 9

P1: The Matrix
P2: 1999
P3: 8

P1: Skyfall
P2: 2012
P3: 9</dev:code>
        <dev:remarks>
          <maml:para>Import data from an Excel worksheet, and one object is created for each non-blank row. The property names of the objects (P1, P2, P3, ..) are automatically generated by using the switch '-NoHeader' . The switch '-DataOnly' will speed up the import because empty rows and empty columns are not imported.</maml:para>
          <maml:para>Notice that empty rows and empty columns are not imported.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 5 --------------------------</maml:title>
        <dev:code>----------------------------------------------------------
| File: Movies.xlsx            -           Sheet: Actors |
----------------------------------------------------------
|           A           B           C            D       |
|1     Chuck                     Norris       California |
|2                                                       |
|3     Jean-Claude               Vandamme     Brussels   |
----------------------------------------------------------

PS\&gt; Import-Excel -Path 'C:\Movies.xlsx' -WorkSheetname Actors -DataOnly -HeaderName 'FirstName', 'SecondName', 'City' -StartRow 2

FirstName : Jean-Claude
SecondName: Vandamme
City      : Brussels</dev:code>
        <dev:remarks>
          <maml:para>Import data from an Excel worksheet. One object is created for each row. The property names are provided with the '-HeaderName' parameter. The import will start from row 2 and empty columns and rows are not imported.</maml:para>
          <maml:para>Notice that only 1 object is imported with only 3 properties. Column B and row 2 are empty and have been disregarded by using the switch '-DataOnly'. The property names have been named with the values provided with the parameter '-HeaderName'. Row number 1 with 'Chuck Norris' has not been imported, because we started the import from row 2 with the parameter '-StartRow 2'.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 6 --------------------------</maml:title>
        <dev:code>PS\&gt; ,(Import-Excel -Path .\SysTables_AdventureWorks2014.xlsx) |
    Write-SqlTableData -ServerInstance localhost\DEFAULT -Database BlankDB -SchemaName dbo -TableName MyNewTable_fromExcel -Force</dev:code>
        <dev:remarks>
          <maml:para>Imports data from an Excel file and pipes the result to the Write-SqlTableData command to be INSERTed into a table in a SQL Server database.</maml:para>
          <maml:para>The ",( ... )" around the Import-Excel command allows all rows to be imported from the Excel file, prior to pipelining to the Write-SqlTableData cmdlet. This helps prevent a RBAR scenario and is important when trying to import thousands of rows.</maml:para>
          <maml:para>The -Force parameter will be ignored if the table already exists. However, if a table is not found that matches the values provided by -SchemaName and -TableName parameters, it will create a new table in SQL Server database.</maml:para>
          <maml:para>The Write-SqlTableData cmdlet will inherit the column names &amp; datatypes for the new table from the object being piped in. NOTE: You need to install the SqlServer module from the PowerShell Gallery in oder to get the Write-SqlTableData cmdlet.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>https://github.com/dfinke/ImportExcel</maml:linkText>
        <maml:uri>https://github.com/dfinke/ImportExcel</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Join-Worksheet</command:name>
      <command:verb>Join</command:verb>
      <command:noun>Worksheet</command:noun>
      <maml:description>
        <maml:para>Combines data on all the sheets in an Excel worksheet onto a single sheet.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Join-Worksheet can work in two main ways, either</maml:para>
      <maml:para>*Combining data which has the same layout from many pages into one, or *Combining pages which have nothing in common. In the former case the header row is copied from the first sheet and, by default, each row of data is labelled with the name of the sheet it came from.</maml:para>
      <maml:para>In the latter case -NoHeader is specified, and each copied block can have the sheet it came from placed above it as a title.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Join-Worksheet</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>Path</maml:name>
          <maml:Description>
            <maml:para>Path to a new or existing .XLSX file.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>WorkSheetName</maml:name>
          <maml:Description>
            <maml:para>The name of a sheet within the workbook where the other sheets will be joined together - "Combined" by default.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Combined</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Clearsheet</maml:name>
          <maml:Description>
            <maml:para>If specified ,any pre-existing target for the joined data will be deleted and re-created; otherwise data will be appended on this sheet.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoHeader</maml:name>
          <maml:Description>
            <maml:para>Join-Worksheet assumes each sheet has identical headers and the headers should be copied to the target sheet, unless -NoHeader is specified.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FromLabel</maml:name>
          <maml:Description>
            <maml:para>If -NoHeader is NOT specified, then rows of data will be labeled with the name of the sheet they came from. FromLabel is the header for this column. If it is null or empty, the labels will be omitted.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>From</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>LabelBlocks</maml:name>
          <maml:Description>
            <maml:para>If specified, the copied blocks of data will have the name of the sheet they were copied from inserted above them as a title.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AutoSize</maml:name>
          <maml:Description>
            <maml:para>Sets the width of the Excel columns to display all the data in their cells.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FreezeTopRow</maml:name>
          <maml:Description>
            <maml:para>Freezes headers etc. in the top row.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FreezeFirstColumn</maml:name>
          <maml:Description>
            <maml:para>Freezes titles etc. in the left column.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FreezeTopRowFirstColumn</maml:name>
          <maml:Description>
            <maml:para>Freezes top row and left column (equivalent to Freeze pane 2,2 ).</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FreezePane</maml:name>
          <maml:Description>
            <maml:para>Freezes panes at specified coordinates (in the formRowNumber , ColumnNumber).</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
          <dev:type>
            <maml:name>Int32[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AutoFilter</maml:name>
          <maml:Description>
            <maml:para>Enables the Excel filter on the headers of the combined sheet.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BoldTopRow</maml:name>
          <maml:Description>
            <maml:para>Makes the top row boldface.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>HideSource</maml:name>
          <maml:Description>
            <maml:para>If specified, hides the sheets that the data is copied from.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Title</maml:name>
          <maml:Description>
            <maml:para>Text of a title to be placed in Cell A1.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TitleFillPattern</maml:name>
          <maml:Description>
            <maml:para>Sets the fill pattern for the title cell.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Solid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Gray125</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Gray0625</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkVertical</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkHorizontal</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkDown</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkUp</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkGrid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkTrellis</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightVertical</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightHorizontal</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightDown</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightUp</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightGrid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightTrellis</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelFillStyle</command:parameterValue>
          <dev:type>
            <maml:name>ExcelFillStyle</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Solid</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TitleBackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Sets the cell background color for the title cell.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TitleBold</maml:name>
          <maml:Description>
            <maml:para>Sets the title in boldface type.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TitleSize</maml:name>
          <maml:Description>
            <maml:para>Sets the point size for the title.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>22</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotTableDefinition</maml:name>
          <maml:Description>
            <maml:para>Hashtable(s) with Sheet PivotRows, PivotColumns, PivotData, IncludePivotChart and ChartType values to specify a definition for one or morePivotTable(s).</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExcelChartDefinition</maml:name>
          <maml:Description>
            <maml:para>A hashtable containing ChartType, Title, NoLegend, ShowCategory, ShowPercent, Yrange, Xrange and SeriesHeader for one or more [non-pivot] charts.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
          <dev:type>
            <maml:name>Object[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalFormat</maml:name>
          <maml:Description>
            <maml:para>One or more conditional formatting rules defined with New-ConditionalFormattingIconSet.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
          <dev:type>
            <maml:name>Object[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalText</maml:name>
          <maml:Description>
            <maml:para>Applies a Conditional formatting rule defined with New-ConditionalText.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
          <dev:type>
            <maml:name>Object[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AutoNameRange</maml:name>
          <maml:Description>
            <maml:para>Makes each column a named range.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RangeName</maml:name>
          <maml:Description>
            <maml:para>Makes the data in the worksheet a named range.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ReturnRange</maml:name>
          <maml:Description>
            <maml:para>If specified, returns the range of cells in the combined sheet, in the format "A1:Z100".</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Show</maml:name>
          <maml:Description>
            <maml:para>Opens the Excel file immediately after creation. Convenient for viewing the results instantly without having to search for the file first.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PassThru</maml:name>
          <maml:Description>
            <maml:para>If specified, an object representing the unsaved Excel package will be returned, it then needs to be saved.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Join-Worksheet</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>Path</maml:name>
          <maml:Description>
            <maml:para>Path to a new or existing .XLSX file.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>WorkSheetName</maml:name>
          <maml:Description>
            <maml:para>The name of a sheet within the workbook where the other sheets will be joined together - "Combined" by default.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Combined</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Clearsheet</maml:name>
          <maml:Description>
            <maml:para>If specified ,any pre-existing target for the joined data will be deleted and re-created; otherwise data will be appended on this sheet.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoHeader</maml:name>
          <maml:Description>
            <maml:para>Join-Worksheet assumes each sheet has identical headers and the headers should be copied to the target sheet, unless -NoHeader is specified.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FromLabel</maml:name>
          <maml:Description>
            <maml:para>If -NoHeader is NOT specified, then rows of data will be labeled with the name of the sheet they came from. FromLabel is the header for this column. If it is null or empty, the labels will be omitted.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>From</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>LabelBlocks</maml:name>
          <maml:Description>
            <maml:para>If specified, the copied blocks of data will have the name of the sheet they were copied from inserted above them as a title.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AutoSize</maml:name>
          <maml:Description>
            <maml:para>Sets the width of the Excel columns to display all the data in their cells.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FreezeTopRow</maml:name>
          <maml:Description>
            <maml:para>Freezes headers etc. in the top row.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FreezeFirstColumn</maml:name>
          <maml:Description>
            <maml:para>Freezes titles etc. in the left column.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FreezeTopRowFirstColumn</maml:name>
          <maml:Description>
            <maml:para>Freezes top row and left column (equivalent to Freeze pane 2,2 ).</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FreezePane</maml:name>
          <maml:Description>
            <maml:para>Freezes panes at specified coordinates (in the formRowNumber , ColumnNumber).</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
          <dev:type>
            <maml:name>Int32[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BoldTopRow</maml:name>
          <maml:Description>
            <maml:para>Makes the top row boldface.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>HideSource</maml:name>
          <maml:Description>
            <maml:para>If specified, hides the sheets that the data is copied from.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Title</maml:name>
          <maml:Description>
            <maml:para>Text of a title to be placed in Cell A1.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TitleFillPattern</maml:name>
          <maml:Description>
            <maml:para>Sets the fill pattern for the title cell.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Solid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Gray125</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Gray0625</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkVertical</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkHorizontal</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkDown</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkUp</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkGrid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkTrellis</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightVertical</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightHorizontal</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightDown</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightUp</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightGrid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightTrellis</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelFillStyle</command:parameterValue>
          <dev:type>
            <maml:name>ExcelFillStyle</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Solid</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TitleBackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Sets the cell background color for the title cell.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TitleBold</maml:name>
          <maml:Description>
            <maml:para>Sets the title in boldface type.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TitleSize</maml:name>
          <maml:Description>
            <maml:para>Sets the point size for the title.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>22</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotTableDefinition</maml:name>
          <maml:Description>
            <maml:para>Hashtable(s) with Sheet PivotRows, PivotColumns, PivotData, IncludePivotChart and ChartType values to specify a definition for one or morePivotTable(s).</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExcelChartDefinition</maml:name>
          <maml:Description>
            <maml:para>A hashtable containing ChartType, Title, NoLegend, ShowCategory, ShowPercent, Yrange, Xrange and SeriesHeader for one or more [non-pivot] charts.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
          <dev:type>
            <maml:name>Object[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalFormat</maml:name>
          <maml:Description>
            <maml:para>One or more conditional formatting rules defined with New-ConditionalFormattingIconSet.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
          <dev:type>
            <maml:name>Object[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalText</maml:name>
          <maml:Description>
            <maml:para>Applies a Conditional formatting rule defined with New-ConditionalText.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
          <dev:type>
            <maml:name>Object[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AutoNameRange</maml:name>
          <maml:Description>
            <maml:para>Makes each column a named range.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RangeName</maml:name>
          <maml:Description>
            <maml:para>Makes the data in the worksheet a named range.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TableName</maml:name>
          <maml:Description>
            <maml:para>Makes the data in the worksheet a table with a name and applies a style to it. Name must not contain spaces.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TableStyle</maml:name>
          <maml:Description>
            <maml:para>Selects the style for the named table - defaults to "Medium6".</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Custom</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light1</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light2</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light3</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light4</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light5</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light6</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light7</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light8</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light9</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light10</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light11</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light12</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light13</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light14</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light15</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light16</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light17</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light18</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light19</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light20</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light21</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium1</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium2</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium3</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium4</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium5</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium6</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium7</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium8</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium9</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium10</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium11</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium12</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium13</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium14</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium15</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium16</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium17</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium18</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium19</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium20</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium21</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium22</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium23</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium24</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium25</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium26</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium27</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium28</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark1</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark2</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark3</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark4</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark5</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark6</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark7</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark8</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark9</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark10</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark11</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">TableStyles</command:parameterValue>
          <dev:type>
            <maml:name>TableStyles</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Medium6</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ReturnRange</maml:name>
          <maml:Description>
            <maml:para>If specified, returns the range of cells in the combined sheet, in the format "A1:Z100".</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Show</maml:name>
          <maml:Description>
            <maml:para>Opens the Excel file immediately after creation. Convenient for viewing the results instantly without having to search for the file first.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PassThru</maml:name>
          <maml:Description>
            <maml:para>If specified, an object representing the unsaved Excel package will be returned, it then needs to be saved.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Join-Worksheet</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExcelPackage</maml:name>
          <maml:Description>
            <maml:para>An object representing an Excel Package - either from Open-ExcelPackage or specifying -PassThru to Export-Excel.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ExcelPackage</command:parameterValue>
          <dev:type>
            <maml:name>ExcelPackage</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>WorkSheetName</maml:name>
          <maml:Description>
            <maml:para>The name of a sheet within the workbook where the other sheets will be joined together - "Combined" by default.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Combined</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Clearsheet</maml:name>
          <maml:Description>
            <maml:para>If specified ,any pre-existing target for the joined data will be deleted and re-created; otherwise data will be appended on this sheet.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoHeader</maml:name>
          <maml:Description>
            <maml:para>Join-Worksheet assumes each sheet has identical headers and the headers should be copied to the target sheet, unless -NoHeader is specified.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FromLabel</maml:name>
          <maml:Description>
            <maml:para>If -NoHeader is NOT specified, then rows of data will be labeled with the name of the sheet they came from. FromLabel is the header for this column. If it is null or empty, the labels will be omitted.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>From</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>LabelBlocks</maml:name>
          <maml:Description>
            <maml:para>If specified, the copied blocks of data will have the name of the sheet they were copied from inserted above them as a title.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AutoSize</maml:name>
          <maml:Description>
            <maml:para>Sets the width of the Excel columns to display all the data in their cells.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FreezeTopRow</maml:name>
          <maml:Description>
            <maml:para>Freezes headers etc. in the top row.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FreezeFirstColumn</maml:name>
          <maml:Description>
            <maml:para>Freezes titles etc. in the left column.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FreezeTopRowFirstColumn</maml:name>
          <maml:Description>
            <maml:para>Freezes top row and left column (equivalent to Freeze pane 2,2 ).</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FreezePane</maml:name>
          <maml:Description>
            <maml:para>Freezes panes at specified coordinates (in the formRowNumber , ColumnNumber).</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
          <dev:type>
            <maml:name>Int32[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BoldTopRow</maml:name>
          <maml:Description>
            <maml:para>Makes the top row boldface.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>HideSource</maml:name>
          <maml:Description>
            <maml:para>If specified, hides the sheets that the data is copied from.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Title</maml:name>
          <maml:Description>
            <maml:para>Text of a title to be placed in Cell A1.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TitleFillPattern</maml:name>
          <maml:Description>
            <maml:para>Sets the fill pattern for the title cell.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Solid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Gray125</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Gray0625</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkVertical</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkHorizontal</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkDown</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkUp</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkGrid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkTrellis</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightVertical</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightHorizontal</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightDown</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightUp</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightGrid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightTrellis</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelFillStyle</command:parameterValue>
          <dev:type>
            <maml:name>ExcelFillStyle</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Solid</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TitleBackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Sets the cell background color for the title cell.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TitleBold</maml:name>
          <maml:Description>
            <maml:para>Sets the title in boldface type.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TitleSize</maml:name>
          <maml:Description>
            <maml:para>Sets the point size for the title.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>22</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotTableDefinition</maml:name>
          <maml:Description>
            <maml:para>Hashtable(s) with Sheet PivotRows, PivotColumns, PivotData, IncludePivotChart and ChartType values to specify a definition for one or morePivotTable(s).</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExcelChartDefinition</maml:name>
          <maml:Description>
            <maml:para>A hashtable containing ChartType, Title, NoLegend, ShowCategory, ShowPercent, Yrange, Xrange and SeriesHeader for one or more [non-pivot] charts.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
          <dev:type>
            <maml:name>Object[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalFormat</maml:name>
          <maml:Description>
            <maml:para>One or more conditional formatting rules defined with New-ConditionalFormattingIconSet.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
          <dev:type>
            <maml:name>Object[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalText</maml:name>
          <maml:Description>
            <maml:para>Applies a Conditional formatting rule defined with New-ConditionalText.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
          <dev:type>
            <maml:name>Object[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AutoNameRange</maml:name>
          <maml:Description>
            <maml:para>Makes each column a named range.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RangeName</maml:name>
          <maml:Description>
            <maml:para>Makes the data in the worksheet a named range.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TableName</maml:name>
          <maml:Description>
            <maml:para>Makes the data in the worksheet a table with a name and applies a style to it. Name must not contain spaces.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TableStyle</maml:name>
          <maml:Description>
            <maml:para>Selects the style for the named table - defaults to "Medium6".</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Custom</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light1</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light2</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light3</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light4</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light5</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light6</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light7</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light8</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light9</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light10</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light11</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light12</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light13</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light14</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light15</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light16</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light17</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light18</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light19</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light20</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light21</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium1</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium2</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium3</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium4</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium5</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium6</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium7</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium8</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium9</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium10</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium11</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium12</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium13</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium14</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium15</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium16</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium17</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium18</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium19</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium20</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium21</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium22</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium23</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium24</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium25</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium26</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium27</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium28</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark1</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark2</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark3</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark4</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark5</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark6</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark7</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark8</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark9</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark10</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark11</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">TableStyles</command:parameterValue>
          <dev:type>
            <maml:name>TableStyles</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Medium6</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ReturnRange</maml:name>
          <maml:Description>
            <maml:para>If specified, returns the range of cells in the combined sheet, in the format "A1:Z100".</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Show</maml:name>
          <maml:Description>
            <maml:para>Opens the Excel file immediately after creation. Convenient for viewing the results instantly without having to search for the file first.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PassThru</maml:name>
          <maml:Description>
            <maml:para>If specified, an object representing the unsaved Excel package will be returned, it then needs to be saved.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Join-Worksheet</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExcelPackage</maml:name>
          <maml:Description>
            <maml:para>An object representing an Excel Package - either from Open-ExcelPackage or specifying -PassThru to Export-Excel.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ExcelPackage</command:parameterValue>
          <dev:type>
            <maml:name>ExcelPackage</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>WorkSheetName</maml:name>
          <maml:Description>
            <maml:para>The name of a sheet within the workbook where the other sheets will be joined together - "Combined" by default.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Combined</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Clearsheet</maml:name>
          <maml:Description>
            <maml:para>If specified ,any pre-existing target for the joined data will be deleted and re-created; otherwise data will be appended on this sheet.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoHeader</maml:name>
          <maml:Description>
            <maml:para>Join-Worksheet assumes each sheet has identical headers and the headers should be copied to the target sheet, unless -NoHeader is specified.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FromLabel</maml:name>
          <maml:Description>
            <maml:para>If -NoHeader is NOT specified, then rows of data will be labeled with the name of the sheet they came from. FromLabel is the header for this column. If it is null or empty, the labels will be omitted.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>From</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>LabelBlocks</maml:name>
          <maml:Description>
            <maml:para>If specified, the copied blocks of data will have the name of the sheet they were copied from inserted above them as a title.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AutoSize</maml:name>
          <maml:Description>
            <maml:para>Sets the width of the Excel columns to display all the data in their cells.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FreezeTopRow</maml:name>
          <maml:Description>
            <maml:para>Freezes headers etc. in the top row.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FreezeFirstColumn</maml:name>
          <maml:Description>
            <maml:para>Freezes titles etc. in the left column.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FreezeTopRowFirstColumn</maml:name>
          <maml:Description>
            <maml:para>Freezes top row and left column (equivalent to Freeze pane 2,2 ).</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FreezePane</maml:name>
          <maml:Description>
            <maml:para>Freezes panes at specified coordinates (in the formRowNumber , ColumnNumber).</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
          <dev:type>
            <maml:name>Int32[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AutoFilter</maml:name>
          <maml:Description>
            <maml:para>Enables the Excel filter on the headers of the combined sheet.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BoldTopRow</maml:name>
          <maml:Description>
            <maml:para>Makes the top row boldface.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>HideSource</maml:name>
          <maml:Description>
            <maml:para>If specified, hides the sheets that the data is copied from.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Title</maml:name>
          <maml:Description>
            <maml:para>Text of a title to be placed in Cell A1.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TitleFillPattern</maml:name>
          <maml:Description>
            <maml:para>Sets the fill pattern for the title cell.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Solid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Gray125</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Gray0625</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkVertical</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkHorizontal</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkDown</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkUp</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkGrid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkTrellis</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightVertical</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightHorizontal</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightDown</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightUp</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightGrid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightTrellis</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelFillStyle</command:parameterValue>
          <dev:type>
            <maml:name>ExcelFillStyle</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Solid</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TitleBackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Sets the cell background color for the title cell.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TitleBold</maml:name>
          <maml:Description>
            <maml:para>Sets the title in boldface type.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TitleSize</maml:name>
          <maml:Description>
            <maml:para>Sets the point size for the title.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>22</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotTableDefinition</maml:name>
          <maml:Description>
            <maml:para>Hashtable(s) with Sheet PivotRows, PivotColumns, PivotData, IncludePivotChart and ChartType values to specify a definition for one or morePivotTable(s).</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExcelChartDefinition</maml:name>
          <maml:Description>
            <maml:para>A hashtable containing ChartType, Title, NoLegend, ShowCategory, ShowPercent, Yrange, Xrange and SeriesHeader for one or more [non-pivot] charts.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
          <dev:type>
            <maml:name>Object[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalFormat</maml:name>
          <maml:Description>
            <maml:para>One or more conditional formatting rules defined with New-ConditionalFormattingIconSet.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
          <dev:type>
            <maml:name>Object[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalText</maml:name>
          <maml:Description>
            <maml:para>Applies a Conditional formatting rule defined with New-ConditionalText.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
          <dev:type>
            <maml:name>Object[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AutoNameRange</maml:name>
          <maml:Description>
            <maml:para>Makes each column a named range.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RangeName</maml:name>
          <maml:Description>
            <maml:para>Makes the data in the worksheet a named range.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ReturnRange</maml:name>
          <maml:Description>
            <maml:para>If specified, returns the range of cells in the combined sheet, in the format "A1:Z100".</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Show</maml:name>
          <maml:Description>
            <maml:para>Opens the Excel file immediately after creation. Convenient for viewing the results instantly without having to search for the file first.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PassThru</maml:name>
          <maml:Description>
            <maml:para>If specified, an object representing the unsaved Excel package will be returned, it then needs to be saved.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
        <maml:name>Path</maml:name>
        <maml:Description>
          <maml:para>Path to a new or existing .XLSX file.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ExcelPackage</maml:name>
        <maml:Description>
          <maml:para>An object representing an Excel Package - either from Open-ExcelPackage or specifying -PassThru to Export-Excel.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelPackage</command:parameterValue>
        <dev:type>
          <maml:name>ExcelPackage</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>WorkSheetName</maml:name>
        <maml:Description>
          <maml:para>The name of a sheet within the workbook where the other sheets will be joined together - "Combined" by default.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Combined</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Clearsheet</maml:name>
        <maml:Description>
          <maml:para>If specified ,any pre-existing target for the joined data will be deleted and re-created; otherwise data will be appended on this sheet.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NoHeader</maml:name>
        <maml:Description>
          <maml:para>Join-Worksheet assumes each sheet has identical headers and the headers should be copied to the target sheet, unless -NoHeader is specified.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>FromLabel</maml:name>
        <maml:Description>
          <maml:para>If -NoHeader is NOT specified, then rows of data will be labeled with the name of the sheet they came from. FromLabel is the header for this column. If it is null or empty, the labels will be omitted.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>From</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>LabelBlocks</maml:name>
        <maml:Description>
          <maml:para>If specified, the copied blocks of data will have the name of the sheet they were copied from inserted above them as a title.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AutoSize</maml:name>
        <maml:Description>
          <maml:para>Sets the width of the Excel columns to display all the data in their cells.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>FreezeTopRow</maml:name>
        <maml:Description>
          <maml:para>Freezes headers etc. in the top row.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>FreezeFirstColumn</maml:name>
        <maml:Description>
          <maml:para>Freezes titles etc. in the left column.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>FreezeTopRowFirstColumn</maml:name>
        <maml:Description>
          <maml:para>Freezes top row and left column (equivalent to Freeze pane 2,2 ).</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>FreezePane</maml:name>
        <maml:Description>
          <maml:para>Freezes panes at specified coordinates (in the formRowNumber , ColumnNumber).</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
        <dev:type>
          <maml:name>Int32[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AutoFilter</maml:name>
        <maml:Description>
          <maml:para>Enables the Excel filter on the headers of the combined sheet.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BoldTopRow</maml:name>
        <maml:Description>
          <maml:para>Makes the top row boldface.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>HideSource</maml:name>
        <maml:Description>
          <maml:para>If specified, hides the sheets that the data is copied from.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Title</maml:name>
        <maml:Description>
          <maml:para>Text of a title to be placed in Cell A1.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>TitleFillPattern</maml:name>
        <maml:Description>
          <maml:para>Sets the fill pattern for the title cell.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelFillStyle</command:parameterValue>
        <dev:type>
          <maml:name>ExcelFillStyle</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Solid</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>TitleBackgroundColor</maml:name>
        <maml:Description>
          <maml:para>Sets the cell background color for the title cell.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>TitleBold</maml:name>
        <maml:Description>
          <maml:para>Sets the title in boldface type.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>TitleSize</maml:name>
        <maml:Description>
          <maml:para>Sets the point size for the title.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>22</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PivotTableDefinition</maml:name>
        <maml:Description>
          <maml:para>Hashtable(s) with Sheet PivotRows, PivotColumns, PivotData, IncludePivotChart and ChartType values to specify a definition for one or morePivotTable(s).</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>Hashtable</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ExcelChartDefinition</maml:name>
        <maml:Description>
          <maml:para>A hashtable containing ChartType, Title, NoLegend, ShowCategory, ShowPercent, Yrange, Xrange and SeriesHeader for one or more [non-pivot] charts.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
        <dev:type>
          <maml:name>Object[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalFormat</maml:name>
        <maml:Description>
          <maml:para>One or more conditional formatting rules defined with New-ConditionalFormattingIconSet.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
        <dev:type>
          <maml:name>Object[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalText</maml:name>
        <maml:Description>
          <maml:para>Applies a Conditional formatting rule defined with New-ConditionalText.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
        <dev:type>
          <maml:name>Object[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AutoNameRange</maml:name>
        <maml:Description>
          <maml:para>Makes each column a named range.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>RangeName</maml:name>
        <maml:Description>
          <maml:para>Makes the data in the worksheet a named range.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>TableName</maml:name>
        <maml:Description>
          <maml:para>Makes the data in the worksheet a table with a name and applies a style to it. Name must not contain spaces.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>TableStyle</maml:name>
        <maml:Description>
          <maml:para>Selects the style for the named table - defaults to "Medium6".</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">TableStyles</command:parameterValue>
        <dev:type>
          <maml:name>TableStyles</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Medium6</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ReturnRange</maml:name>
        <maml:Description>
          <maml:para>If specified, returns the range of cells in the combined sheet, in the format "A1:Z100".</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Show</maml:name>
        <maml:Description>
          <maml:para>Opens the Excel file immediately after creation. Convenient for viewing the results instantly without having to search for the file first.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PassThru</maml:name>
        <maml:Description>
          <maml:para>If specified, an object representing the unsaved Excel package will be returned, it then needs to be saved.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>PS\&gt; foreach ($computerName in @('Server1', 'Server2', 'Server3', 'Server4')) {
    Get-Service -ComputerName $computerName |
        Select-Object -Property Status, Name, DisplayName, StartType |
            Export-Excel -Path .\test.xlsx -WorkSheetname $computerName -AutoSize
}
PS\&gt; $ptDef = New-PivotTableDefinition -PivotTableName "Pivot1" -SourceWorkSheet "Combined" -PivotRows "Status" -PivotFilter "MachineName" -PivotData @{Status='Count'} -IncludePivotChart -ChartType BarClustered3D
PS\&gt; Join-Worksheet -Path .\test.xlsx -WorkSheetName combined -FromLabel "MachineName" -HideSource-AutoSize -FreezeTopRow -BoldTopRow -PivotTableDefinition $pt -Show</dev:code>
        <dev:remarks>
          <maml:para>The foreach command gets a list of services running on four servers and exports each list to its own page in Test.xlsx. And $PtDef=... creates a definition for a PivotTable.</maml:para>
          <maml:para>The Join-Worksheet command uses the same file and merges the results into a sheet named "Combined". It sets a column header of "Machinename", this column will contain the name of the sheet the data was copied from; after copying the data to the sheet "Combined", the other sheets will be hidden. Join-Worksheet finishes by calling Export-Excel to AutoSize cells, freeze the top row and make it bold and add thePivotTable.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>PS\&gt; Get-CimInstance -ClassName win32_logicaldisk |
        Select-Object -Property DeviceId,VolumeName, Size,Freespace |
            Export-Excel -Path "$env:computerName.xlsx" -WorkSheetname Volumes -NumberFormat "0,000"
PS\&gt; Get-NetAdapter| Select-Object Name,InterfaceDescription,MacAddress,LinkSpeed |
          Export-Excel -Path "$env:COMPUTERNAME.xlsx" -WorkSheetname NetAdapter
PS\&gt; Join-Worksheet -Path "$env:COMPUTERNAME.xlsx"-WorkSheetName Summary -Title "Summary" -TitleBold -TitleSize 22 -NoHeader -LabelBlocks -AutoSize -HideSource -show</dev:code>
        <dev:remarks>
          <maml:para>The first two commands get logical-disk and network-card information; each type is exported to its own sheet in a workbook.</maml:para>
          <maml:para>The Join-Worksheet command copies both onto a page named "Summary".Because the data is dissimilar, -NoHeader is specified, ensuring the whole of each page is copied. Specifying -LabelBlocks causes each sheet's name to become a title on the summary page above the copied data. The source data is hidden, a title is added in 22 point boldface and the columns are sized to fit the data.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/dfinke/ImportExcel</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Merge-MultipleSheets</command:name>
      <command:verb>Merge</command:verb>
      <command:noun>MultipleSheets</command:noun>
      <maml:description>
        <maml:para>Merges Worksheets into a single Worksheet with differences marked up.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Merge Worksheet command combines two sheets. Merge-MultipleSheets is designed to merge more than two.</maml:para>
      <maml:para>If asked to merge sheets A,B,C  which contain Services, with a Name, Displayname and Start mode, where "Name" is treated as the key, Merge-MultipleSheets:</maml:para>
      <maml:para>* Calls Merge-Worksheet to merge "Name", "Displayname" and "Startmode" from sheets A and C;  the result has column headings  "_Row", "Name", "DisplayName", "Startmode", "C-DisplayName", "C-StartMode", "C-Is" and "C-Row".</maml:para>
      <maml:para>* Calls Merge-Worksheet again passing it the intermediate result and sheet B, comparing "Name", "Displayname" and "Start mode" columns on each side, and gets a result with columns "_Row", "Name", "DisplayName", "Startmode", "B-DisplayName",  "B-StartMode", "B-Is", "B-Row", "C-DisplayName", "C-StartMode", "C-Is" and "C-Row".</maml:para>
      <maml:para>Any columns on the "reference" side which are not used in the comparison are added on the right, which is why we compare the sheets in reverse order.</maml:para>
      <maml:para>The "Is" columns hold "Same", "Added", "Removed" or "Changed" and is used for conditional formatting in the output sheet (these columns are hidden by default), and when the data is written to Excel the "reference" columns, in this case "DisplayName" and "Start" are renamed to reflect their source, so they become "A-DisplayName" and "A-Start".</maml:para>
      <maml:para>Conditional formatting is also applied to the Key column ("Name" in this case) so the view can be filtered to rows with changes by filtering this column on color.</maml:para>
      <maml:para>Note: the processing order can affect what is seen as a change.For example, if there is an extra item in sheet B in the example above, Sheet C will be processed first and that row and will not be seen to be missing. When sheet B is processed it is marked as an addition, and the conditional formatting marks the entries from sheet A to show that a values were added in at least one sheet.</maml:para>
      <maml:para>However if Sheet B is the reference sheet, A and C will be seen to have an item removed; and if B is processed before C, the extra item is known when C is processed and so C is considered to be missing that item.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Merge-MultipleSheets</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="none">
          <maml:name>Path</maml:name>
          <maml:Description>
            <maml:para>Paths to the files to be merged. Files are also accepted</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="10" aliases="none">
          <maml:name>KeyFontColor</maml:name>
          <maml:Description>
            <maml:para>Sets the font color for the Key field; this means you can filter by color to get only changed rows.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::Red</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="11" aliases="none">
          <maml:name>ChangeBackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Sets the background color for changed rows.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::Orange</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="12" aliases="none">
          <maml:name>DeleteBackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Sets the background color for rows in the reference but deleted from the difference sheet.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::LightPink</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="13" aliases="none">
          <maml:name>AddBackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Sets the background color for rows not in the reference but added to the difference sheet.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::Orange</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
          <maml:name>Startrow</maml:name>
          <maml:Description>
            <maml:para>The row from where we start to import data, all rows above the Start row are disregarded. By default this is the first row.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
          <maml:name>Headername</maml:name>
          <maml:Description>
            <maml:para>Specifies custom property names to use, instead of the values defined in the column headers of the Start row.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="none">
          <maml:name>WorksheetName</maml:name>
          <maml:Description>
            <maml:para>Name(s) of Worksheets to compare.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Sheet1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="5" aliases="OutFile">
          <maml:name>OutputFile</maml:name>
          <maml:Description>
            <maml:para>File to write output to.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>.\temp.xlsx</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="6" aliases="OutSheet">
          <maml:name>OutputSheetName</maml:name>
          <maml:Description>
            <maml:para>Name of Worksheet to output - if none specified will use the reference Worksheet name.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Sheet1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="7" aliases="none">
          <maml:name>Property</maml:name>
          <maml:Description>
            <maml:para>Properties to include in the comparison - supports wildcards, default is "*".</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>*</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="8" aliases="none">
          <maml:name>ExcludeProperty</maml:name>
          <maml:Description>
            <maml:para>Properties to exclude from the the comparison - supports wildcards.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="9" aliases="none">
          <maml:name>Key</maml:name>
          <maml:Description>
            <maml:para>Name of a column which is unique used to pair up rows from the reference and difference sides, default is "Name".</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Name</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoHeader</maml:name>
          <maml:Description>
            <maml:para>If specified, property names will be automatically generated (P1, P2, P3, ..) instead of using the values from the start row.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>HideRowNumbers</maml:name>
          <maml:Description>
            <maml:para>If specified, hides the columns in the spreadsheet that contain the row numbers.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Passthru</maml:name>
          <maml:Description>
            <maml:para>If specified, outputs the data to the pipeline (you can add -whatif so it the command only outputs to the pipeline).</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Show</maml:name>
          <maml:Description>
            <maml:para>If specified, opens the output workbook.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="none">
        <maml:name>Path</maml:name>
        <maml:Description>
          <maml:para>Paths to the files to be merged. Files are also accepted</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
        <maml:name>Startrow</maml:name>
        <maml:Description>
          <maml:para>The row from where we start to import data, all rows above the Start row are disregarded. By default this is the first row.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>1</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
        <maml:name>Headername</maml:name>
        <maml:Description>
          <maml:para>Specifies custom property names to use, instead of the values defined in the column headers of the Start row.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NoHeader</maml:name>
        <maml:Description>
          <maml:para>If specified, property names will be automatically generated (P1, P2, P3, ..) instead of using the values from the start row.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="none">
        <maml:name>WorksheetName</maml:name>
        <maml:Description>
          <maml:para>Name(s) of Worksheets to compare.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Sheet1</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="5" aliases="OutFile">
        <maml:name>OutputFile</maml:name>
        <maml:Description>
          <maml:para>File to write output to.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>.\temp.xlsx</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="6" aliases="OutSheet">
        <maml:name>OutputSheetName</maml:name>
        <maml:Description>
          <maml:para>Name of Worksheet to output - if none specified will use the reference Worksheet name.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Sheet1</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="7" aliases="none">
        <maml:name>Property</maml:name>
        <maml:Description>
          <maml:para>Properties to include in the comparison - supports wildcards, default is "*".</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>*</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="8" aliases="none">
        <maml:name>ExcludeProperty</maml:name>
        <maml:Description>
          <maml:para>Properties to exclude from the the comparison - supports wildcards.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="9" aliases="none">
        <maml:name>Key</maml:name>
        <maml:Description>
          <maml:para>Name of a column which is unique used to pair up rows from the reference and difference sides, default is "Name".</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Name</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="10" aliases="none">
        <maml:name>KeyFontColor</maml:name>
        <maml:Description>
          <maml:para>Sets the font color for the Key field; this means you can filter by color to get only changed rows.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Drawing.Color]::Red</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="11" aliases="none">
        <maml:name>ChangeBackgroundColor</maml:name>
        <maml:Description>
          <maml:para>Sets the background color for changed rows.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Drawing.Color]::Orange</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="12" aliases="none">
        <maml:name>DeleteBackgroundColor</maml:name>
        <maml:Description>
          <maml:para>Sets the background color for rows in the reference but deleted from the difference sheet.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Drawing.Color]::LightPink</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="13" aliases="none">
        <maml:name>AddBackgroundColor</maml:name>
        <maml:Description>
          <maml:para>Sets the background color for rows not in the reference but added to the difference sheet.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Drawing.Color]::Orange</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>HideRowNumbers</maml:name>
        <maml:Description>
          <maml:para>If specified, hides the columns in the spreadsheet that contain the row numbers.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Passthru</maml:name>
        <maml:Description>
          <maml:para>If specified, outputs the data to the pipeline (you can add -whatif so it the command only outputs to the pipeline).</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Show</maml:name>
        <maml:Description>
          <maml:para>If specified, opens the output workbook.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>PS\&gt; dir Server*.xlsx | Merge-MulipleSheets -WorksheetName Services -OutputFile Test2.xlsx -OutputSheetName Services -Show</dev:code>
        <dev:remarks>
          <maml:para>Here we are auditing servers and each one has a workbook in the current directory which contains a "Services" Worksheet (the result of Get-WmiObject -Class win32_service  | Select-Object -Property Name, Displayname, Startmode).  No key is specified so the key is assumed to be the "Name" column. The files are merged and the result is opened on completion.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>PS\&gt; dir Serv*.xlsx |  Merge-MulipleSheets  -WorksheetName Software -Key "*" -ExcludeProperty Install* -OutputFile Test2.xlsx -OutputSheetName Software -Show</dev:code>
        <dev:remarks>
          <maml:para>The server audit files in the previous example also have "Software" worksheet, but no single field on that sheet works as a key. Specifying "*" for the key produces a compound key using all non-excluded fields (and the installation date and file location are excluded).</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <dev:code>Merge-MulipleSheets -Path hotfixes.xlsx -WorksheetName Serv* -Key hotfixid -OutputFile test2.xlsx -OutputSheetName hotfixes  -HideRowNumbers -Show</dev:code>
        <dev:remarks>
          <maml:para>This time all the servers have written their hotfix information to their own worksheets in a shared Excel workbook named "Hotfixes.xlsx" (the information was obtained by running Get-Hotfix | Sort-Object -Property description,hotfixid  | Select-Object -Property Description,HotfixID) This ignores any sheets which are not named "Serv*", and uses the HotfixID as the key; in this version the row numbers are hidden.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/dfinke/ImportExcel</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Merge-Worksheet</command:name>
      <command:verb>Merge</command:verb>
      <command:noun>Worksheet</command:noun>
      <maml:description>
        <maml:para>Merges two Worksheets (or other objects) into a single Worksheet with differences marked up.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Compare-Worksheet command takes two Worksheets and marks differences in the source document, and optionally outputs a grid showing the changes.</maml:para>
      <maml:para>By contrast the Merge-Worksheet command takes the Worksheets and combines them into a single sheet showing the old and new data side by side. Although it is designed to work with Excel data it can work with arrays of any kind of object; so it can be a merge of Worksheets, or a merge to a Worksheet.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Merge-Worksheet</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>Referencefile</maml:name>
          <maml:Description>
            <maml:para>First Excel file to compare. You can compare two Excel files or two other objects or a reference obhct against a difference file, but not a reference file against an object. works with the following parameter sets</maml:para>
            <maml:para>* A = Compare two files default headers</maml:para>
            <maml:para>* B = Compare two files user supplied headers</maml:para>
            <maml:para>* C = Compare two files headers P1, P2, P3 etc</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
          <maml:name>Differencefile</maml:name>
          <maml:Description>
            <maml:para>Second Excel file to compare. Works with paramter sets A,B,C as well as the following</maml:para>
            <maml:para>* D = Compare two objects;</maml:para>
            <maml:para>* E = Compare one object one file that uses default headers</maml:para>
            <maml:para>* F = Compare one object one file that uses user supplied headers</maml:para>
            <maml:para>* G = Compare one object one file that uses headers P1, P2, P3 etc</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
          <maml:name>WorksheetName</maml:name>
          <maml:Description>
            <maml:para>Name(s) of Worksheets to compare. Applies to all parameter sets EXCEPT D which is two objects (no sheets)</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Sheet1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="OutFile">
          <maml:name>OutputFile</maml:name>
          <maml:Description>
            <maml:para>File to hold merged data.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="5" aliases="OutSheet">
          <maml:name>OutputSheetName</maml:name>
          <maml:Description>
            <maml:para>Name of Worksheet to output - if none specified will use the reference Worksheet name.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Sheet1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Startrow</maml:name>
          <maml:Description>
            <maml:para>The row from where we start to import data, all rows above the StartRow are disregarded. By default this is the first row. Applies to all sets EXCEPT D which is two objects (no sheets, so no start row )</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoHeader</maml:name>
          <maml:Description>
            <maml:para>Automatically generate property names (P1, P2, P3, ..) instead of using the values the top row of the sheet. Works with parameter sets</maml:para>
            <maml:para>* C 2 sheets with headers of P1, P2, P3 ...</maml:para>
            <maml:para>* G Compare  object + sheet</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Property</maml:name>
          <maml:Description>
            <maml:para>Properties to include in the DIFF - supports wildcards, default is "*".</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>*</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExcludeProperty</maml:name>
          <maml:Description>
            <maml:para>Properties to exclude from the the search - supports wildcards.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Key</maml:name>
          <maml:Description>
            <maml:para>Name of a column which is unique used to pair up rows from the refence and difference side, default is "Name".</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Name</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>KeyFontColor</maml:name>
          <maml:Description>
            <maml:para>Sets the font color for the "key" field; this means you can filter by color to get only changed rows.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::DarkRed</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ChangeBackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Sets the background color for changed rows.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::Orange</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DeleteBackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Sets the background color for rows in the reference but deleted from the difference sheet.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::LightPink</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AddBackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Sets the background color for rows not in the reference but added to the difference sheet.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::PaleGreen</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>HideEqual</maml:name>
          <maml:Description>
            <maml:para>if specified, hides the rows in the spreadsheet that are equal and only shows changes, added or deleted rows.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Passthru</maml:name>
          <maml:Description>
            <maml:para>If specified, outputs the data to the pipeline (you can add -WhatIf so the command only outputs to the pipeline).</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Show</maml:name>
          <maml:Description>
            <maml:para>If specified, opens the output workbook.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:Description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:Description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Merge-Worksheet</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>Referencefile</maml:name>
          <maml:Description>
            <maml:para>First Excel file to compare. You can compare two Excel files or two other objects or a reference obhct against a difference file, but not a reference file against an object. works with the following parameter sets</maml:para>
            <maml:para>* A = Compare two files default headers</maml:para>
            <maml:para>* B = Compare two files user supplied headers</maml:para>
            <maml:para>* C = Compare two files headers P1, P2, P3 etc</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
          <maml:name>Differencefile</maml:name>
          <maml:Description>
            <maml:para>Second Excel file to compare. Works with paramter sets A,B,C as well as the following</maml:para>
            <maml:para>* D = Compare two objects;</maml:para>
            <maml:para>* E = Compare one object one file that uses default headers</maml:para>
            <maml:para>* F = Compare one object one file that uses user supplied headers</maml:para>
            <maml:para>* G = Compare one object one file that uses headers P1, P2, P3 etc</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
          <maml:name>WorksheetName</maml:name>
          <maml:Description>
            <maml:para>Name(s) of Worksheets to compare. Applies to all parameter sets EXCEPT D which is two objects (no sheets)</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Sheet1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="OutFile">
          <maml:name>OutputFile</maml:name>
          <maml:Description>
            <maml:para>File to hold merged data.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="5" aliases="OutSheet">
          <maml:name>OutputSheetName</maml:name>
          <maml:Description>
            <maml:para>Name of Worksheet to output - if none specified will use the reference Worksheet name.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Sheet1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Startrow</maml:name>
          <maml:Description>
            <maml:para>The row from where we start to import data, all rows above the StartRow are disregarded. By default this is the first row. Applies to all sets EXCEPT D which is two objects (no sheets, so no start row )</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Headername</maml:name>
          <maml:Description>
            <maml:para>Specifies custom property names to use, instead of the values defined in the column headers of the Start Row. Works with the following parameter sets:</maml:para>
            <maml:para>* B 2 sheets with user supplied headers</maml:para>
            <maml:para>* F Compare  object + sheet</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Property</maml:name>
          <maml:Description>
            <maml:para>Properties to include in the DIFF - supports wildcards, default is "*".</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>*</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExcludeProperty</maml:name>
          <maml:Description>
            <maml:para>Properties to exclude from the the search - supports wildcards.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Key</maml:name>
          <maml:Description>
            <maml:para>Name of a column which is unique used to pair up rows from the refence and difference side, default is "Name".</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Name</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>KeyFontColor</maml:name>
          <maml:Description>
            <maml:para>Sets the font color for the "key" field; this means you can filter by color to get only changed rows.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::DarkRed</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ChangeBackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Sets the background color for changed rows.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::Orange</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DeleteBackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Sets the background color for rows in the reference but deleted from the difference sheet.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::LightPink</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AddBackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Sets the background color for rows not in the reference but added to the difference sheet.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::PaleGreen</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>HideEqual</maml:name>
          <maml:Description>
            <maml:para>if specified, hides the rows in the spreadsheet that are equal and only shows changes, added or deleted rows.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Passthru</maml:name>
          <maml:Description>
            <maml:para>If specified, outputs the data to the pipeline (you can add -WhatIf so the command only outputs to the pipeline).</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Show</maml:name>
          <maml:Description>
            <maml:para>If specified, opens the output workbook.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:Description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:Description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Merge-Worksheet</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>Referencefile</maml:name>
          <maml:Description>
            <maml:para>First Excel file to compare. You can compare two Excel files or two other objects or a reference obhct against a difference file, but not a reference file against an object. works with the following parameter sets</maml:para>
            <maml:para>* A = Compare two files default headers</maml:para>
            <maml:para>* B = Compare two files user supplied headers</maml:para>
            <maml:para>* C = Compare two files headers P1, P2, P3 etc</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
          <maml:name>Differencefile</maml:name>
          <maml:Description>
            <maml:para>Second Excel file to compare. Works with paramter sets A,B,C as well as the following</maml:para>
            <maml:para>* D = Compare two objects;</maml:para>
            <maml:para>* E = Compare one object one file that uses default headers</maml:para>
            <maml:para>* F = Compare one object one file that uses user supplied headers</maml:para>
            <maml:para>* G = Compare one object one file that uses headers P1, P2, P3 etc</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
          <maml:name>WorksheetName</maml:name>
          <maml:Description>
            <maml:para>Name(s) of Worksheets to compare. Applies to all parameter sets EXCEPT D which is two objects (no sheets)</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Sheet1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="OutFile">
          <maml:name>OutputFile</maml:name>
          <maml:Description>
            <maml:para>File to hold merged data.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="5" aliases="OutSheet">
          <maml:name>OutputSheetName</maml:name>
          <maml:Description>
            <maml:para>Name of Worksheet to output - if none specified will use the reference Worksheet name.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Sheet1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Startrow</maml:name>
          <maml:Description>
            <maml:para>The row from where we start to import data, all rows above the StartRow are disregarded. By default this is the first row. Applies to all sets EXCEPT D which is two objects (no sheets, so no start row )</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Property</maml:name>
          <maml:Description>
            <maml:para>Properties to include in the DIFF - supports wildcards, default is "*".</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>*</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExcludeProperty</maml:name>
          <maml:Description>
            <maml:para>Properties to exclude from the the search - supports wildcards.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Key</maml:name>
          <maml:Description>
            <maml:para>Name of a column which is unique used to pair up rows from the refence and difference side, default is "Name".</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Name</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>KeyFontColor</maml:name>
          <maml:Description>
            <maml:para>Sets the font color for the "key" field; this means you can filter by color to get only changed rows.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::DarkRed</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ChangeBackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Sets the background color for changed rows.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::Orange</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DeleteBackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Sets the background color for rows in the reference but deleted from the difference sheet.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::LightPink</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AddBackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Sets the background color for rows not in the reference but added to the difference sheet.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::PaleGreen</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>HideEqual</maml:name>
          <maml:Description>
            <maml:para>if specified, hides the rows in the spreadsheet that are equal and only shows changes, added or deleted rows.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Passthru</maml:name>
          <maml:Description>
            <maml:para>If specified, outputs the data to the pipeline (you can add -WhatIf so the command only outputs to the pipeline).</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Show</maml:name>
          <maml:Description>
            <maml:para>If specified, opens the output workbook.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:Description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:Description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Merge-Worksheet</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
          <maml:name>Differencefile</maml:name>
          <maml:Description>
            <maml:para>Second Excel file to compare. Works with paramter sets A,B,C as well as the following</maml:para>
            <maml:para>* D = Compare two objects;</maml:para>
            <maml:para>* E = Compare one object one file that uses default headers</maml:para>
            <maml:para>* F = Compare one object one file that uses user supplied headers</maml:para>
            <maml:para>* G = Compare one object one file that uses headers P1, P2, P3 etc</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
          <maml:name>WorksheetName</maml:name>
          <maml:Description>
            <maml:para>Name(s) of Worksheets to compare. Applies to all parameter sets EXCEPT D which is two objects (no sheets)</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Sheet1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
          <maml:name>DiffPrefix</maml:name>
          <maml:Description>
            <maml:para>If there isn't a filename to use to label data from the "Difference" side, DiffPrefix is used, it defaults to "=&gt;"</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>=&gt;</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="OutFile">
          <maml:name>OutputFile</maml:name>
          <maml:Description>
            <maml:para>File to hold merged data.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="5" aliases="OutSheet">
          <maml:name>OutputSheetName</maml:name>
          <maml:Description>
            <maml:para>Name of Worksheet to output - if none specified will use the reference Worksheet name.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Sheet1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Startrow</maml:name>
          <maml:Description>
            <maml:para>The row from where we start to import data, all rows above the StartRow are disregarded. By default this is the first row. Applies to all sets EXCEPT D which is two objects (no sheets, so no start row )</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoHeader</maml:name>
          <maml:Description>
            <maml:para>Automatically generate property names (P1, P2, P3, ..) instead of using the values the top row of the sheet. Works with parameter sets</maml:para>
            <maml:para>* C 2 sheets with headers of P1, P2, P3 ...</maml:para>
            <maml:para>* G Compare  object + sheet</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="RefObject">
          <maml:name>ReferenceObject</maml:name>
          <maml:Description>
            <maml:para>Reference object to compare if a Worksheet is NOT being used. Reference object can combine with a difference sheet or difference object</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Property</maml:name>
          <maml:Description>
            <maml:para>Properties to include in the DIFF - supports wildcards, default is "*".</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>*</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExcludeProperty</maml:name>
          <maml:Description>
            <maml:para>Properties to exclude from the the search - supports wildcards.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Key</maml:name>
          <maml:Description>
            <maml:para>Name of a column which is unique used to pair up rows from the refence and difference side, default is "Name".</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Name</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>KeyFontColor</maml:name>
          <maml:Description>
            <maml:para>Sets the font color for the "key" field; this means you can filter by color to get only changed rows.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::DarkRed</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ChangeBackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Sets the background color for changed rows.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::Orange</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DeleteBackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Sets the background color for rows in the reference but deleted from the difference sheet.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::LightPink</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AddBackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Sets the background color for rows not in the reference but added to the difference sheet.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::PaleGreen</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>HideEqual</maml:name>
          <maml:Description>
            <maml:para>if specified, hides the rows in the spreadsheet that are equal and only shows changes, added or deleted rows.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Passthru</maml:name>
          <maml:Description>
            <maml:para>If specified, outputs the data to the pipeline (you can add -WhatIf so the command only outputs to the pipeline).</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Show</maml:name>
          <maml:Description>
            <maml:para>If specified, opens the output workbook.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:Description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:Description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Merge-Worksheet</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
          <maml:name>Differencefile</maml:name>
          <maml:Description>
            <maml:para>Second Excel file to compare. Works with paramter sets A,B,C as well as the following</maml:para>
            <maml:para>* D = Compare two objects;</maml:para>
            <maml:para>* E = Compare one object one file that uses default headers</maml:para>
            <maml:para>* F = Compare one object one file that uses user supplied headers</maml:para>
            <maml:para>* G = Compare one object one file that uses headers P1, P2, P3 etc</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
          <maml:name>WorksheetName</maml:name>
          <maml:Description>
            <maml:para>Name(s) of Worksheets to compare. Applies to all parameter sets EXCEPT D which is two objects (no sheets)</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Sheet1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
          <maml:name>DiffPrefix</maml:name>
          <maml:Description>
            <maml:para>If there isn't a filename to use to label data from the "Difference" side, DiffPrefix is used, it defaults to "=&gt;"</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>=&gt;</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="OutFile">
          <maml:name>OutputFile</maml:name>
          <maml:Description>
            <maml:para>File to hold merged data.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="5" aliases="OutSheet">
          <maml:name>OutputSheetName</maml:name>
          <maml:Description>
            <maml:para>Name of Worksheet to output - if none specified will use the reference Worksheet name.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Sheet1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Startrow</maml:name>
          <maml:Description>
            <maml:para>The row from where we start to import data, all rows above the StartRow are disregarded. By default this is the first row. Applies to all sets EXCEPT D which is two objects (no sheets, so no start row )</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Headername</maml:name>
          <maml:Description>
            <maml:para>Specifies custom property names to use, instead of the values defined in the column headers of the Start Row. Works with the following parameter sets:</maml:para>
            <maml:para>* B 2 sheets with user supplied headers</maml:para>
            <maml:para>* F Compare  object + sheet</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="RefObject">
          <maml:name>ReferenceObject</maml:name>
          <maml:Description>
            <maml:para>Reference object to compare if a Worksheet is NOT being used. Reference object can combine with a difference sheet or difference object</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Property</maml:name>
          <maml:Description>
            <maml:para>Properties to include in the DIFF - supports wildcards, default is "*".</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>*</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExcludeProperty</maml:name>
          <maml:Description>
            <maml:para>Properties to exclude from the the search - supports wildcards.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Key</maml:name>
          <maml:Description>
            <maml:para>Name of a column which is unique used to pair up rows from the refence and difference side, default is "Name".</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Name</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>KeyFontColor</maml:name>
          <maml:Description>
            <maml:para>Sets the font color for the "key" field; this means you can filter by color to get only changed rows.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::DarkRed</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ChangeBackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Sets the background color for changed rows.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::Orange</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DeleteBackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Sets the background color for rows in the reference but deleted from the difference sheet.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::LightPink</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AddBackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Sets the background color for rows not in the reference but added to the difference sheet.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::PaleGreen</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>HideEqual</maml:name>
          <maml:Description>
            <maml:para>if specified, hides the rows in the spreadsheet that are equal and only shows changes, added or deleted rows.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Passthru</maml:name>
          <maml:Description>
            <maml:para>If specified, outputs the data to the pipeline (you can add -WhatIf so the command only outputs to the pipeline).</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Show</maml:name>
          <maml:Description>
            <maml:para>If specified, opens the output workbook.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:Description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:Description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Merge-Worksheet</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
          <maml:name>Differencefile</maml:name>
          <maml:Description>
            <maml:para>Second Excel file to compare. Works with paramter sets A,B,C as well as the following</maml:para>
            <maml:para>* D = Compare two objects;</maml:para>
            <maml:para>* E = Compare one object one file that uses default headers</maml:para>
            <maml:para>* F = Compare one object one file that uses user supplied headers</maml:para>
            <maml:para>* G = Compare one object one file that uses headers P1, P2, P3 etc</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
          <maml:name>WorksheetName</maml:name>
          <maml:Description>
            <maml:para>Name(s) of Worksheets to compare. Applies to all parameter sets EXCEPT D which is two objects (no sheets)</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Sheet1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
          <maml:name>DiffPrefix</maml:name>
          <maml:Description>
            <maml:para>If there isn't a filename to use to label data from the "Difference" side, DiffPrefix is used, it defaults to "=&gt;"</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>=&gt;</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="OutFile">
          <maml:name>OutputFile</maml:name>
          <maml:Description>
            <maml:para>File to hold merged data.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="5" aliases="OutSheet">
          <maml:name>OutputSheetName</maml:name>
          <maml:Description>
            <maml:para>Name of Worksheet to output - if none specified will use the reference Worksheet name.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Sheet1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Startrow</maml:name>
          <maml:Description>
            <maml:para>The row from where we start to import data, all rows above the StartRow are disregarded. By default this is the first row. Applies to all sets EXCEPT D which is two objects (no sheets, so no start row )</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="RefObject">
          <maml:name>ReferenceObject</maml:name>
          <maml:Description>
            <maml:para>Reference object to compare if a Worksheet is NOT being used. Reference object can combine with a difference sheet or difference object</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Property</maml:name>
          <maml:Description>
            <maml:para>Properties to include in the DIFF - supports wildcards, default is "*".</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>*</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExcludeProperty</maml:name>
          <maml:Description>
            <maml:para>Properties to exclude from the the search - supports wildcards.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Key</maml:name>
          <maml:Description>
            <maml:para>Name of a column which is unique used to pair up rows from the refence and difference side, default is "Name".</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Name</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>KeyFontColor</maml:name>
          <maml:Description>
            <maml:para>Sets the font color for the "key" field; this means you can filter by color to get only changed rows.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::DarkRed</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ChangeBackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Sets the background color for changed rows.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::Orange</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DeleteBackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Sets the background color for rows in the reference but deleted from the difference sheet.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::LightPink</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AddBackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Sets the background color for rows not in the reference but added to the difference sheet.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::PaleGreen</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>HideEqual</maml:name>
          <maml:Description>
            <maml:para>if specified, hides the rows in the spreadsheet that are equal and only shows changes, added or deleted rows.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Passthru</maml:name>
          <maml:Description>
            <maml:para>If specified, outputs the data to the pipeline (you can add -WhatIf so the command only outputs to the pipeline).</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Show</maml:name>
          <maml:Description>
            <maml:para>If specified, opens the output workbook.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:Description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:Description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Merge-Worksheet</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="DiffObject">
          <maml:name>DifferenceObject</maml:name>
          <maml:Description>
            <maml:para>Difference object to compare if a Worksheet is NOT being used for either half. Can't have a reference sheet and difference object.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
          <maml:name>DiffPrefix</maml:name>
          <maml:Description>
            <maml:para>If there isn't a filename to use to label data from the "Difference" side, DiffPrefix is used, it defaults to "=&gt;"</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>=&gt;</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="OutFile">
          <maml:name>OutputFile</maml:name>
          <maml:Description>
            <maml:para>File to hold merged data.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="5" aliases="OutSheet">
          <maml:name>OutputSheetName</maml:name>
          <maml:Description>
            <maml:para>Name of Worksheet to output - if none specified will use the reference Worksheet name.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Sheet1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="RefObject">
          <maml:name>ReferenceObject</maml:name>
          <maml:Description>
            <maml:para>Reference object to compare if a Worksheet is NOT being used. Reference object can combine with a difference sheet or difference object</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Property</maml:name>
          <maml:Description>
            <maml:para>Properties to include in the DIFF - supports wildcards, default is "*".</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>*</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExcludeProperty</maml:name>
          <maml:Description>
            <maml:para>Properties to exclude from the the search - supports wildcards.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Key</maml:name>
          <maml:Description>
            <maml:para>Name of a column which is unique used to pair up rows from the refence and difference side, default is "Name".</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Name</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>KeyFontColor</maml:name>
          <maml:Description>
            <maml:para>Sets the font color for the "key" field; this means you can filter by color to get only changed rows.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::DarkRed</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ChangeBackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Sets the background color for changed rows.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::Orange</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DeleteBackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Sets the background color for rows in the reference but deleted from the difference sheet.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::LightPink</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AddBackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Sets the background color for rows not in the reference but added to the difference sheet.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::PaleGreen</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>HideEqual</maml:name>
          <maml:Description>
            <maml:para>if specified, hides the rows in the spreadsheet that are equal and only shows changes, added or deleted rows.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Passthru</maml:name>
          <maml:Description>
            <maml:para>If specified, outputs the data to the pipeline (you can add -WhatIf so the command only outputs to the pipeline).</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Show</maml:name>
          <maml:Description>
            <maml:para>If specified, opens the output workbook.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:Description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:Description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
        <maml:name>Referencefile</maml:name>
        <maml:Description>
          <maml:para>First Excel file to compare. You can compare two Excel files or two other objects or a reference obhct against a difference file, but not a reference file against an object. works with the following parameter sets</maml:para>
          <maml:para>* A = Compare two files default headers</maml:para>
          <maml:para>* B = Compare two files user supplied headers</maml:para>
          <maml:para>* C = Compare two files headers P1, P2, P3 etc</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
        <maml:name>Differencefile</maml:name>
        <maml:Description>
          <maml:para>Second Excel file to compare. Works with paramter sets A,B,C as well as the following</maml:para>
          <maml:para>* D = Compare two objects;</maml:para>
          <maml:para>* E = Compare one object one file that uses default headers</maml:para>
          <maml:para>* F = Compare one object one file that uses user supplied headers</maml:para>
          <maml:para>* G = Compare one object one file that uses headers P1, P2, P3 etc</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
        <maml:name>WorksheetName</maml:name>
        <maml:Description>
          <maml:para>Name(s) of Worksheets to compare. Applies to all parameter sets EXCEPT D which is two objects (no sheets)</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Sheet1</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Startrow</maml:name>
        <maml:Description>
          <maml:para>The row from where we start to import data, all rows above the StartRow are disregarded. By default this is the first row. Applies to all sets EXCEPT D which is two objects (no sheets, so no start row )</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>1</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Headername</maml:name>
        <maml:Description>
          <maml:para>Specifies custom property names to use, instead of the values defined in the column headers of the Start Row. Works with the following parameter sets:</maml:para>
          <maml:para>* B 2 sheets with user supplied headers</maml:para>
          <maml:para>* F Compare  object + sheet</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NoHeader</maml:name>
        <maml:Description>
          <maml:para>Automatically generate property names (P1, P2, P3, ..) instead of using the values the top row of the sheet. Works with parameter sets</maml:para>
          <maml:para>* C 2 sheets with headers of P1, P2, P3 ...</maml:para>
          <maml:para>* G Compare  object + sheet</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="RefObject">
        <maml:name>ReferenceObject</maml:name>
        <maml:Description>
          <maml:para>Reference object to compare if a Worksheet is NOT being used. Reference object can combine with a difference sheet or difference object</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="DiffObject">
        <maml:name>DifferenceObject</maml:name>
        <maml:Description>
          <maml:para>Difference object to compare if a Worksheet is NOT being used for either half. Can't have a reference sheet and difference object.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
        <maml:name>DiffPrefix</maml:name>
        <maml:Description>
          <maml:para>If there isn't a filename to use to label data from the "Difference" side, DiffPrefix is used, it defaults to "=&gt;"</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>=&gt;</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="OutFile">
        <maml:name>OutputFile</maml:name>
        <maml:Description>
          <maml:para>File to hold merged data.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="5" aliases="OutSheet">
        <maml:name>OutputSheetName</maml:name>
        <maml:Description>
          <maml:para>Name of Worksheet to output - if none specified will use the reference Worksheet name.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Sheet1</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Property</maml:name>
        <maml:Description>
          <maml:para>Properties to include in the DIFF - supports wildcards, default is "*".</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>*</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ExcludeProperty</maml:name>
        <maml:Description>
          <maml:para>Properties to exclude from the the search - supports wildcards.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Key</maml:name>
        <maml:Description>
          <maml:para>Name of a column which is unique used to pair up rows from the refence and difference side, default is "Name".</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Name</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>KeyFontColor</maml:name>
        <maml:Description>
          <maml:para>Sets the font color for the "key" field; this means you can filter by color to get only changed rows.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Drawing.Color]::DarkRed</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ChangeBackgroundColor</maml:name>
        <maml:Description>
          <maml:para>Sets the background color for changed rows.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Drawing.Color]::Orange</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>DeleteBackgroundColor</maml:name>
        <maml:Description>
          <maml:para>Sets the background color for rows in the reference but deleted from the difference sheet.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Drawing.Color]::LightPink</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AddBackgroundColor</maml:name>
        <maml:Description>
          <maml:para>Sets the background color for rows not in the reference but added to the difference sheet.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Drawing.Color]::PaleGreen</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>HideEqual</maml:name>
        <maml:Description>
          <maml:para>if specified, hides the rows in the spreadsheet that are equal and only shows changes, added or deleted rows.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Passthru</maml:name>
        <maml:Description>
          <maml:para>If specified, outputs the data to the pipeline (you can add -WhatIf so the command only outputs to the pipeline).</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Show</maml:name>
        <maml:Description>
          <maml:para>If specified, opens the output workbook.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:Description>
          <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:Description>
          <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>PS\&gt; Merge-Worksheet "Server54.xlsx" "Server55.xlsx" -WorksheetName services -OutputFile Services.xlsx -OutputSheetName 54-55 -show</dev:code>
        <dev:remarks>
          <maml:para>The workbooks contain audit information for two servers, one sheet contains a list of services.</maml:para>
          <maml:para>This command creates a worksheet named "54-55" in a workbook named "services.xlsx" which shows all the services and their differences, and opens the new workbook in Excel.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>PS\&gt; Merge-Worksheet "Server54.xlsx" "Server55.xlsx" -WorksheetName services -OutputFile Services.xlsx -OutputSheetName 54-55 -HideEqual -AddBackgroundColor LightBlue -show</dev:code>
        <dev:remarks>
          <maml:para>This modifies the previous command to hide the equal rows in the output sheet and changes the color used to mark rows added to the second file.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <dev:code>PS\&gt;  Merge-Worksheet -OutputFile .\j1.xlsx -OutputSheetName test11 -ReferenceObject (dir .\ImportExcel\4.0.7) -DifferenceObject (dir .\ImportExcel\4.0.8) -Property Length -Show</dev:code>
        <dev:remarks>
          <maml:para>This version compares two directories, and marks what has changed. Because no "Key" property is given, "Name" is assumed to be the key and the only other property examined is length. Files which are added or deleted or have changed size will be highlighed in the output sheet. Changes to dates or other attributes will be ignored.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
        <dev:code>PS\&gt; Merge-Worksheet   -RefO (dir .\ImportExcel\4.0.7) -DiffO (dir .\ImportExcel\4.0.8) -Pr Length  | Out-GridView</dev:code>
        <dev:remarks>
          <maml:para>This time no file is written and the results - which include all properties, not just length, are output and sent to Out-Gridview.</maml:para>
          <maml:para>This version uses aliases to shorten the parameters, (OutputFileName can be "outFile" and the Sheet can be"OutSheet"; DifferenceObject &amp; ReferenceObject can be DiffObject &amp; RefObject respectively).</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/dfinke/ImportExcel</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>New-ConditionalFormattingIconSet</command:name>
      <command:verb>New</command:verb>
      <command:noun>ConditionalFormattingIconSet</command:noun>
      <maml:description>
        <maml:para>Creates an object which describes a conditional formatting rule a for 3,4 or 5 icon set.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Export-Excel takes a -ConditionalFormat parameter which can hold one or more descriptions for conditional formats; this command builds the defintion of a Conditional formatting rule for an icon set.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>New-ConditionalFormattingIconSet</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>Range</maml:name>
          <maml:Description>
            <maml:para>The range of cells that the conditional format applies to.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
          <maml:name>ConditionalFormat</maml:name>
          <maml:Description>
            <maml:para>The type of rule: one of "ThreeIconSet","FourIconSet" or "FiveIconSet"</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Reverse</maml:name>
          <maml:Description>
            <maml:para>Use the icons in the reverse order.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
        <maml:name>Range</maml:name>
        <maml:Description>
          <maml:para>The range of cells that the conditional format applies to.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
        <maml:name>ConditionalFormat</maml:name>
        <maml:Description>
          <maml:para>The type of rule: one of "ThreeIconSet","FourIconSet" or "FiveIconSet"</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Reverse</maml:name>
        <maml:Description>
          <maml:para>Use the icons in the reverse order.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>PS\&gt; $cfRange = [OfficeOpenXml.ExcelAddress]::new($topRow, $column, $lastDataRow, $column)
PS\&gt; $cfdef = New-ConditionalFormattingIconSet -Range $cfrange -ConditionalFormat ThreeIconSet -IconType Arrows
PS\&gt; Export-Excel -ExcelPackage $excel -ConditionalFormat $cfdef -show</dev:code>
        <dev:remarks>
          <maml:para>The first line creates a range - one column wide in the column $column, running from $topRow to $lastDataRow. The second line creates a definition object using this range and the third uses Export-Excel with an open package to apply the format and save and open the file.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Add-Add-ConditionalFormatting</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-ConditionalText</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>New-ConditionalText</command:name>
      <command:verb>New</command:verb>
      <command:noun>ConditionalText</command:noun>
      <maml:description>
        <maml:para>Creates an object which describes a conditional formatting rule for single valued rules.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Some Conditional formatting rules don't apply styles to a cell (IconSets and Databars); some take two parameters (Between); some take none (ThisWeek, ContainsErrors, AboveAverage etc).The others take a single parameter (Top, BottomPercent, GreaterThan, Contains etc).</maml:para>
      <maml:para>This command  creates an object to describe the last two categories, which can then be passed to Export-Excel.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>New-ConditionalText</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="ConditionValue">
          <maml:name>Text</maml:name>
          <maml:Description>
            <maml:para>The text (or other value) to use in the rule. Note that Equals, GreaterThan/LessThan rules require text to wrapped in double quotes.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="ForeGroundColor">
          <maml:name>ConditionalTextColor</maml:name>
          <maml:Description>
            <maml:para>The font color for the cell - by default: "DarkRed".</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::DarkRed</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
          <maml:name>BackgroundColor</maml:name>
          <maml:Description>
            <maml:para>The fill color for the cell - by default: "LightPink".</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::LightPink</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="none">
          <maml:name>Range</maml:name>
          <maml:Description>
            <maml:para>The range of cells that the conditional format applies to; if none is specified the range will be apply to all the data in the sheet.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="5" aliases="none">
          <maml:name>PatternType</maml:name>
          <maml:Description>
            <maml:para>The background pattern for the cell - by default: "Solid"</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Solid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Gray125</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Gray0625</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkVertical</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkHorizontal</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkDown</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkUp</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkGrid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkTrellis</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightVertical</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightHorizontal</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightDown</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightUp</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightGrid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightTrellis</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelFillStyle</command:parameterValue>
          <dev:type>
            <maml:name>ExcelFillStyle</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Solid</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="6" aliases="RuleType">
          <maml:name>ConditionalType</maml:name>
          <maml:Description>
            <maml:para>One of the supported rules; by default "ContainsText" is selected.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>ContainsText</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="ConditionValue">
        <maml:name>Text</maml:name>
        <maml:Description>
          <maml:para>The text (or other value) to use in the rule. Note that Equals, GreaterThan/LessThan rules require text to wrapped in double quotes.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="ForeGroundColor">
        <maml:name>ConditionalTextColor</maml:name>
        <maml:Description>
          <maml:para>The font color for the cell - by default: "DarkRed".</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Drawing.Color]::DarkRed</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
        <maml:name>BackgroundColor</maml:name>
        <maml:Description>
          <maml:para>The fill color for the cell - by default: "LightPink".</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Drawing.Color]::LightPink</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="none">
        <maml:name>Range</maml:name>
        <maml:Description>
          <maml:para>The range of cells that the conditional format applies to; if none is specified the range will be apply to all the data in the sheet.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="5" aliases="none">
        <maml:name>PatternType</maml:name>
        <maml:Description>
          <maml:para>The background pattern for the cell - by default: "Solid"</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelFillStyle</command:parameterValue>
        <dev:type>
          <maml:name>ExcelFillStyle</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Solid</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="6" aliases="RuleType">
        <maml:name>ConditionalType</maml:name>
        <maml:Description>
          <maml:para>One of the supported rules; by default "ContainsText" is selected.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>ContainsText</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>PS\&gt; $ct = New-ConditionalText -Text  'Ferrari'
PS\&gt; Export-Excel -ExcelPackage $excel -ConditionalTest $ct -show</dev:code>
        <dev:remarks>
          <maml:para>The first line creates a definition object which will highlight the word "Ferrari" in any cell. and the second uses Export-Excel with an open package to apply the format and save and open the file.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>PS\&gt; $ct  = New-ConditionalText -Text "Ferrari"
PS\&gt; $ct2 = New-ConditionalText -Range $worksheet.Names\["FinishPosition"\].Address -ConditionalType LessThanOrEqual -Text 3 -ConditionalTextColor Red -BackgroundColor White
PS\&gt; Export-Excel -ExcelPackage $excel -ConditionalText $ct,$ct2 -show</dev:code>
        <dev:remarks>
          <maml:para>This builds on the previous example, and specifies a condition of &lt;=3 with a format of red text on a white background; this applies to a named range "Finish Position".</maml:para>
          <maml:para>The range could be written -Range "C:C" to specify a named column, or -Range "C2:C102" to specify certain cells in the column.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Add-ConditionalFormatting</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-ConditionalFormattingIconSet</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>New-ExcelChartDefinition</command:name>
      <command:verb>New</command:verb>
      <command:noun>ExcelChartDefinition</command:noun>
      <maml:description>
        <maml:para>Creates a Definition of a chart which can be added using Export-Excel, or Add-PivotTable</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>All the parameters which are passed to Add-ExcelChart can be added to a chart-definition object and passed to Export-Excel with the -ExcelChartDefinition parameter, or to Add-PivotTable with the -PivotChartDefinition parameter. This command sets up those definition objects.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>New-ExcelChartDefinition</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>Title</maml:name>
          <maml:Description>
            <maml:para>The title for the chart.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Chart Title</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="10" aliases="none">
          <maml:name>RowOffSetPixels</maml:name>
          <maml:Description>
            <maml:para>Offset to position the chart by a fraction of a row.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>10</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="11" aliases="none">
          <maml:name>Column</maml:name>
          <maml:Description>
            <maml:para>Column position of the top left corner of the chart. 0 places it at the edge of the sheet, 1 to the right of column A and so on.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>6</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="12" aliases="none">
          <maml:name>ColumnOffSetPixels</maml:name>
          <maml:Description>
            <maml:para>Offset to position the chart by a fraction of a column.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>5</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="13" aliases="none">
          <maml:name>LegendPosition</maml:name>
          <maml:Description>
            <maml:para>Location of the key, either "Left", "Right", "Top", "Bottom" or "TopRight".</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Top</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Left</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Right</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Bottom</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">TopRight</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">eLegendPosition</command:parameterValue>
          <dev:type>
            <maml:name>eLegendPosition</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="14" aliases="none">
          <maml:name>LegendSize</maml:name>
          <maml:Description>
            <maml:para>Font size for the key.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="15" aliases="none">
          <maml:name>SeriesHeader</maml:name>
          <maml:Description>
            <maml:para>Specifies explicit name(s) for the data series, which will appear in the legend/key</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="16" aliases="none">
          <maml:name>TitleSize</maml:name>
          <maml:Description>
            <maml:para>Sets the point size for the title.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="17" aliases="none">
          <maml:name>XAxisTitleText</maml:name>
          <maml:Description>
            <maml:para>Specifies a title for the X-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="18" aliases="none">
          <maml:name>XAxisTitleSize</maml:name>
          <maml:Description>
            <maml:para>Sets the font size for the axis title.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="19" aliases="none">
          <maml:name>XAxisNumberformat</maml:name>
          <maml:Description>
            <maml:para>A number formatting string, like "#,##0.00", for numbers along the X-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
          <maml:name>Header</maml:name>
          <maml:Description>
            <maml:para>No longer used. This may be removed in future versions.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="20" aliases="none">
          <maml:name>XMajorUnit</maml:name>
          <maml:Description>
            <maml:para>Spacing for the major gridlines / tick marks along the X-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="21" aliases="none">
          <maml:name>XMinorUnit</maml:name>
          <maml:Description>
            <maml:para>Spacing for the minor gridlines / tick marks along the X-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="22" aliases="none">
          <maml:name>XMaxValue</maml:name>
          <maml:Description>
            <maml:para>Maximum value for the scale along the X-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="23" aliases="none">
          <maml:name>XMinValue</maml:name>
          <maml:Description>
            <maml:para>Minimum value for the scale along the X-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="24" aliases="none">
          <maml:name>XAxisPosition</maml:name>
          <maml:Description>
            <maml:para>Position for the X-axis ("Top" or" Bottom").</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Left</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Bottom</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Right</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Top</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">eAxisPosition</command:parameterValue>
          <dev:type>
            <maml:name>eAxisPosition</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="25" aliases="none">
          <maml:name>YAxisTitleText</maml:name>
          <maml:Description>
            <maml:para>Specifies a title for the Y-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="26" aliases="none">
          <maml:name>YAxisTitleSize</maml:name>
          <maml:Description>
            <maml:para>Sets the font size for the Y-axis title.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="27" aliases="none">
          <maml:name>YAxisNumberformat</maml:name>
          <maml:Description>
            <maml:para>A number formatting string, like "#,##0.00", for numbers on the Y-axis</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="28" aliases="none">
          <maml:name>YMajorUnit</maml:name>
          <maml:Description>
            <maml:para>Spacing for the major gridlines / tick marks on the Y-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="29" aliases="none">
          <maml:name>YMinorUnit</maml:name>
          <maml:Description>
            <maml:para>Spacing for the minor gridlines / tick marks on the Y-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
          <maml:name>ChartType</maml:name>
          <maml:Description>
            <maml:para>One of the built-in chart types, such as Pie, ClusteredColumn, Line etc. Defaults to "ColumnStacked".</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Area</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Line</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Pie</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Bubble</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnClustered3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnStacked3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnStacked1003D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarClustered3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarStacked3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarStacked1003D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineMarkers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineMarkersStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineMarkersStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PieOfPie</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PieExploded</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PieExploded3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarOfPie</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatterSmooth</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatterSmoothNoMarkers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatterLines</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatterLinesNoMarkers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AreaStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AreaStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AreaStacked3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AreaStacked1003D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DoughnutExploded</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">RadarMarkers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">RadarFilled</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Surface</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SurfaceWireframe</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SurfaceTopView</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SurfaceTopViewWireframe</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Bubble3DEffect</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">StockHLC</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">StockOHLC</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">StockVHLC</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">StockVOHLC</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderColClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderColStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderColStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderBarClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderBarStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderBarStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderCol</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeColClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeColStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeColStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeBarClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeBarStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeBarStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeCol</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidColClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidColStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidColStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidBarClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidBarStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidBarStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidCol</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatter</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Radar</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Doughnut</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Pie3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Line3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Column3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Area3D</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">eChartType</command:parameterValue>
          <dev:type>
            <maml:name>eChartType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>ColumnStacked</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="30" aliases="none">
          <maml:name>YMaxValue</maml:name>
          <maml:Description>
            <maml:para>Maximum value on the Y-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="31" aliases="none">
          <maml:name>YMinValue</maml:name>
          <maml:Description>
            <maml:para>Minimum value on the Y-axis.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="32" aliases="none">
          <maml:name>YAxisPosition</maml:name>
          <maml:Description>
            <maml:para>Position for the Y-axis ("Left" or "Right").</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Left</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Bottom</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Right</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Top</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">eAxisPosition</command:parameterValue>
          <dev:type>
            <maml:name>eAxisPosition</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="none">
          <maml:name>ChartTrendLine</maml:name>
          <maml:Description>
            <maml:para>Superimposes one of Excel's trenline types on the chart.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Exponential</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Linear</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Logarithmic</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MovingAvgerage</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Polynomial</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Power</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">eTrendLine[]</command:parameterValue>
          <dev:type>
            <maml:name>eTrendLine[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="5" aliases="none">
          <maml:name>XRange</maml:name>
          <maml:Description>
            <maml:para>The range of cells containing values for the X-Axis - usually labels.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="6" aliases="none">
          <maml:name>YRange</maml:name>
          <maml:Description>
            <maml:para>The range(s) of cells holding values for the Y-Axis - usually "data".</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="7" aliases="none">
          <maml:name>Width</maml:name>
          <maml:Description>
            <maml:para>Width of the chart in pixels. Defaults to 500.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>500</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="8" aliases="none">
          <maml:name>Height</maml:name>
          <maml:Description>
            <maml:para>Height of the chart in pixels. Defaults to 350.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>350</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="9" aliases="none">
          <maml:name>Row</maml:name>
          <maml:Description>
            <maml:para>Row position of the top left corner of the chart. 0 places it at the top of the sheet, 1 below row 1 and so on.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>LegendBold</maml:name>
          <maml:Description>
            <maml:para>Sets the key in bold type.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoLegend</maml:name>
          <maml:Description>
            <maml:para>If specified, turns off display of the key. If you only have one data series it may be preferable to use the title to say what the chart is.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ShowCategory</maml:name>
          <maml:Description>
            <maml:para>Attaches a category label in charts which support this.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ShowPercent</maml:name>
          <maml:Description>
            <maml:para>Attaches a percentage label in charts which support this.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TitleBold</maml:name>
          <maml:Description>
            <maml:para>Sets the title in bold face.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>XAxisTitleBold</maml:name>
          <maml:Description>
            <maml:para>Sets the X-axis title in bold face.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>YAxisTitleBold</maml:name>
          <maml:Description>
            <maml:para>Sets the Y-axis title in bold face.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
        <maml:name>Title</maml:name>
        <maml:Description>
          <maml:para>The title for the chart.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Chart Title</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
        <maml:name>Header</maml:name>
        <maml:Description>
          <maml:para>No longer used. This may be removed in future versions.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
        <maml:name>ChartType</maml:name>
        <maml:Description>
          <maml:para>One of the built-in chart types, such as Pie, ClusteredColumn, Line etc. Defaults to "ColumnStacked".</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">eChartType</command:parameterValue>
        <dev:type>
          <maml:name>eChartType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>ColumnStacked</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="none">
        <maml:name>ChartTrendLine</maml:name>
        <maml:Description>
          <maml:para>Superimposes one of Excel's trenline types on the chart.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">eTrendLine[]</command:parameterValue>
        <dev:type>
          <maml:name>eTrendLine[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="5" aliases="none">
        <maml:name>XRange</maml:name>
        <maml:Description>
          <maml:para>The range of cells containing values for the X-Axis - usually labels.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="6" aliases="none">
        <maml:name>YRange</maml:name>
        <maml:Description>
          <maml:para>The range(s) of cells holding values for the Y-Axis - usually "data".</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="7" aliases="none">
        <maml:name>Width</maml:name>
        <maml:Description>
          <maml:para>Width of the chart in pixels. Defaults to 500.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>500</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="8" aliases="none">
        <maml:name>Height</maml:name>
        <maml:Description>
          <maml:para>Height of the chart in pixels. Defaults to 350.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>350</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="9" aliases="none">
        <maml:name>Row</maml:name>
        <maml:Description>
          <maml:para>Row position of the top left corner of the chart. 0 places it at the top of the sheet, 1 below row 1 and so on.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="10" aliases="none">
        <maml:name>RowOffSetPixels</maml:name>
        <maml:Description>
          <maml:para>Offset to position the chart by a fraction of a row.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>10</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="11" aliases="none">
        <maml:name>Column</maml:name>
        <maml:Description>
          <maml:para>Column position of the top left corner of the chart. 0 places it at the edge of the sheet, 1 to the right of column A and so on.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>6</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="12" aliases="none">
        <maml:name>ColumnOffSetPixels</maml:name>
        <maml:Description>
          <maml:para>Offset to position the chart by a fraction of a column.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>5</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="13" aliases="none">
        <maml:name>LegendPosition</maml:name>
        <maml:Description>
          <maml:para>Location of the key, either "Left", "Right", "Top", "Bottom" or "TopRight".</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">eLegendPosition</command:parameterValue>
        <dev:type>
          <maml:name>eLegendPosition</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="14" aliases="none">
        <maml:name>LegendSize</maml:name>
        <maml:Description>
          <maml:para>Font size for the key.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>LegendBold</maml:name>
        <maml:Description>
          <maml:para>Sets the key in bold type.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NoLegend</maml:name>
        <maml:Description>
          <maml:para>If specified, turns off display of the key. If you only have one data series it may be preferable to use the title to say what the chart is.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ShowCategory</maml:name>
        <maml:Description>
          <maml:para>Attaches a category label in charts which support this.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ShowPercent</maml:name>
        <maml:Description>
          <maml:para>Attaches a percentage label in charts which support this.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="15" aliases="none">
        <maml:name>SeriesHeader</maml:name>
        <maml:Description>
          <maml:para>Specifies explicit name(s) for the data series, which will appear in the legend/key</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>TitleBold</maml:name>
        <maml:Description>
          <maml:para>Sets the title in bold face.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="16" aliases="none">
        <maml:name>TitleSize</maml:name>
        <maml:Description>
          <maml:para>Sets the point size for the title.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="17" aliases="none">
        <maml:name>XAxisTitleText</maml:name>
        <maml:Description>
          <maml:para>Specifies a title for the X-axis.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>XAxisTitleBold</maml:name>
        <maml:Description>
          <maml:para>Sets the X-axis title in bold face.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="18" aliases="none">
        <maml:name>XAxisTitleSize</maml:name>
        <maml:Description>
          <maml:para>Sets the font size for the axis title.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="19" aliases="none">
        <maml:name>XAxisNumberformat</maml:name>
        <maml:Description>
          <maml:para>A number formatting string, like "#,##0.00", for numbers along the X-axis.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="20" aliases="none">
        <maml:name>XMajorUnit</maml:name>
        <maml:Description>
          <maml:para>Spacing for the major gridlines / tick marks along the X-axis.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="21" aliases="none">
        <maml:name>XMinorUnit</maml:name>
        <maml:Description>
          <maml:para>Spacing for the minor gridlines / tick marks along the X-axis.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="22" aliases="none">
        <maml:name>XMaxValue</maml:name>
        <maml:Description>
          <maml:para>Maximum value for the scale along the X-axis.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="23" aliases="none">
        <maml:name>XMinValue</maml:name>
        <maml:Description>
          <maml:para>Minimum value for the scale along the X-axis.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="24" aliases="none">
        <maml:name>XAxisPosition</maml:name>
        <maml:Description>
          <maml:para>Position for the X-axis ("Top" or" Bottom").</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">eAxisPosition</command:parameterValue>
        <dev:type>
          <maml:name>eAxisPosition</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="25" aliases="none">
        <maml:name>YAxisTitleText</maml:name>
        <maml:Description>
          <maml:para>Specifies a title for the Y-axis.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>YAxisTitleBold</maml:name>
        <maml:Description>
          <maml:para>Sets the Y-axis title in bold face.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="26" aliases="none">
        <maml:name>YAxisTitleSize</maml:name>
        <maml:Description>
          <maml:para>Sets the font size for the Y-axis title.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="27" aliases="none">
        <maml:name>YAxisNumberformat</maml:name>
        <maml:Description>
          <maml:para>A number formatting string, like "#,##0.00", for numbers on the Y-axis</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="28" aliases="none">
        <maml:name>YMajorUnit</maml:name>
        <maml:Description>
          <maml:para>Spacing for the major gridlines / tick marks on the Y-axis.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="29" aliases="none">
        <maml:name>YMinorUnit</maml:name>
        <maml:Description>
          <maml:para>Spacing for the minor gridlines / tick marks on the Y-axis.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="30" aliases="none">
        <maml:name>YMaxValue</maml:name>
        <maml:Description>
          <maml:para>Maximum value on the Y-axis.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="31" aliases="none">
        <maml:name>YMinValue</maml:name>
        <maml:Description>
          <maml:para>Minimum value on the Y-axis.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="32" aliases="none">
        <maml:name>YAxisPosition</maml:name>
        <maml:Description>
          <maml:para>Position for the Y-axis ("Left" or "Right").</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">eAxisPosition</command:parameterValue>
        <dev:type>
          <maml:name>eAxisPosition</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>PS\&gt; $cDef = New-ExcelChartDefinition  -ChartType line -XRange "X" -YRange "Sinx"  -Title "Graph of Sine X" -TitleBold -TitleSize 14 -Column 2 -ColumnOffSetPixels 35 -Width 800 -XAxisTitleText "Degrees" -XAxisTitleBold -XAxisTitleSize 12 -XMajorUnit 30 -XMinorUnit 10 -XMinValue 0 -XMaxValue 361  -XAxisNumberformat "000" -YMinValue -1.25 -YMaxValue 1.25 -YMajorUnit 0.25 -YAxisNumberformat "0.00" -YAxisTitleText "Sine" -YAxisTitleBold -YAxisTitleSize 12  -SeriesHeader "Sin(x)" -LegendSize 8 -legendBold  -LegendPosition Bottom
PS\&gt; 0..360 | ForEach-Object {[pscustomobject][ordered]@{x = $_; Sinx = "=Sin(Radians(x)) "}} | Export-Excel -AutoNameRange -now -WorkSheetname SinX -ExcelChartDefinition $cDef -Show</dev:code>
        <dev:remarks>
          <maml:para>This reworks an example from Add-Excel-Chart but here the chart is defined and the defintion stored in $cDef and then Export-Excel uses $cDef .</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>New-PivotTableDefinition</command:name>
      <command:verb>New</command:verb>
      <command:noun>PivotTableDefinition</command:noun>
      <maml:description>
        <maml:para>Creates PivotTable definitons for Export-Excel</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Export-Excel allows a single PivotTable to be defined using the parameters -IncludePivotTable, -PivotColumns, -PivotRows, -PivotData, -PivotFilter, -PivotTotals, -PivotDataToColumn, -IncludePivotChart and -ChartType.</maml:para>
      <maml:para>Its -PivotTableDefintion paramater allows multiple PivotTables to be defined, with additional parameters. New-PivotTableDefinition is a convenient way to build these definitions.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>New-PivotTableDefinition</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="PivtoTableName">
          <maml:name>PivotTableName</maml:name>
          <maml:Description>
            <maml:para>Name for the new pivot table</maml:para>
            <maml:para>This command previously had a typo - and has an alias to avoid breaking scripts This will be removed in a future release</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SourceWorkSheet</maml:name>
          <maml:Description>
            <maml:para>Worksheet where the data is found</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SourceRange</maml:name>
          <maml:Description>
            <maml:para>Address range in the worksheet e.g "A10:F20" - the first row must contain the column names to pivot by: if the range is not specified the whole source sheet will be used.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotRows</maml:name>
          <maml:Description>
            <maml:para>Fields to set as rows in the PivotTable</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotData</maml:name>
          <maml:Description>
            <maml:para>A hash-table in form "FieldName"="Function", where function is one of Average, Count, CountNums, Max, Min, Product, None, StdDev, StdDevP, Sum, Var, VarP</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotColumns</maml:name>
          <maml:Description>
            <maml:para>Fields to set as columns in the PivotTable</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotFilter</maml:name>
          <maml:Description>
            <maml:para>Fields to use to filter in the PivotTable</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotDataToColumn</maml:name>
          <maml:Description>
            <maml:para>If there are multiple datasets in a PivotTable, by default they are shown seperatate rows under the given row heading; this switch makes them seperate columns.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotTotals</maml:name>
          <maml:Description>
            <maml:para>By default PivotTables have Totals for each Row (on the right) and for each column at the bottom. This allows just one or neither to be selected.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Both</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoTotalsInPivot</maml:name>
          <maml:Description>
            <maml:para>Included for compatibility - equivalent to -PivotTotals "None"</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GroupDateRow</maml:name>
          <maml:Description>
            <maml:para>The name of a row field which should be grouped by parts of the date/time (ignored if GroupDateRow is not specified)</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GroupDatePart</maml:name>
          <maml:Description>
            <maml:para>The Part(s) of the date to use in the grouping (ignored if GroupDateRow is not specified)</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Years</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Quarters</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Months</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Days</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Hours</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Minutes</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Seconds</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">eDateGroupBy[]</command:parameterValue>
          <dev:type>
            <maml:name>eDateGroupBy[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GroupNumericRow</maml:name>
          <maml:Description>
            <maml:para>The name of a row field which should be grouped by Number (e.g 0-99, 100-199, 200-299 )</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GroupNumericMin</maml:name>
          <maml:Description>
            <maml:para>The starting point for grouping</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Double</command:parameterValue>
          <dev:type>
            <maml:name>Double</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GroupNumericMax</maml:name>
          <maml:Description>
            <maml:para>The endpoint for grouping</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Double</command:parameterValue>
          <dev:type>
            <maml:name>Double</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1.79769313486232E+308</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GroupNumericInterval</maml:name>
          <maml:Description>
            <maml:para>The interval for grouping</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Double</command:parameterValue>
          <dev:type>
            <maml:name>Double</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>100</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotNumberFormat</maml:name>
          <maml:Description>
            <maml:para>Number format to apply to the data cells in the PivotTable</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotTableStyle</maml:name>
          <maml:Description>
            <maml:para>Apply a table style to the PivotTable</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Custom</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light1</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light2</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light3</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light4</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light5</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light6</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light7</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light8</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light9</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light10</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light11</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light12</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light13</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light14</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light15</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light16</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light17</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light18</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light19</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light20</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light21</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium1</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium2</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium3</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium4</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium5</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium6</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium7</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium8</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium9</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium10</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium11</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium12</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium13</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium14</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium15</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium16</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium17</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium18</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium19</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium20</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium21</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium22</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium23</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium24</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium25</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium26</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium27</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium28</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark1</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark2</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark3</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark4</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark5</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark6</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark7</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark8</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark9</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark10</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark11</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">TableStyles</command:parameterValue>
          <dev:type>
            <maml:name>TableStyles</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none">
          <maml:name>PivotChartDefinition</maml:name>
          <maml:Description>
            <maml:para>Use a chart definition instead of specifying chart settings one by one</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Activate</maml:name>
          <maml:Description>
            <maml:para>If there is already content in the workbook the sheet with the PivotTable will not be active UNLESS Activate is specified</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>New-PivotTableDefinition</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="PivtoTableName">
          <maml:name>PivotTableName</maml:name>
          <maml:Description>
            <maml:para>Name for the new pivot table</maml:para>
            <maml:para>This command previously had a typo - and has an alias to avoid breaking scripts This will be removed in a future release</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SourceWorkSheet</maml:name>
          <maml:Description>
            <maml:para>Worksheet where the data is found</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SourceRange</maml:name>
          <maml:Description>
            <maml:para>Address range in the worksheet e.g "A10:F20" - the first row must contain the column names to pivot by: if the range is not specified the whole source sheet will be used.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotRows</maml:name>
          <maml:Description>
            <maml:para>Fields to set as rows in the PivotTable</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotData</maml:name>
          <maml:Description>
            <maml:para>A hash-table in form "FieldName"="Function", where function is one of Average, Count, CountNums, Max, Min, Product, None, StdDev, StdDevP, Sum, Var, VarP</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotColumns</maml:name>
          <maml:Description>
            <maml:para>Fields to set as columns in the PivotTable</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotFilter</maml:name>
          <maml:Description>
            <maml:para>Fields to use to filter in the PivotTable</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotDataToColumn</maml:name>
          <maml:Description>
            <maml:para>If there are multiple datasets in a PivotTable, by default they are shown seperatate rows under the given row heading; this switch makes them seperate columns.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotTotals</maml:name>
          <maml:Description>
            <maml:para>By default PivotTables have Totals for each Row (on the right) and for each column at the bottom. This allows just one or neither to be selected.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Both</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoTotalsInPivot</maml:name>
          <maml:Description>
            <maml:para>Included for compatibility - equivalent to -PivotTotals "None"</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GroupDateRow</maml:name>
          <maml:Description>
            <maml:para>The name of a row field which should be grouped by parts of the date/time (ignored if GroupDateRow is not specified)</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GroupDatePart</maml:name>
          <maml:Description>
            <maml:para>The Part(s) of the date to use in the grouping (ignored if GroupDateRow is not specified)</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Years</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Quarters</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Months</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Days</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Hours</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Minutes</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Seconds</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">eDateGroupBy[]</command:parameterValue>
          <dev:type>
            <maml:name>eDateGroupBy[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GroupNumericRow</maml:name>
          <maml:Description>
            <maml:para>The name of a row field which should be grouped by Number (e.g 0-99, 100-199, 200-299 )</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GroupNumericMin</maml:name>
          <maml:Description>
            <maml:para>The starting point for grouping</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Double</command:parameterValue>
          <dev:type>
            <maml:name>Double</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GroupNumericMax</maml:name>
          <maml:Description>
            <maml:para>The endpoint for grouping</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Double</command:parameterValue>
          <dev:type>
            <maml:name>Double</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1.79769313486232E+308</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GroupNumericInterval</maml:name>
          <maml:Description>
            <maml:para>The interval for grouping</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Double</command:parameterValue>
          <dev:type>
            <maml:name>Double</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>100</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotNumberFormat</maml:name>
          <maml:Description>
            <maml:para>Number format to apply to the data cells in the PivotTable</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PivotTableStyle</maml:name>
          <maml:Description>
            <maml:para>Apply a table style to the PivotTable</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Custom</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light1</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light2</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light3</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light4</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light5</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light6</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light7</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light8</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light9</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light10</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light11</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light12</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light13</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light14</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light15</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light16</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light17</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light18</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light19</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light20</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Light21</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium1</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium2</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium3</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium4</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium5</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium6</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium7</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium8</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium9</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium10</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium11</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium12</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium13</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium14</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium15</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium16</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium17</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium18</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium19</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium20</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium21</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium22</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium23</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium24</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium25</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium26</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium27</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium28</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark1</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark2</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark3</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark4</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark5</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark6</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark7</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark8</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark9</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark10</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dark11</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">TableStyles</command:parameterValue>
          <dev:type>
            <maml:name>TableStyles</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>IncludePivotChart</maml:name>
          <maml:Description>
            <maml:para>If specified a chart Will be included.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ChartTitle</maml:name>
          <maml:Description>
            <maml:para>Optional title for the pivot chart, by default the title omitted.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ChartHeight</maml:name>
          <maml:Description>
            <maml:para>Height of the chart in Pixels (400 by default)</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>400</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ChartWidth</maml:name>
          <maml:Description>
            <maml:para>Width of the chart in Pixels (600 by default)</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>600</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ChartRow</maml:name>
          <maml:Description>
            <maml:para>Cell position of the top left corner of the chart, there will be this number of rows above the top edge of the chart (default is 0, chart starts at top edge of row 1).</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ChartColumn</maml:name>
          <maml:Description>
            <maml:para>Cell position of the top left corner of the chart, there will be this number of cells to the left of the chart (default is 4, chart starts at left edge of column E)</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>4</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ChartRowOffSetPixels</maml:name>
          <maml:Description>
            <maml:para>Vertical offset of the chart from the cell corner.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ChartColumnOffSetPixels</maml:name>
          <maml:Description>
            <maml:para>Horizontal offset of the chart from the cell corner.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ChartType</maml:name>
          <maml:Description>
            <maml:para>Type of chart</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Area</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Line</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Pie</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Bubble</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnClustered3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnStacked3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColumnStacked1003D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarClustered3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarStacked3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarStacked1003D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineMarkers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineMarkersStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LineMarkersStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PieOfPie</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PieExploded</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PieExploded3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BarOfPie</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatterSmooth</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatterSmoothNoMarkers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatterLines</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatterLinesNoMarkers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AreaStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AreaStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AreaStacked3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AreaStacked1003D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DoughnutExploded</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">RadarMarkers</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">RadarFilled</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Surface</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SurfaceWireframe</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SurfaceTopView</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SurfaceTopViewWireframe</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Bubble3DEffect</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">StockHLC</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">StockOHLC</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">StockVHLC</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">StockVOHLC</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderColClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderColStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderColStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderBarClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderBarStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderBarStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CylinderCol</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeColClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeColStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeColStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeBarClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeBarStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeBarStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ConeCol</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidColClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidColStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidColStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidBarClustered</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidBarStacked</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidBarStacked100</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PyramidCol</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XYScatter</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Radar</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Doughnut</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Pie3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Line3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Column3D</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Area3D</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">eChartType</command:parameterValue>
          <dev:type>
            <maml:name>eChartType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Pie</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoLegend</maml:name>
          <maml:Description>
            <maml:para>If specified hides the chart legend</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ShowCategory</maml:name>
          <maml:Description>
            <maml:para>if specified attaches the category to slices in a pie chart : not supported on all chart types, this may give errors if applied to an unsupported type.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ShowPercent</maml:name>
          <maml:Description>
            <maml:para>If specified attaches percentages to slices in a pie chart.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Activate</maml:name>
          <maml:Description>
            <maml:para>If there is already content in the workbook the sheet with the PivotTable will not be active UNLESS Activate is specified</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="PivtoTableName">
        <maml:name>PivotTableName</maml:name>
        <maml:Description>
          <maml:para>Name for the new pivot table</maml:para>
          <maml:para>This command previously had a typo - and has an alias to avoid breaking scripts This will be removed in a future release</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SourceWorkSheet</maml:name>
        <maml:Description>
          <maml:para>Worksheet where the data is found</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SourceRange</maml:name>
        <maml:Description>
          <maml:para>Address range in the worksheet e.g "A10:F20" - the first row must contain the column names to pivot by: if the range is not specified the whole source sheet will be used.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PivotRows</maml:name>
        <maml:Description>
          <maml:para>Fields to set as rows in the PivotTable</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PivotData</maml:name>
        <maml:Description>
          <maml:para>A hash-table in form "FieldName"="Function", where function is one of Average, Count, CountNums, Max, Min, Product, None, StdDev, StdDevP, Sum, Var, VarP</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>Hashtable</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PivotColumns</maml:name>
        <maml:Description>
          <maml:para>Fields to set as columns in the PivotTable</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PivotFilter</maml:name>
        <maml:Description>
          <maml:para>Fields to use to filter in the PivotTable</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PivotDataToColumn</maml:name>
        <maml:Description>
          <maml:para>If there are multiple datasets in a PivotTable, by default they are shown seperatate rows under the given row heading; this switch makes them seperate columns.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PivotTotals</maml:name>
        <maml:Description>
          <maml:para>By default PivotTables have Totals for each Row (on the right) and for each column at the bottom. This allows just one or neither to be selected.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Both</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NoTotalsInPivot</maml:name>
        <maml:Description>
          <maml:para>Included for compatibility - equivalent to -PivotTotals "None"</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>GroupDateRow</maml:name>
        <maml:Description>
          <maml:para>The name of a row field which should be grouped by parts of the date/time (ignored if GroupDateRow is not specified)</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>GroupDatePart</maml:name>
        <maml:Description>
          <maml:para>The Part(s) of the date to use in the grouping (ignored if GroupDateRow is not specified)</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">eDateGroupBy[]</command:parameterValue>
        <dev:type>
          <maml:name>eDateGroupBy[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>GroupNumericRow</maml:name>
        <maml:Description>
          <maml:para>The name of a row field which should be grouped by Number (e.g 0-99, 100-199, 200-299 )</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>GroupNumericMin</maml:name>
        <maml:Description>
          <maml:para>The starting point for grouping</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Double</command:parameterValue>
        <dev:type>
          <maml:name>Double</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>GroupNumericMax</maml:name>
        <maml:Description>
          <maml:para>The endpoint for grouping</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Double</command:parameterValue>
        <dev:type>
          <maml:name>Double</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>1.79769313486232E+308</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>GroupNumericInterval</maml:name>
        <maml:Description>
          <maml:para>The interval for grouping</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Double</command:parameterValue>
        <dev:type>
          <maml:name>Double</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>100</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PivotNumberFormat</maml:name>
        <maml:Description>
          <maml:para>Number format to apply to the data cells in the PivotTable</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PivotTableStyle</maml:name>
        <maml:Description>
          <maml:para>Apply a table style to the PivotTable</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">TableStyles</command:parameterValue>
        <dev:type>
          <maml:name>TableStyles</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none">
        <maml:name>PivotChartDefinition</maml:name>
        <maml:Description>
          <maml:para>Use a chart definition instead of specifying chart settings one by one</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>IncludePivotChart</maml:name>
        <maml:Description>
          <maml:para>If specified a chart Will be included.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ChartTitle</maml:name>
        <maml:Description>
          <maml:para>Optional title for the pivot chart, by default the title omitted.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ChartHeight</maml:name>
        <maml:Description>
          <maml:para>Height of the chart in Pixels (400 by default)</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>400</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ChartWidth</maml:name>
        <maml:Description>
          <maml:para>Width of the chart in Pixels (600 by default)</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>600</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ChartRow</maml:name>
        <maml:Description>
          <maml:para>Cell position of the top left corner of the chart, there will be this number of rows above the top edge of the chart (default is 0, chart starts at top edge of row 1).</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ChartColumn</maml:name>
        <maml:Description>
          <maml:para>Cell position of the top left corner of the chart, there will be this number of cells to the left of the chart (default is 4, chart starts at left edge of column E)</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>4</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ChartRowOffSetPixels</maml:name>
        <maml:Description>
          <maml:para>Vertical offset of the chart from the cell corner.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ChartColumnOffSetPixels</maml:name>
        <maml:Description>
          <maml:para>Horizontal offset of the chart from the cell corner.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ChartType</maml:name>
        <maml:Description>
          <maml:para>Type of chart</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">eChartType</command:parameterValue>
        <dev:type>
          <maml:name>eChartType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Pie</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NoLegend</maml:name>
        <maml:Description>
          <maml:para>If specified hides the chart legend</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ShowCategory</maml:name>
        <maml:Description>
          <maml:para>if specified attaches the category to slices in a pie chart : not supported on all chart types, this may give errors if applied to an unsupported type.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ShowPercent</maml:name>
        <maml:Description>
          <maml:para>If specified attaches percentages to slices in a pie chart.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Activate</maml:name>
        <maml:Description>
          <maml:para>If there is already content in the workbook the sheet with the PivotTable will not be active UNLESS Activate is specified</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>PS\&gt; $pt = New-PivotTableDefinition -PivotTableName "PT1" -SourceWorkSheet "Sheet1" -PivotRows "Status" -PivotData @{Status='Count'} -PivotFilter 'StartType' -IncludePivotChart -ChartType BarClustered3D
PS\&gt; $Pt += New-PivotTableDefinition -PivotTableName "PT2" -SourceWorkSheet "Sheet2" -PivotRows "Company" -PivotData @{Company='Count'} -IncludePivotChart -ChartType PieExploded3D -ShowPercent -ChartTitle "Breakdown of processes by company"
PS\&gt; Get-Service | Select-Object -Property Status,Name,DisplayName,StartType | Export-Excel -Path .\test.xlsx -AutoSize
PS\&gt; Get-Process | Select-Object -Property Name,Company,Handles,CPU,VM | Export-Excel -Path .\test.xlsx -AutoSize -WorksheetName 'sheet2'
PS\&gt; $excel = Export-Excel -Path .\test.xlsx -PivotTableDefinition $pt -Show</dev:code>
        <dev:remarks>
          <maml:para>This is a re-work of one of the examples in Export-Excel - instead of writing out the pivot definition hash-table, it is built by calling New-PivotTableDefinition.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Open-ExcelPackage</command:name>
      <command:verb>Open</command:verb>
      <command:noun>ExcelPackage</command:noun>
      <maml:description>
        <maml:para>Returns an ExcelPackage object for the specified XLSX file.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Import-Excel and Export-Excel open an Excel file, carry out their tasks and close it again.</maml:para>
      <maml:para>Sometimes it is necessary to open a file and do other work on it. Open-ExcelPackage allows the file to be opened for these tasks.</maml:para>
      <maml:para>It takes a -KillExcel switch to make sure Excel is not holding the file open; a -Password parameter for existing protected files, and a -Create switch to set-up a new file if no file already exists.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Open-ExcelPackage</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>Path</maml:name>
          <maml:Description>
            <maml:para>The path to the file to open.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
          <maml:name>Password</maml:name>
          <maml:Description>
            <maml:para>The password for a protected worksheet, as a [normal] string (not a secure string).</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>KillExcel</maml:name>
          <maml:Description>
            <maml:para>If specified, any running instances of Excel will be terminated before opening the file. This may result in lost work, so should be used with caution.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Create</maml:name>
          <maml:Description>
            <maml:para>By default Open-ExcelPackage will only open an existing file; -Create instructs it to create a new file if required.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
        <maml:name>Path</maml:name>
        <maml:Description>
          <maml:para>The path to the file to open.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>KillExcel</maml:name>
        <maml:Description>
          <maml:para>If specified, any running instances of Excel will be terminated before opening the file. This may result in lost work, so should be used with caution.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
        <maml:name>Password</maml:name>
        <maml:Description>
          <maml:para>The password for a protected worksheet, as a [normal] string (not a secure string).</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Create</maml:name>
        <maml:Description>
          <maml:para>By default Open-ExcelPackage will only open an existing file; -Create instructs it to create a new file if required.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>OfficeOpenXml.ExcelPackage</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>PS\&gt; $excel = Open-ExcelPackage -Path "$env:TEMP\test99.xlsx" -Create
PS\&gt; $ws = Add-WorkSheet -ExcelPackage $excel</dev:code>
        <dev:remarks>
          <maml:para>This will create a new file in the temp folder if it doesn't already exist. It then adds a worksheet - because no name is specified it will use the default name of "Sheet1"</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>PS\&gt; $excela= Open-ExcelPackage -path "$xlPath" -Password $password
PS\&gt; $sheet1 = $excel.Workbook.Worksheetsa"sheet1" ]
PS\&gt; Set-ExcelRange -Range $sheet1.Cells ["E1:S1048576" ], $sheet1.Cells ["V1:V1048576" ] -NFormat ( [cultureinfo ]::CurrentCulture.DateTimeFormat.ShortDatePattern)
PS\&gt; Close-ExcelPackage $excel -Show</dev:code>
        <dev:remarks>
          <maml:para>This will open the password protected file at $xlPath using the password stored in $Password. Sheet1 is selected and formatting applied to two blocks of the sheet; then the file is and saved and loaded into Excel.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Remove-WorkSheet</command:name>
      <command:verb>Remove</command:verb>
      <command:noun>WorkSheet</command:noun>
      <maml:description>
        <maml:para>Removes one or more worksheets from one or more workbooks</maml:para>
      </maml:description>
    </command:details>
    <maml:description />
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Remove-WorkSheet</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="Path">
          <maml:name>FullName</maml:name>
          <maml:Description>
            <maml:para>The fully qualified path to the XLSX file(s)</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
          <maml:name>WorksheetName</maml:name>
          <maml:Description>
            <maml:para>The worksheet to be removed (sheet1 by default)</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Sheet1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Show</maml:name>
          <maml:Description>
            <maml:para>If specified the file will be opened in excel after the sheet is removed.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:Description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:Description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="Path">
        <maml:name>FullName</maml:name>
        <maml:Description>
          <maml:para>The fully qualified path to the XLSX file(s)</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
        <maml:name>WorksheetName</maml:name>
        <maml:Description>
          <maml:para>The worksheet to be removed (sheet1 by default)</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Sheet1</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Show</maml:name>
        <maml:Description>
          <maml:para>If specified the file will be opened in excel after the sheet is removed.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:Description>
          <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:Description>
          <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>PS\&gt; Remove-WorkSheet -Path Test1.xlsx -WorksheetName Sheet1</dev:code>
        <dev:remarks>
          <maml:para>Removes the worksheet named 'Sheet1' from 'Test1.xlsx'</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>PS\&gt; Remove-WorkSheet -Path Test1.xlsx -WorksheetName Sheet1,Target1</dev:code>
        <dev:remarks>
          <maml:para>Removes the worksheet named 'Sheet1' and 'Target1' from 'Test1.xlsx'</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <dev:code>PS\&gt; Remove-WorkSheet -Path Test1.xlsx -WorksheetName Sheet1,Target1 -Show</dev:code>
        <dev:remarks>
          <maml:para>Removes the worksheets and then launches the xlsx in Excel</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>PS\&gt;  dir c:\reports\*.xlsx | Remove-WorkSheet</dev:code>
        <dev:remarks>
          <maml:para>Removes 'Sheet1' from all the xlsx files in the c:\reports directory</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Select-Worksheet</command:name>
      <command:verb>Select</command:verb>
      <command:noun>Worksheet</command:noun>
      <maml:description>
        <maml:para>Sets the selected tab in an Excel workbook to be the chosen sheet and unselects all the others.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Sometimes when a sheet is added we want it to be the active sheet, sometimes we want the active sheet to be left as it was. Select-Worksheet exists to change which sheet is the selected tab when Excel opens the file.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Select-Worksheet</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="none">
          <maml:name>ExcelPackage</maml:name>
          <maml:Description>
            <maml:para>An object representing an ExcelPackage.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ExcelPackage</command:parameterValue>
          <dev:type>
            <maml:name>ExcelPackage</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>WorksheetName</maml:name>
          <maml:Description>
            <maml:para>The name of the worksheet "Sheet1" by default.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Select-Worksheet</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExcelWorkbook</maml:name>
          <maml:Description>
            <maml:para>An Excel workbook to which the Worksheet will be added - a package contains one Workbook so you can use workbook or package as it suits.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ExcelWorkbook</command:parameterValue>
          <dev:type>
            <maml:name>ExcelWorkbook</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>WorksheetName</maml:name>
          <maml:Description>
            <maml:para>The name of the worksheet "Sheet1" by default.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Select-Worksheet</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExcelWorksheet</maml:name>
          <maml:Description>
            <maml:para>An object representing an Excel worksheet.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ExcelWorksheet</command:parameterValue>
          <dev:type>
            <maml:name>ExcelWorksheet</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="none">
        <maml:name>ExcelPackage</maml:name>
        <maml:Description>
          <maml:para>An object representing an ExcelPackage.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelPackage</command:parameterValue>
        <dev:type>
          <maml:name>ExcelPackage</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ExcelWorkbook</maml:name>
        <maml:Description>
          <maml:para>An Excel workbook to which the Worksheet will be added - a package contains one Workbook so you can use workbook or package as it suits.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelWorkbook</command:parameterValue>
        <dev:type>
          <maml:name>ExcelWorkbook</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>WorksheetName</maml:name>
        <maml:Description>
          <maml:para>The name of the worksheet "Sheet1" by default.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ExcelWorksheet</maml:name>
        <maml:Description>
          <maml:para>An object representing an Excel worksheet.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelWorksheet</command:parameterValue>
        <dev:type>
          <maml:name>ExcelWorksheet</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>PS\&gt; Select-Worksheet -ExcelWorkbook $ExcelWorkbook -WorksheetName "NewSheet"</dev:code>
        <dev:remarks>
          <maml:para>$ExcelWorkbook holds a workbook object containing a sheet named "NewSheet"; This sheet will become the [only] active sheet in the workbook</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>PS\&gt;  Select-Worksheet -ExcelPackage $Pkg -WorksheetName "NewSheet2"</dev:code>
        <dev:remarks>
          <maml:para>$pkg holds an Excel Package, whose workbook contains a sheet named "NewSheet2" This sheet will become the [only] active sheet in the workbook.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <dev:code>PS\&gt; Select-Worksheet -ExcelWorksheet $ws</dev:code>
        <dev:remarks>
          <maml:para>$ws holds an Excel worksheet which will become the [only] active sheet in its workbook.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Send-SQLDataToExcel</command:name>
      <command:verb>Send</command:verb>
      <command:noun>SQLDataToExcel</command:noun>
      <maml:description>
        <maml:para>Inserts a DataTable - returned by a SQL query - into an ExcelSheet</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>This command takes a SQL statement and run it against a database connection; for the connection it accepts either</maml:para>
      <maml:para>* an object representing a session with a SQL server or ODBC database, or</maml:para>
      <maml:para>* a connection string to make a session (if -MSSQLServer is specified it uses the SQL Native client,</maml:para>
      <maml:para>  and -Connection can be a server name instead of a detailed connection string. Without this switch it uses ODBC)</maml:para>
      <maml:para>The command takes all the parameters of Export-Excel, except for -InputObject (alias TargetData); after fetching the data it calls Export-Excel with the data as the value of InputParameter and whichever of Export-Excel's parameters it was passed; for details of these parameters see the help for Export-Excel.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Send-SQLDataToExcel</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Connection</maml:name>
          <maml:Description>
            <maml:para>A database connection string to be used to create a database session; either</maml:para>
            <maml:para>* A Data source name written in the form DSN=ODBC_Data_Source_Name, or</maml:para>
            <maml:para>* A full ODBC or SQL Native Client Connection string, or</maml:para>
            <maml:para>* The name of a SQL server.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SQL</maml:name>
          <maml:Description>
            <maml:para>The SQL query to run against the session which was passed in -Session or set up from -Connection.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>QueryTimeout</maml:name>
          <maml:Description>
            <maml:para>Override the default query time of 30 seconds.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Force</maml:name>
          <maml:Description>
            <maml:para>If specified Export-Excel will be called with parameters specified, even if there is no data to send</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Send-SQLDataToExcel</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Connection</maml:name>
          <maml:Description>
            <maml:para>A database connection string to be used to create a database session; either</maml:para>
            <maml:para>* A Data source name written in the form DSN=ODBC_Data_Source_Name, or</maml:para>
            <maml:para>* A full ODBC or SQL Native Client Connection string, or</maml:para>
            <maml:para>* The name of a SQL server.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MsSQLserver</maml:name>
          <maml:Description>
            <maml:para>Specifies the connection string is for SQL server, not ODBC.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DataBase</maml:name>
          <maml:Description>
            <maml:para>Switches to a specific database on a SQL server.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SQL</maml:name>
          <maml:Description>
            <maml:para>The SQL query to run against the session which was passed in -Session or set up from -Connection.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>QueryTimeout</maml:name>
          <maml:Description>
            <maml:para>Override the default query time of 30 seconds.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Force</maml:name>
          <maml:Description>
            <maml:para>If specified Export-Excel will be called with parameters specified, even if there is no data to send</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Send-SQLDataToExcel</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Session</maml:name>
          <maml:Description>
            <maml:para>An active ODBC Connection or SQL connection object representing a session with a database which will be queried to get the data .</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SQL</maml:name>
          <maml:Description>
            <maml:para>The SQL query to run against the session which was passed in -Session or set up from -Connection.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>QueryTimeout</maml:name>
          <maml:Description>
            <maml:para>Override the default query time of 30 seconds.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Force</maml:name>
          <maml:Description>
            <maml:para>If specified Export-Excel will be called with parameters specified, even if there is no data to send</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Send-SQLDataToExcel</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>QueryTimeout</maml:name>
          <maml:Description>
            <maml:para>Override the default query time of 30 seconds.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DataTable</maml:name>
          <maml:Description>
            <maml:para>A System.Data.DataTable object containing the data to be inserted into the spreadsheet without running a query. This remains supported to avoid breaking older scripts, but if you have a DataTable object you can pass the it into Export-Excel using -InputObject.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">DataTable</command:parameterValue>
          <dev:type>
            <maml:name>DataTable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Force</maml:name>
          <maml:Description>
            <maml:para>If specified Export-Excel will be called with parameters specified, even if there is no data to send</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Connection</maml:name>
        <maml:Description>
          <maml:para>A database connection string to be used to create a database session; either</maml:para>
          <maml:para>* A Data source name written in the form DSN=ODBC_Data_Source_Name, or</maml:para>
          <maml:para>* A full ODBC or SQL Native Client Connection string, or</maml:para>
          <maml:para>* The name of a SQL server.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Session</maml:name>
        <maml:Description>
          <maml:para>An active ODBC Connection or SQL connection object representing a session with a database which will be queried to get the data .</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MsSQLserver</maml:name>
        <maml:Description>
          <maml:para>Specifies the connection string is for SQL server, not ODBC.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>DataBase</maml:name>
        <maml:Description>
          <maml:para>Switches to a specific database on a SQL server.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SQL</maml:name>
        <maml:Description>
          <maml:para>The SQL query to run against the session which was passed in -Session or set up from -Connection.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>QueryTimeout</maml:name>
        <maml:Description>
          <maml:para>Override the default query time of 30 seconds.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>DataTable</maml:name>
        <maml:Description>
          <maml:para>A System.Data.DataTable object containing the data to be inserted into the spreadsheet without running a query. This remains supported to avoid breaking older scripts, but if you have a DataTable object you can pass the it into Export-Excel using -InputObject.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">DataTable</command:parameterValue>
        <dev:type>
          <maml:name>DataTable</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Force</maml:name>
        <maml:Description>
          <maml:para>If specified Export-Excel will be called with parameters specified, even if there is no data to send</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>PS\&gt; Send-SQLDataToExcel -MsSQLserver -Connection localhost -SQL  "select name,type,type_desc from [master].[sys].[all_objects]" -Path .\temp.xlsx -WorkSheetname master -AutoSize -FreezeTopRow -AutoFilter -BoldTopRow</dev:code>
        <dev:remarks>
          <maml:para>Connects to the local SQL server and selects 3 columns from [Sys].[all_objects] and exports then to a sheet named master with some basic header management</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>PS\&gt; $dbPath = 'C:\Users\James\Documents\Database1.accdb'
PS\&gt; $Connection = "Driver={Microsoft Access Driver (*.mdb, *.accdb)};Dbq=$dbPath;"
PS\&gt; $SQL="SELECT top 25 Name,Length  From TestData ORDER BY Length DESC"
PS\&gt; Send-SQLDataToExcel -Connection  $connection -SQL $sql -path .\demo1.xlsx -WorkSheetname "Sizes" -AutoSize</dev:code>
        <dev:remarks>
          <maml:para>This creates an  ODBC connection string to read from an Access file and a SQL Statement to extracts data from it, and sends the resulting data to a new worksheet</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <dev:code>PS\&gt; $dbPath = 'C:\users\James\Documents\f1Results.xlsx'

PS\&gt; $Connection = "Driver={Microsoft Excel Driver (*.xls, *.xlsx, *.xlsm, *.xlsb)};Dbq=$dbPath;"
PS\&gt; $SQL="SELECT top 25 DriverName, Count(RaceDate) as Races, Count(Win) as Wins, Count(Pole) as Poles, Count(FastestLap) as Fastlaps " +
           " FROM Results  GROUP BY DriverName ORDER BY (count(win)) DESC"

PS\&gt;Send-SQLDataToExcel -Connection  $connection -SQL $sql -path .\demo2.xlsx -WorkSheetname "Winners" -AutoSize -AutoNameRange -ConditionalFormat @{DataBarColor="Blue"; Range="Wins"}</dev:code>
        <dev:remarks>
          <maml:para>Similar to the previous example, this creates a connection string, this time for an Excel file, and runs a SQL statement to get a list of motor-racing results, outputting the resulting data to a new spreadsheet. The spreadsheet is formatted and a data bar added to show make the drivers' wins clearer. (The F1 results database is available from https://1drv.ms/x/s!AhfYu7-CJv4ehNdZWxJE9LMAX_N5sg )</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
        <dev:code>PS\&gt; $dbPath = 'C:\users\James\Documents\f1Results.xlsx'

PS\&gt; $SQL = "SELECT top 25 DriverName, Count(RaceDate) as Races, Count(Win) as Wins, Count(Pole) as Poles, Count(FastestLap) as Fastlaps " +
             " FROM Results GROUP BY DriverName ORDER BY (count(win)) DESC"
PS\&gt; $null = Get-SQL -Session F1 -excel -Connection $dbPath -sql $sql -OutputVariable Table

PS\&gt; Send-SQLDataToExcel -DataTable $Table -Path ".\demo3.xlsx" -WorkSheetname Gpwinners -autosize  -TableName winners -TableStyle Light6 -show</dev:code>
        <dev:remarks>
          <maml:para>This uses Get-SQL (at least V1.1 - download from the PowerShell gallery with Install-Module -Name GetSQL - (note the function is Get-SQL the module is GetSQL without the "-" )</maml:para>
          <maml:para>Get-SQL simplifies making database connections and building /submitting SQL statements. Here Get-SQL uses the same SQL statement as before; -OutputVariable leaves a System.Data.DataTable object in $table  and Send-SQLDataToExcel puts $table into the worksheet and sets it as an Excel table. The command is equivalent to running</maml:para>
          <maml:para>PS&gt;  Export-Excel -inputObject $Table -Path ".\demo3.xlsx" -WorkSheetname Gpwinners -autosize  -TableName winners -TableStyle Light6 -show</maml:para>
          <maml:para>This is quicker than using PS&gt; Get-SQL &lt;parameters&gt; | export-excel -ExcludeProperty rowerror,rowstate,table,itemarray,haserrors &lt;parameters&gt;</maml:para>
          <maml:para>(the F1 results database is available from https://1drv.ms/x/s!AhfYu7-CJv4ehNdZWxJE9LMAX_N5sg )</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 5 --------------------------</maml:title>
        <dev:code>PS\&gt;$SQL = "SELECT top 25 DriverName,  Count(Win) as Wins FROM Results GROUP BY DriverName ORDER BY (count(win)) DESC"
PS\&gt; Send-SQLDataToExcel -Session $DbSessions\["f1"\] -SQL $sql -Path  ".\demo3.xlsx" -WorkSheetname Gpwinners  -ClearSheet -autosize -ColumnChart</dev:code>
        <dev:remarks>
          <maml:para>Like the previous example, this uses Get-SQL (download from the gallery with Install-Module -Name GetSQL). It uses the database session which Get-SQL created, rather than an ODBC connection string. The Session parameter can either be a object (as shown here), or the name used by Get-SQL ("F1" in this case).</maml:para>
          <maml:para>Here the data is presented as a quick chart.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 6 --------------------------</maml:title>
        <dev:code>Send-SQLDataToExcel -path .\demo4.xlsx -WorkSheetname "LR" -Connection "DSN=LR" -sql "SELECT name AS CollectionName FROM AgLibraryCollection Collection ORDER BY CollectionName"</dev:code>
        <dev:remarks>
          <maml:para>This example uses an Existing ODBC datasource name "LR" which maps to an adobe lightroom database and gets a list of collection names into a worksheet</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Export-Excel</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-ExcelColumn</command:name>
      <command:verb>Set</command:verb>
      <command:noun>ExcelColumn</command:noun>
      <maml:description>
        <maml:para>Adds or modifies a column in an Excel worksheet, filling values, setting formatting and/or creating named ranges.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Set-ExcelColumn can take a value which is either a string containing a value or formula or a scriptblock which evaluates to a string, and optionally a column number and fills that value down the column.</maml:para>
      <maml:para>A column heading can be specified, and the column can be made a named range.</maml:para>
      <maml:para>The column can be formatted in the same operation.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-ExcelColumn</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExcelPackage</maml:name>
          <maml:Description>
            <maml:para>If specifying the worksheet by name, the ExcelPackage object which contains the worksheet also needs to be passed.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ExcelPackage</command:parameterValue>
          <dev:type>
            <maml:name>ExcelPackage</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Worksheetname</maml:name>
          <maml:Description>
            <maml:para>The sheet to update can be given as a name or an Excel Worksheet object - this sets it by name.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Sheet1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="none">
          <maml:name>Column</maml:name>
          <maml:Description>
            <maml:para>Column to fill down - the first column is 1. 0 will be interpreted as first empty column.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>StartRow</maml:name>
          <maml:Description>
            <maml:para>First row to fill data in.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Value</maml:name>
          <maml:Description>
            <maml:para>A value, formula or scriptblock to fill in. A script block can use $worksheet, $row, $column [number], $columnName [letter(s)], $startRow, $startColumn, $endRow, $endColumn.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Heading</maml:name>
          <maml:Description>
            <maml:para>Optional column heading.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="NFormat">
          <maml:name>NumberFormat</maml:name>
          <maml:Description>
            <maml:para>Number format to apply to cells for example "dd/MM/yyyy HH:mm", "£#,##0.00;[Red]-£#,##0.00", "0.00%" , "##/##" or "0.0E+0" etc.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BorderAround</maml:name>
          <maml:Description>
            <maml:para>Style of border to draw around the row.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Hair</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dotted</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thin</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thick</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Double</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelBorderStyle</command:parameterValue>
          <dev:type>
            <maml:name>ExcelBorderStyle</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FontColor</maml:name>
          <maml:Description>
            <maml:para>Colour for the text - if none specified it will be left as it it is.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Bold</maml:name>
          <maml:Description>
            <maml:para>Make text bold; use -Bold:$false to remove bold.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Italic</maml:name>
          <maml:Description>
            <maml:para>Make text italic;  use -Italic:$false to remove italic.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Underline</maml:name>
          <maml:Description>
            <maml:para>Underline the text using the underline style in -UnderlineType;  use -Underline:$false to remove underlining.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>UnderLineType</maml:name>
          <maml:Description>
            <maml:para>Specifies whether underlining should be single or double, normal or accounting mode. The default is "Single".</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Single</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Double</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SingleAccounting</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DoubleAccounting</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelUnderLineType</command:parameterValue>
          <dev:type>
            <maml:name>ExcelUnderLineType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Single</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>StrikeThru</maml:name>
          <maml:Description>
            <maml:para>Strike through text; use -StrikeThru:$false to remove strike through.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FontShift</maml:name>
          <maml:Description>
            <maml:para>Subscript or Superscript (or None).</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Baseline</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Subscript</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Superscript</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelVerticalAlignmentFont</command:parameterValue>
          <dev:type>
            <maml:name>ExcelVerticalAlignmentFont</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FontName</maml:name>
          <maml:Description>
            <maml:para>Font to use - Excel defaults to Calibri.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FontSize</maml:name>
          <maml:Description>
            <maml:para>Point size for the text.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Single</command:parameterValue>
          <dev:type>
            <maml:name>Single</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Change background color.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BackgroundPattern</maml:name>
          <maml:Description>
            <maml:para>Background pattern - "Solid" by default.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Solid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Gray125</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Gray0625</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkVertical</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkHorizontal</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkDown</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkUp</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkGrid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkTrellis</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightVertical</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightHorizontal</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightDown</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightUp</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightGrid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightTrellis</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelFillStyle</command:parameterValue>
          <dev:type>
            <maml:name>ExcelFillStyle</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Solid</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="PatternColour">
          <maml:name>PatternColor</maml:name>
          <maml:Description>
            <maml:para>Secondary color for background pattern.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>WrapText</maml:name>
          <maml:Description>
            <maml:para>Turn on Text-Wrapping; use -WrapText:$false to turn off wrapping.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>HorizontalAlignment</maml:name>
          <maml:Description>
            <maml:para>Position cell contents to Left, Right, Center etc. Default is "General".</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">General</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Left</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Center</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CenterContinuous</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Right</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Fill</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Distributed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Justify</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelHorizontalAlignment</command:parameterValue>
          <dev:type>
            <maml:name>ExcelHorizontalAlignment</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>VerticalAlignment</maml:name>
          <maml:Description>
            <maml:para>Position cell contents to Top, Bottom or Center.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Top</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Center</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Bottom</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Distributed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Justify</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelVerticalAlignment</command:parameterValue>
          <dev:type>
            <maml:name>ExcelVerticalAlignment</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TextRotation</maml:name>
          <maml:Description>
            <maml:para>Degrees to rotate text; up to +90 for anti-clockwise ("upwards"), or to -90 for clockwise.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="AutoFit">
          <maml:name>AutoSize</maml:name>
          <maml:Description>
            <maml:para>Attempt to auto-fit cells to the width their contents.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Width</maml:name>
          <maml:Description>
            <maml:para>Set cells to a fixed width, ignored if -AutoSize is specified.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Single</command:parameterValue>
          <dev:type>
            <maml:name>Single</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AutoNameRange</maml:name>
          <maml:Description>
            <maml:para>Set the inserted data to be a named range.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Hide</maml:name>
          <maml:Description>
            <maml:para>Hide the column.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Specified</maml:name>
          <maml:Description>
            <maml:para>If specified, returns the range of cells which were affected.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PassThru</maml:name>
          <maml:Description>
            <maml:para>If specified, return an object representing the Column, to allow further work to be done on it.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Set-ExcelColumn</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Worksheet</maml:name>
          <maml:Description>
            <maml:para>This passes the worksheet object instead of passing a sheet name and an Excelpackage object.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ExcelWorksheet</command:parameterValue>
          <dev:type>
            <maml:name>ExcelWorksheet</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="none">
          <maml:name>Column</maml:name>
          <maml:Description>
            <maml:para>Column to fill down - the first column is 1. 0 will be interpreted as first empty column.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>StartRow</maml:name>
          <maml:Description>
            <maml:para>First row to fill data in.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Value</maml:name>
          <maml:Description>
            <maml:para>A value, formula or scriptblock to fill in. A script block can use $worksheet, $row, $column [number], $columnName [letter(s)], $startRow, $startColumn, $endRow, $endColumn.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Heading</maml:name>
          <maml:Description>
            <maml:para>Optional column heading.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="NFormat">
          <maml:name>NumberFormat</maml:name>
          <maml:Description>
            <maml:para>Number format to apply to cells for example "dd/MM/yyyy HH:mm", "£#,##0.00;[Red]-£#,##0.00", "0.00%" , "##/##" or "0.0E+0" etc.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BorderAround</maml:name>
          <maml:Description>
            <maml:para>Style of border to draw around the row.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Hair</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dotted</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thin</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thick</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Double</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelBorderStyle</command:parameterValue>
          <dev:type>
            <maml:name>ExcelBorderStyle</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FontColor</maml:name>
          <maml:Description>
            <maml:para>Colour for the text - if none specified it will be left as it it is.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Bold</maml:name>
          <maml:Description>
            <maml:para>Make text bold; use -Bold:$false to remove bold.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Italic</maml:name>
          <maml:Description>
            <maml:para>Make text italic;  use -Italic:$false to remove italic.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Underline</maml:name>
          <maml:Description>
            <maml:para>Underline the text using the underline style in -UnderlineType;  use -Underline:$false to remove underlining.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>UnderLineType</maml:name>
          <maml:Description>
            <maml:para>Specifies whether underlining should be single or double, normal or accounting mode. The default is "Single".</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Single</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Double</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SingleAccounting</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DoubleAccounting</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelUnderLineType</command:parameterValue>
          <dev:type>
            <maml:name>ExcelUnderLineType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Single</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>StrikeThru</maml:name>
          <maml:Description>
            <maml:para>Strike through text; use -StrikeThru:$false to remove strike through.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FontShift</maml:name>
          <maml:Description>
            <maml:para>Subscript or Superscript (or None).</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Baseline</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Subscript</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Superscript</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelVerticalAlignmentFont</command:parameterValue>
          <dev:type>
            <maml:name>ExcelVerticalAlignmentFont</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FontName</maml:name>
          <maml:Description>
            <maml:para>Font to use - Excel defaults to Calibri.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FontSize</maml:name>
          <maml:Description>
            <maml:para>Point size for the text.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Single</command:parameterValue>
          <dev:type>
            <maml:name>Single</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Change background color.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BackgroundPattern</maml:name>
          <maml:Description>
            <maml:para>Background pattern - "Solid" by default.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Solid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Gray125</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Gray0625</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkVertical</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkHorizontal</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkDown</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkUp</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkGrid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkTrellis</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightVertical</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightHorizontal</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightDown</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightUp</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightGrid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightTrellis</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelFillStyle</command:parameterValue>
          <dev:type>
            <maml:name>ExcelFillStyle</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Solid</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="PatternColour">
          <maml:name>PatternColor</maml:name>
          <maml:Description>
            <maml:para>Secondary color for background pattern.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>WrapText</maml:name>
          <maml:Description>
            <maml:para>Turn on Text-Wrapping; use -WrapText:$false to turn off wrapping.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>HorizontalAlignment</maml:name>
          <maml:Description>
            <maml:para>Position cell contents to Left, Right, Center etc. Default is "General".</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">General</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Left</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Center</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CenterContinuous</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Right</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Fill</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Distributed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Justify</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelHorizontalAlignment</command:parameterValue>
          <dev:type>
            <maml:name>ExcelHorizontalAlignment</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>VerticalAlignment</maml:name>
          <maml:Description>
            <maml:para>Position cell contents to Top, Bottom or Center.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Top</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Center</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Bottom</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Distributed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Justify</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelVerticalAlignment</command:parameterValue>
          <dev:type>
            <maml:name>ExcelVerticalAlignment</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TextRotation</maml:name>
          <maml:Description>
            <maml:para>Degrees to rotate text; up to +90 for anti-clockwise ("upwards"), or to -90 for clockwise.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="AutoFit">
          <maml:name>AutoSize</maml:name>
          <maml:Description>
            <maml:para>Attempt to auto-fit cells to the width their contents.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Width</maml:name>
          <maml:Description>
            <maml:para>Set cells to a fixed width, ignored if -AutoSize is specified.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Single</command:parameterValue>
          <dev:type>
            <maml:name>Single</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AutoNameRange</maml:name>
          <maml:Description>
            <maml:para>Set the inserted data to be a named range.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Hide</maml:name>
          <maml:Description>
            <maml:para>Hide the column.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Specified</maml:name>
          <maml:Description>
            <maml:para>If specified, returns the range of cells which were affected.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PassThru</maml:name>
          <maml:Description>
            <maml:para>If specified, return an object representing the Column, to allow further work to be done on it.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ExcelPackage</maml:name>
        <maml:Description>
          <maml:para>If specifying the worksheet by name, the ExcelPackage object which contains the worksheet also needs to be passed.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelPackage</command:parameterValue>
        <dev:type>
          <maml:name>ExcelPackage</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Worksheetname</maml:name>
        <maml:Description>
          <maml:para>The sheet to update can be given as a name or an Excel Worksheet object - this sets it by name.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Sheet1</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Worksheet</maml:name>
        <maml:Description>
          <maml:para>This passes the worksheet object instead of passing a sheet name and an Excelpackage object.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelWorksheet</command:parameterValue>
        <dev:type>
          <maml:name>ExcelWorksheet</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="none">
        <maml:name>Column</maml:name>
        <maml:Description>
          <maml:para>Column to fill down - the first column is 1. 0 will be interpreted as first empty column.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>StartRow</maml:name>
        <maml:Description>
          <maml:para>First row to fill data in.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Value</maml:name>
        <maml:Description>
          <maml:para>A value, formula or scriptblock to fill in. A script block can use $worksheet, $row, $column [number], $columnName [letter(s)], $startRow, $startColumn, $endRow, $endColumn.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Heading</maml:name>
        <maml:Description>
          <maml:para>Optional column heading.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="NFormat">
        <maml:name>NumberFormat</maml:name>
        <maml:Description>
          <maml:para>Number format to apply to cells for example "dd/MM/yyyy HH:mm", "£#,##0.00;[Red]-£#,##0.00", "0.00%" , "##/##" or "0.0E+0" etc.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BorderAround</maml:name>
        <maml:Description>
          <maml:para>Style of border to draw around the row.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelBorderStyle</command:parameterValue>
        <dev:type>
          <maml:name>ExcelBorderStyle</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>FontColor</maml:name>
        <maml:Description>
          <maml:para>Colour for the text - if none specified it will be left as it it is.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Bold</maml:name>
        <maml:Description>
          <maml:para>Make text bold; use -Bold:$false to remove bold.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Italic</maml:name>
        <maml:Description>
          <maml:para>Make text italic;  use -Italic:$false to remove italic.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Underline</maml:name>
        <maml:Description>
          <maml:para>Underline the text using the underline style in -UnderlineType;  use -Underline:$false to remove underlining.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>UnderLineType</maml:name>
        <maml:Description>
          <maml:para>Specifies whether underlining should be single or double, normal or accounting mode. The default is "Single".</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelUnderLineType</command:parameterValue>
        <dev:type>
          <maml:name>ExcelUnderLineType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Single</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>StrikeThru</maml:name>
        <maml:Description>
          <maml:para>Strike through text; use -StrikeThru:$false to remove strike through.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>FontShift</maml:name>
        <maml:Description>
          <maml:para>Subscript or Superscript (or None).</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelVerticalAlignmentFont</command:parameterValue>
        <dev:type>
          <maml:name>ExcelVerticalAlignmentFont</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>FontName</maml:name>
        <maml:Description>
          <maml:para>Font to use - Excel defaults to Calibri.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>FontSize</maml:name>
        <maml:Description>
          <maml:para>Point size for the text.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Single</command:parameterValue>
        <dev:type>
          <maml:name>Single</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BackgroundColor</maml:name>
        <maml:Description>
          <maml:para>Change background color.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BackgroundPattern</maml:name>
        <maml:Description>
          <maml:para>Background pattern - "Solid" by default.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelFillStyle</command:parameterValue>
        <dev:type>
          <maml:name>ExcelFillStyle</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Solid</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="PatternColour">
        <maml:name>PatternColor</maml:name>
        <maml:Description>
          <maml:para>Secondary color for background pattern.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>WrapText</maml:name>
        <maml:Description>
          <maml:para>Turn on Text-Wrapping; use -WrapText:$false to turn off wrapping.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>HorizontalAlignment</maml:name>
        <maml:Description>
          <maml:para>Position cell contents to Left, Right, Center etc. Default is "General".</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelHorizontalAlignment</command:parameterValue>
        <dev:type>
          <maml:name>ExcelHorizontalAlignment</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>VerticalAlignment</maml:name>
        <maml:Description>
          <maml:para>Position cell contents to Top, Bottom or Center.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelVerticalAlignment</command:parameterValue>
        <dev:type>
          <maml:name>ExcelVerticalAlignment</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>TextRotation</maml:name>
        <maml:Description>
          <maml:para>Degrees to rotate text; up to +90 for anti-clockwise ("upwards"), or to -90 for clockwise.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="AutoFit">
        <maml:name>AutoSize</maml:name>
        <maml:Description>
          <maml:para>Attempt to auto-fit cells to the width their contents.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Width</maml:name>
        <maml:Description>
          <maml:para>Set cells to a fixed width, ignored if -AutoSize is specified.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Single</command:parameterValue>
        <dev:type>
          <maml:name>Single</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AutoNameRange</maml:name>
        <maml:Description>
          <maml:para>Set the inserted data to be a named range.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Hide</maml:name>
        <maml:Description>
          <maml:para>Hide the column.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Specified</maml:name>
        <maml:Description>
          <maml:para>If specified, returns the range of cells which were affected.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PassThru</maml:name>
        <maml:Description>
          <maml:para>If specified, return an object representing the Column, to allow further work to be done on it.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>OfficeOpenXml.ExcelColumn</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>System.String</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>PS\&gt; Set-ExcelColumn -Worksheet $ws -Column 5 -NumberFormat 'Currency'</dev:code>
        <dev:remarks>
          <maml:para>$ws contains a worksheet object - and column "E" is set to use the local currency format.</maml:para>
          <maml:para>Intelisense will complete the names of predefined number formats.</maml:para>
          <maml:para>You can see how currency is interpreted on the local computer with the command Expand-NumberFormat currency</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>PS\&gt; Set-ExcelColumn -Worksheet $ws -Heading "WinsToFastLaps"  -Value {"=E$row/C$row"} -Column 7 -AutoSize -AutoNameRange</dev:code>
        <dev:remarks>
          <maml:para>Here, $WS already contains a worksheet which holds counts of races won and fastest laps recorded by racing drivers (in columns C and E). Set-ExcelColumn specifies that Column 7 should have a heading of "WinsToFastLaps" and the data cells should contain =E2/C2 , =E3/C3 etc the new data cells should become a named range, which will also be named "WinsToFastLaps" and the column width will be set automatically.</maml:para>
          <maml:para>When a value begins with "=", it is treated as a formula.</maml:para>
          <maml:para>If value is a script block it will be evaluated, so here the string "=E$row/C$Row" will have the number of the current row inserted; see the value parameter for a list of variables which can be used.</maml:para>
          <maml:para>Note than when evaluating an expression in a string, it is necessary to wrap it in $()  so $row is valid but $($row+1) is needed.</maml:para>
          <maml:para>To preventVariables merging into other parts of the string, use the back tick "$columnName`4" will be "G4" - without the backtick the string will look for a variable named "columnName4"</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <dev:code>Set-ExcelColumn -Worksheet $ws -Heading "Link" -Value {"https://en.wikipedia.org" + $worksheet.cells["B$Row"].value  }  -AutoSize</dev:code>
        <dev:remarks>
          <maml:para>In this example, the worksheet in $ws has partial links to Wikipedia pages in column B.</maml:para>
          <maml:para>The -Value parameter is a script block which outputs a string beginning "https..." and ending with the value of the cell at column B in the current row.</maml:para>
          <maml:para>When given a valid URI,  Set-ExcelColumn makes it a hyperlink.</maml:para>
          <maml:para>The column will be autosized to fit the links.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
        <dev:code>4..6 | Set-ExcelColumn -Worksheet $ws -AutoNameRange</dev:code>
        <dev:remarks>
          <maml:para>Again $ws contains a worksheet. Here columns 4 to 6 are made into named ranges, row 1 is used for the range name and the rest of the column becomes the range.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-ExcelRange</command:name>
      <command:verb>Set</command:verb>
      <command:noun>ExcelRange</command:noun>
      <maml:description>
        <maml:para>Applies number, font, alignment and/or color formatting, values or formulas to a range of Excel cells.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Set-ExcelRange was created to set the style elements for a range of cells, this includes auto-sizing and hiding, setting font elements (Name, Size, Bold, Italic, Underline &amp; UnderlineStyle and Subscript &amp; SuperScript), font and background colors, borders, text wrapping, rotation, alignment within cells, and number format.</maml:para>
      <maml:para>It was orignally named "Set-Format", but it has been extended to set Values, Formulas and ArrayFormulas (sometimes called Ctrl-shift-Enter [CSE] formulas); because of this, the name has become Set-ExcelRange but the old name of Set-Format is preserved as an alias.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-ExcelRange</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="Address">
          <maml:name>Range</maml:name>
          <maml:Description>
            <maml:para>One or more row(s), Column(s) and/or block(s) of cells to format.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>WorkSheet</maml:name>
          <maml:Description>
            <maml:para>The worksheet where the format is to be applied.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ExcelWorksheet</command:parameterValue>
          <dev:type>
            <maml:name>ExcelWorksheet</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="NFormat">
          <maml:name>NumberFormat</maml:name>
          <maml:Description>
            <maml:para>Number format to apply to cells for example  "dd/MM/yyyy HH:mm", "£#,##0.00;[Red]-£#,##0.00", "0.00%" , "##/##" or "0.0E+0" etc.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BorderAround</maml:name>
          <maml:Description>
            <maml:para>Style of border to draw around the range.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Hair</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dotted</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thin</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thick</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Double</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelBorderStyle</command:parameterValue>
          <dev:type>
            <maml:name>ExcelBorderStyle</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BorderColor</maml:name>
          <maml:Description>
            <maml:para>Color of the border.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::Black</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BorderBottom</maml:name>
          <maml:Description>
            <maml:para>Style for the bottom border.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Hair</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dotted</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thin</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thick</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Double</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelBorderStyle</command:parameterValue>
          <dev:type>
            <maml:name>ExcelBorderStyle</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BorderTop</maml:name>
          <maml:Description>
            <maml:para>Style for the top border.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Hair</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dotted</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thin</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thick</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Double</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelBorderStyle</command:parameterValue>
          <dev:type>
            <maml:name>ExcelBorderStyle</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BorderLeft</maml:name>
          <maml:Description>
            <maml:para>Style for the left border.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Hair</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dotted</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thin</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thick</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Double</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelBorderStyle</command:parameterValue>
          <dev:type>
            <maml:name>ExcelBorderStyle</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BorderRight</maml:name>
          <maml:Description>
            <maml:para>Style for the right border.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Hair</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dotted</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thin</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thick</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Double</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelBorderStyle</command:parameterValue>
          <dev:type>
            <maml:name>ExcelBorderStyle</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ForegroundColor">
          <maml:name>FontColor</maml:name>
          <maml:Description>
            <maml:para>Colour for the text - if none is specified it will be left as it is.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Value</maml:name>
          <maml:Description>
            <maml:para>Value for the cell.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Formula</maml:name>
          <maml:Description>
            <maml:para>Formula for the cell.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ArrayFormula</maml:name>
          <maml:Description>
            <maml:para>Specifies formula should be an array formula (a.k.a CSE [ctrl-shift-enter] formula).</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ResetFont</maml:name>
          <maml:Description>
            <maml:para>Clear Bold, Italic, StrikeThrough and Underline and set color to Black.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Bold</maml:name>
          <maml:Description>
            <maml:para>Make text bold; use -Bold:$false to remove bold.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Italic</maml:name>
          <maml:Description>
            <maml:para>Make text italic;  use -Italic:$false to remove italic.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Underline</maml:name>
          <maml:Description>
            <maml:para>Underline the text using the underline style in -UnderlineType;  use -Underline:$false to remove underlining.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>UnderLineType</maml:name>
          <maml:Description>
            <maml:para>Specifies whether underlining should be single or double, normal or accounting mode. The default is "Single".</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Single</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Double</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SingleAccounting</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DoubleAccounting</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelUnderLineType</command:parameterValue>
          <dev:type>
            <maml:name>ExcelUnderLineType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Single</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>StrikeThru</maml:name>
          <maml:Description>
            <maml:para>Strike through text; use -Strikethru:$false to remove Strike through</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FontShift</maml:name>
          <maml:Description>
            <maml:para>Subscript or Superscript (or none).</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Baseline</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Subscript</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Superscript</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelVerticalAlignmentFont</command:parameterValue>
          <dev:type>
            <maml:name>ExcelVerticalAlignmentFont</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FontName</maml:name>
          <maml:Description>
            <maml:para>Font to use - Excel defaults to Calibri.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FontSize</maml:name>
          <maml:Description>
            <maml:para>Point size for the text.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Single</command:parameterValue>
          <dev:type>
            <maml:name>Single</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Change background color.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BackgroundPattern</maml:name>
          <maml:Description>
            <maml:para>Background pattern - Solid by default.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Solid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Gray125</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Gray0625</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkVertical</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkHorizontal</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkDown</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkUp</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkGrid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkTrellis</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightVertical</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightHorizontal</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightDown</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightUp</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightGrid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightTrellis</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelFillStyle</command:parameterValue>
          <dev:type>
            <maml:name>ExcelFillStyle</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Solid</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="PatternColour">
          <maml:name>PatternColor</maml:name>
          <maml:Description>
            <maml:para>Secondary color for background pattern.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>WrapText</maml:name>
          <maml:Description>
            <maml:para>Turn on Text-Wrapping; use -WrapText:$false to turn off wrapping.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>HorizontalAlignment</maml:name>
          <maml:Description>
            <maml:para>Position cell contents to Left, Right, Center etc. default is 'General'.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">General</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Left</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Center</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CenterContinuous</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Right</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Fill</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Distributed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Justify</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelHorizontalAlignment</command:parameterValue>
          <dev:type>
            <maml:name>ExcelHorizontalAlignment</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>VerticalAlignment</maml:name>
          <maml:Description>
            <maml:para>Position cell contents to Top, Bottom or Center.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Top</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Center</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Bottom</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Distributed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Justify</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelVerticalAlignment</command:parameterValue>
          <dev:type>
            <maml:name>ExcelVerticalAlignment</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TextRotation</maml:name>
          <maml:Description>
            <maml:para>Degrees to rotate text; up to +90 for anti-clockwise ("upwards"), or to -90 for clockwise.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="AutoFit">
          <maml:name>AutoSize</maml:name>
          <maml:Description>
            <maml:para>Autofit cells to width  (columns or ranges only).</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Width</maml:name>
          <maml:Description>
            <maml:para>Set cells to a fixed width (columns or ranges only), ignored if Autosize is specified.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Single</command:parameterValue>
          <dev:type>
            <maml:name>Single</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Height</maml:name>
          <maml:Description>
            <maml:para>Set cells to a fixed height  (rows or ranges only).</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Single</command:parameterValue>
          <dev:type>
            <maml:name>Single</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Hidden</maml:name>
          <maml:Description>
            <maml:para>Hide a row or column  (not a range); use -Hidden:$false to unhide.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Locked</maml:name>
          <maml:Description>
            <maml:para>Locks cells. Cells are locked by default use -locked:$false on the whole sheet and then lock specific ones, and enable protection on the sheet.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Merge</maml:name>
          <maml:Description>
            <maml:para>Merges cells - it is recommended that you explicitly set -HorizontalAlignment</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="Address">
        <maml:name>Range</maml:name>
        <maml:Description>
          <maml:para>One or more row(s), Column(s) and/or block(s) of cells to format.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>WorkSheet</maml:name>
        <maml:Description>
          <maml:para>The worksheet where the format is to be applied.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelWorksheet</command:parameterValue>
        <dev:type>
          <maml:name>ExcelWorksheet</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="NFormat">
        <maml:name>NumberFormat</maml:name>
        <maml:Description>
          <maml:para>Number format to apply to cells for example  "dd/MM/yyyy HH:mm", "£#,##0.00;[Red]-£#,##0.00", "0.00%" , "##/##" or "0.0E+0" etc.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BorderAround</maml:name>
        <maml:Description>
          <maml:para>Style of border to draw around the range.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelBorderStyle</command:parameterValue>
        <dev:type>
          <maml:name>ExcelBorderStyle</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BorderColor</maml:name>
        <maml:Description>
          <maml:para>Color of the border.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Drawing.Color]::Black</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BorderBottom</maml:name>
        <maml:Description>
          <maml:para>Style for the bottom border.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelBorderStyle</command:parameterValue>
        <dev:type>
          <maml:name>ExcelBorderStyle</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BorderTop</maml:name>
        <maml:Description>
          <maml:para>Style for the top border.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelBorderStyle</command:parameterValue>
        <dev:type>
          <maml:name>ExcelBorderStyle</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BorderLeft</maml:name>
        <maml:Description>
          <maml:para>Style for the left border.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelBorderStyle</command:parameterValue>
        <dev:type>
          <maml:name>ExcelBorderStyle</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BorderRight</maml:name>
        <maml:Description>
          <maml:para>Style for the right border.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelBorderStyle</command:parameterValue>
        <dev:type>
          <maml:name>ExcelBorderStyle</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ForegroundColor">
        <maml:name>FontColor</maml:name>
        <maml:Description>
          <maml:para>Colour for the text - if none is specified it will be left as it is.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Value</maml:name>
        <maml:Description>
          <maml:para>Value for the cell.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Formula</maml:name>
        <maml:Description>
          <maml:para>Formula for the cell.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ArrayFormula</maml:name>
        <maml:Description>
          <maml:para>Specifies formula should be an array formula (a.k.a CSE [ctrl-shift-enter] formula).</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ResetFont</maml:name>
        <maml:Description>
          <maml:para>Clear Bold, Italic, StrikeThrough and Underline and set color to Black.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Bold</maml:name>
        <maml:Description>
          <maml:para>Make text bold; use -Bold:$false to remove bold.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Italic</maml:name>
        <maml:Description>
          <maml:para>Make text italic;  use -Italic:$false to remove italic.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Underline</maml:name>
        <maml:Description>
          <maml:para>Underline the text using the underline style in -UnderlineType;  use -Underline:$false to remove underlining.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>UnderLineType</maml:name>
        <maml:Description>
          <maml:para>Specifies whether underlining should be single or double, normal or accounting mode. The default is "Single".</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelUnderLineType</command:parameterValue>
        <dev:type>
          <maml:name>ExcelUnderLineType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Single</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>StrikeThru</maml:name>
        <maml:Description>
          <maml:para>Strike through text; use -Strikethru:$false to remove Strike through</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>FontShift</maml:name>
        <maml:Description>
          <maml:para>Subscript or Superscript (or none).</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelVerticalAlignmentFont</command:parameterValue>
        <dev:type>
          <maml:name>ExcelVerticalAlignmentFont</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>FontName</maml:name>
        <maml:Description>
          <maml:para>Font to use - Excel defaults to Calibri.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>FontSize</maml:name>
        <maml:Description>
          <maml:para>Point size for the text.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Single</command:parameterValue>
        <dev:type>
          <maml:name>Single</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BackgroundColor</maml:name>
        <maml:Description>
          <maml:para>Change background color.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BackgroundPattern</maml:name>
        <maml:Description>
          <maml:para>Background pattern - Solid by default.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelFillStyle</command:parameterValue>
        <dev:type>
          <maml:name>ExcelFillStyle</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Solid</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="PatternColour">
        <maml:name>PatternColor</maml:name>
        <maml:Description>
          <maml:para>Secondary color for background pattern.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>WrapText</maml:name>
        <maml:Description>
          <maml:para>Turn on Text-Wrapping; use -WrapText:$false to turn off wrapping.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>HorizontalAlignment</maml:name>
        <maml:Description>
          <maml:para>Position cell contents to Left, Right, Center etc. default is 'General'.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelHorizontalAlignment</command:parameterValue>
        <dev:type>
          <maml:name>ExcelHorizontalAlignment</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>VerticalAlignment</maml:name>
        <maml:Description>
          <maml:para>Position cell contents to Top, Bottom or Center.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelVerticalAlignment</command:parameterValue>
        <dev:type>
          <maml:name>ExcelVerticalAlignment</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>TextRotation</maml:name>
        <maml:Description>
          <maml:para>Degrees to rotate text; up to +90 for anti-clockwise ("upwards"), or to -90 for clockwise.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="AutoFit">
        <maml:name>AutoSize</maml:name>
        <maml:Description>
          <maml:para>Autofit cells to width  (columns or ranges only).</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Width</maml:name>
        <maml:Description>
          <maml:para>Set cells to a fixed width (columns or ranges only), ignored if Autosize is specified.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Single</command:parameterValue>
        <dev:type>
          <maml:name>Single</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Height</maml:name>
        <maml:Description>
          <maml:para>Set cells to a fixed height  (rows or ranges only).</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Single</command:parameterValue>
        <dev:type>
          <maml:name>Single</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Hidden</maml:name>
        <maml:Description>
          <maml:para>Hide a row or column  (not a range); use -Hidden:$false to unhide.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Locked</maml:name>
        <maml:Description>
          <maml:para>Locks cells. Cells are locked by default use -locked:$false on the whole sheet and then lock specific ones, and enable protection on the sheet.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Merge</maml:name>
        <maml:Description>
          <maml:para>Merges cells - it is recommended that you explicitly set -HorizontalAlignment</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>PS\&gt; $sheet.Column(3) | Set-ExcelRange -HorizontalAlignment Right -NumberFormat "#,###" -AutoFit</dev:code>
        <dev:remarks>
          <maml:para>Selects column 3 from a sheet object (within a workbook object, which is a child of the ExcelPackage object) and passes it to Set-ExcelRange which formats numbers as a integers with comma-separated groups, aligns it right, and auto-fits the column to the contents.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>PS\&gt; Set-ExcelRange -Range $sheet.Cells["E1:H1048576"]  -HorizontalAlignment Right -NumberFormat "#,###"</dev:code>
        <dev:remarks>
          <maml:para>Instead of piping the address, this version specifies a block of cells and applies similar formatting.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <dev:code>PS\&gt; Set-ExcelRange $excel.Workbook.Worksheets[1].Tables["Processes"] -Italic</dev:code>
        <dev:remarks>
          <maml:para>This time instead of specifying a range of cells, a table is selected by name and formatted as italic.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-ExcelRow</command:name>
      <command:verb>Set</command:verb>
      <command:noun>ExcelRow</command:noun>
      <maml:description>
        <maml:para>Fills values into a [new] row in an Excel spreadsheet, and sets row formats.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Set-ExcelRow accepts either a Worksheet object or an ExcelPackage object returned by Export-Excel and the name of a sheet, and inserts the chosen contents into a row of the sheet.</maml:para>
      <maml:para>The contents can be a constant, like "42", a formula or a script block which is converted into a constant or a formula.</maml:para>
      <maml:para>The first cell of the row can optionally be given a heading.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-ExcelRow</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExcelPackage</maml:name>
          <maml:Description>
            <maml:para>An Excel package object - for example from Export-Excel -PassThru - if specified requires a sheet name to be passed a parameter.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ExcelPackage</command:parameterValue>
          <dev:type>
            <maml:name>ExcelPackage</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Worksheetname</maml:name>
          <maml:Description>
            <maml:para>The name of the sheet to update in the package.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Sheet1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="none">
          <maml:name>Row</maml:name>
          <maml:Description>
            <maml:para>Row to fill right - first row is 1.  0 will be interpreted as first unused row.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>StartColumn</maml:name>
          <maml:Description>
            <maml:para>Position in the row to start from.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Value</maml:name>
          <maml:Description>
            <maml:para>Value, Formula or ScriptBlock to fill in.  A ScriptBlock can use $worksheet,  $row, $Column [number], $ColumnName [letter(s)], $startRow, $startColumn, $endRow, $endColumn.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Heading</maml:name>
          <maml:Description>
            <maml:para>Optional row-heading.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>HeadingBold</maml:name>
          <maml:Description>
            <maml:para>Set the heading in bold type.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>HeadingSize</maml:name>
          <maml:Description>
            <maml:para>Change the font-size of the heading.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="NFormat">
          <maml:name>NumberFormat</maml:name>
          <maml:Description>
            <maml:para>Number format to apply to cells e.g. "dd/MM/yyyy HH:mm", "£#,##0.00;[Red]-£#,##0.00", "0.00%" , "##/##" , "0.0E+0" etc.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BorderAround</maml:name>
          <maml:Description>
            <maml:para>Style of border to draw around the row.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Hair</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dotted</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thin</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thick</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Double</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelBorderStyle</command:parameterValue>
          <dev:type>
            <maml:name>ExcelBorderStyle</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BorderColor</maml:name>
          <maml:Description>
            <maml:para>Color of the border.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::Black</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BorderBottom</maml:name>
          <maml:Description>
            <maml:para>Style for the bottom border.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Hair</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dotted</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thin</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thick</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Double</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelBorderStyle</command:parameterValue>
          <dev:type>
            <maml:name>ExcelBorderStyle</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BorderTop</maml:name>
          <maml:Description>
            <maml:para>Style for the top border.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Hair</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dotted</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thin</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thick</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Double</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelBorderStyle</command:parameterValue>
          <dev:type>
            <maml:name>ExcelBorderStyle</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BorderLeft</maml:name>
          <maml:Description>
            <maml:para>Style for the left border.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Hair</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dotted</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thin</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thick</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Double</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelBorderStyle</command:parameterValue>
          <dev:type>
            <maml:name>ExcelBorderStyle</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BorderRight</maml:name>
          <maml:Description>
            <maml:para>Style for the right border.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Hair</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dotted</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thin</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thick</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Double</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelBorderStyle</command:parameterValue>
          <dev:type>
            <maml:name>ExcelBorderStyle</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FontColor</maml:name>
          <maml:Description>
            <maml:para>Color for the text - if not specified the font will be left as it it is.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Bold</maml:name>
          <maml:Description>
            <maml:para>Make text bold; use -Bold:$false to remove bold.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Italic</maml:name>
          <maml:Description>
            <maml:para>Make text italic;  use -Italic:$false to remove italic.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Underline</maml:name>
          <maml:Description>
            <maml:para>Underline the text using the underline style in -UnderlineType;  use -Underline:$false to remove underlining.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>UnderLineType</maml:name>
          <maml:Description>
            <maml:para>Specifies whether underlining should be single or double, normal or accounting mode. The default is "Single".</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Single</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Double</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SingleAccounting</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DoubleAccounting</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelUnderLineType</command:parameterValue>
          <dev:type>
            <maml:name>ExcelUnderLineType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Single</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>StrikeThru</maml:name>
          <maml:Description>
            <maml:para>Strike through text; use -StrikeThru:$false to remove strike through.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FontShift</maml:name>
          <maml:Description>
            <maml:para>Subscript or Superscript (or none).</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Baseline</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Subscript</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Superscript</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelVerticalAlignmentFont</command:parameterValue>
          <dev:type>
            <maml:name>ExcelVerticalAlignmentFont</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FontName</maml:name>
          <maml:Description>
            <maml:para>Font to use - Excel defaults to Calibri.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FontSize</maml:name>
          <maml:Description>
            <maml:para>Point size for the text.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Single</command:parameterValue>
          <dev:type>
            <maml:name>Single</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Change background color.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BackgroundPattern</maml:name>
          <maml:Description>
            <maml:para>Background pattern - solid by default.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Solid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Gray125</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Gray0625</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkVertical</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkHorizontal</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkDown</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkUp</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkGrid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkTrellis</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightVertical</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightHorizontal</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightDown</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightUp</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightGrid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightTrellis</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelFillStyle</command:parameterValue>
          <dev:type>
            <maml:name>ExcelFillStyle</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Solid</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="PatternColour">
          <maml:name>PatternColor</maml:name>
          <maml:Description>
            <maml:para>Secondary color for background pattern.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>WrapText</maml:name>
          <maml:Description>
            <maml:para>Turn on Text-Wrapping; use -WrapText:$false to turn off wrapping.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>HorizontalAlignment</maml:name>
          <maml:Description>
            <maml:para>Position cell contents to Left, Right, Center etc. default is 'General'.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">General</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Left</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Center</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CenterContinuous</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Right</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Fill</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Distributed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Justify</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelHorizontalAlignment</command:parameterValue>
          <dev:type>
            <maml:name>ExcelHorizontalAlignment</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>VerticalAlignment</maml:name>
          <maml:Description>
            <maml:para>Position cell contents to Top, Bottom or Center.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Top</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Center</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Bottom</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Distributed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Justify</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelVerticalAlignment</command:parameterValue>
          <dev:type>
            <maml:name>ExcelVerticalAlignment</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TextRotation</maml:name>
          <maml:Description>
            <maml:para>Degrees to rotate text. Up to +90 for anti-clockwise ("upwards"), or to -90 for clockwise.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Height</maml:name>
          <maml:Description>
            <maml:para>Set cells to a fixed height.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Single</command:parameterValue>
          <dev:type>
            <maml:name>Single</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Hide</maml:name>
          <maml:Description>
            <maml:para>Hide the row.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ReturnRange</maml:name>
          <maml:Description>
            <maml:para>If sepecified, returns the range of cells which were affected.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PassThru</maml:name>
          <maml:Description>
            <maml:para>If Specified, return a row object to allow further work to be done.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Set-ExcelRow</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Worksheet</maml:name>
          <maml:Description>
            <maml:para>A worksheet object instead of passing a name and package.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">ExcelWorksheet</command:parameterValue>
          <dev:type>
            <maml:name>ExcelWorksheet</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="none">
          <maml:name>Row</maml:name>
          <maml:Description>
            <maml:para>Row to fill right - first row is 1.  0 will be interpreted as first unused row.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>StartColumn</maml:name>
          <maml:Description>
            <maml:para>Position in the row to start from.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Value</maml:name>
          <maml:Description>
            <maml:para>Value, Formula or ScriptBlock to fill in.  A ScriptBlock can use $worksheet,  $row, $Column [number], $ColumnName [letter(s)], $startRow, $startColumn, $endRow, $endColumn.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Heading</maml:name>
          <maml:Description>
            <maml:para>Optional row-heading.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>HeadingBold</maml:name>
          <maml:Description>
            <maml:para>Set the heading in bold type.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>HeadingSize</maml:name>
          <maml:Description>
            <maml:para>Change the font-size of the heading.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="NFormat">
          <maml:name>NumberFormat</maml:name>
          <maml:Description>
            <maml:para>Number format to apply to cells e.g. "dd/MM/yyyy HH:mm", "£#,##0.00;[Red]-£#,##0.00", "0.00%" , "##/##" , "0.0E+0" etc.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BorderAround</maml:name>
          <maml:Description>
            <maml:para>Style of border to draw around the row.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Hair</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dotted</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thin</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thick</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Double</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelBorderStyle</command:parameterValue>
          <dev:type>
            <maml:name>ExcelBorderStyle</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BorderColor</maml:name>
          <maml:Description>
            <maml:para>Color of the border.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Drawing.Color]::Black</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BorderBottom</maml:name>
          <maml:Description>
            <maml:para>Style for the bottom border.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Hair</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dotted</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thin</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thick</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Double</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelBorderStyle</command:parameterValue>
          <dev:type>
            <maml:name>ExcelBorderStyle</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BorderTop</maml:name>
          <maml:Description>
            <maml:para>Style for the top border.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Hair</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dotted</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thin</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thick</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Double</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelBorderStyle</command:parameterValue>
          <dev:type>
            <maml:name>ExcelBorderStyle</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BorderLeft</maml:name>
          <maml:Description>
            <maml:para>Style for the left border.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Hair</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dotted</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thin</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thick</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Double</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelBorderStyle</command:parameterValue>
          <dev:type>
            <maml:name>ExcelBorderStyle</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BorderRight</maml:name>
          <maml:Description>
            <maml:para>Style for the right border.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Hair</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dotted</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thin</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Dashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDotDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumDashDot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thick</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Medium</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Double</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelBorderStyle</command:parameterValue>
          <dev:type>
            <maml:name>ExcelBorderStyle</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FontColor</maml:name>
          <maml:Description>
            <maml:para>Color for the text - if not specified the font will be left as it it is.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Bold</maml:name>
          <maml:Description>
            <maml:para>Make text bold; use -Bold:$false to remove bold.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Italic</maml:name>
          <maml:Description>
            <maml:para>Make text italic;  use -Italic:$false to remove italic.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Underline</maml:name>
          <maml:Description>
            <maml:para>Underline the text using the underline style in -UnderlineType;  use -Underline:$false to remove underlining.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>UnderLineType</maml:name>
          <maml:Description>
            <maml:para>Specifies whether underlining should be single or double, normal or accounting mode. The default is "Single".</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Single</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Double</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SingleAccounting</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DoubleAccounting</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelUnderLineType</command:parameterValue>
          <dev:type>
            <maml:name>ExcelUnderLineType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Single</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>StrikeThru</maml:name>
          <maml:Description>
            <maml:para>Strike through text; use -StrikeThru:$false to remove strike through.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FontShift</maml:name>
          <maml:Description>
            <maml:para>Subscript or Superscript (or none).</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Baseline</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Subscript</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Superscript</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelVerticalAlignmentFont</command:parameterValue>
          <dev:type>
            <maml:name>ExcelVerticalAlignmentFont</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FontName</maml:name>
          <maml:Description>
            <maml:para>Font to use - Excel defaults to Calibri.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FontSize</maml:name>
          <maml:Description>
            <maml:para>Point size for the text.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Single</command:parameterValue>
          <dev:type>
            <maml:name>Single</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BackgroundColor</maml:name>
          <maml:Description>
            <maml:para>Change background color.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BackgroundPattern</maml:name>
          <maml:Description>
            <maml:para>Background pattern - solid by default.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Solid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MediumGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Gray125</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Gray0625</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkVertical</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkHorizontal</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkDown</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkUp</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkGrid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkTrellis</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightVertical</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightHorizontal</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightDown</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightUp</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightGrid</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LightTrellis</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelFillStyle</command:parameterValue>
          <dev:type>
            <maml:name>ExcelFillStyle</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Solid</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="PatternColour">
          <maml:name>PatternColor</maml:name>
          <maml:Description>
            <maml:para>Secondary color for background pattern.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>WrapText</maml:name>
          <maml:Description>
            <maml:para>Turn on Text-Wrapping; use -WrapText:$false to turn off wrapping.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>HorizontalAlignment</maml:name>
          <maml:Description>
            <maml:para>Position cell contents to Left, Right, Center etc. default is 'General'.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">General</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Left</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Center</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CenterContinuous</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Right</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Fill</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Distributed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Justify</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelHorizontalAlignment</command:parameterValue>
          <dev:type>
            <maml:name>ExcelHorizontalAlignment</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>VerticalAlignment</maml:name>
          <maml:Description>
            <maml:para>Position cell contents to Top, Bottom or Center.</maml:para>
          </maml:Description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Top</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Center</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Bottom</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Distributed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Justify</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">ExcelVerticalAlignment</command:parameterValue>
          <dev:type>
            <maml:name>ExcelVerticalAlignment</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TextRotation</maml:name>
          <maml:Description>
            <maml:para>Degrees to rotate text. Up to +90 for anti-clockwise ("upwards"), or to -90 for clockwise.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Height</maml:name>
          <maml:Description>
            <maml:para>Set cells to a fixed height.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Single</command:parameterValue>
          <dev:type>
            <maml:name>Single</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Hide</maml:name>
          <maml:Description>
            <maml:para>Hide the row.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ReturnRange</maml:name>
          <maml:Description>
            <maml:para>If sepecified, returns the range of cells which were affected.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PassThru</maml:name>
          <maml:Description>
            <maml:para>If Specified, return a row object to allow further work to be done.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ExcelPackage</maml:name>
        <maml:Description>
          <maml:para>An Excel package object - for example from Export-Excel -PassThru - if specified requires a sheet name to be passed a parameter.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelPackage</command:parameterValue>
        <dev:type>
          <maml:name>ExcelPackage</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Worksheetname</maml:name>
        <maml:Description>
          <maml:para>The name of the sheet to update in the package.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Sheet1</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Worksheet</maml:name>
        <maml:Description>
          <maml:para>A worksheet object instead of passing a name and package.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelWorksheet</command:parameterValue>
        <dev:type>
          <maml:name>ExcelWorksheet</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="none">
        <maml:name>Row</maml:name>
        <maml:Description>
          <maml:para>Row to fill right - first row is 1.  0 will be interpreted as first unused row.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>StartColumn</maml:name>
        <maml:Description>
          <maml:para>Position in the row to start from.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Value</maml:name>
        <maml:Description>
          <maml:para>Value, Formula or ScriptBlock to fill in.  A ScriptBlock can use $worksheet,  $row, $Column [number], $ColumnName [letter(s)], $startRow, $startColumn, $endRow, $endColumn.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Heading</maml:name>
        <maml:Description>
          <maml:para>Optional row-heading.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>HeadingBold</maml:name>
        <maml:Description>
          <maml:para>Set the heading in bold type.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>HeadingSize</maml:name>
        <maml:Description>
          <maml:para>Change the font-size of the heading.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="NFormat">
        <maml:name>NumberFormat</maml:name>
        <maml:Description>
          <maml:para>Number format to apply to cells e.g. "dd/MM/yyyy HH:mm", "£#,##0.00;[Red]-£#,##0.00", "0.00%" , "##/##" , "0.0E+0" etc.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BorderAround</maml:name>
        <maml:Description>
          <maml:para>Style of border to draw around the row.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelBorderStyle</command:parameterValue>
        <dev:type>
          <maml:name>ExcelBorderStyle</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BorderColor</maml:name>
        <maml:Description>
          <maml:para>Color of the border.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Drawing.Color]::Black</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BorderBottom</maml:name>
        <maml:Description>
          <maml:para>Style for the bottom border.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelBorderStyle</command:parameterValue>
        <dev:type>
          <maml:name>ExcelBorderStyle</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BorderTop</maml:name>
        <maml:Description>
          <maml:para>Style for the top border.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelBorderStyle</command:parameterValue>
        <dev:type>
          <maml:name>ExcelBorderStyle</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BorderLeft</maml:name>
        <maml:Description>
          <maml:para>Style for the left border.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelBorderStyle</command:parameterValue>
        <dev:type>
          <maml:name>ExcelBorderStyle</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BorderRight</maml:name>
        <maml:Description>
          <maml:para>Style for the right border.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelBorderStyle</command:parameterValue>
        <dev:type>
          <maml:name>ExcelBorderStyle</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>FontColor</maml:name>
        <maml:Description>
          <maml:para>Color for the text - if not specified the font will be left as it it is.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Bold</maml:name>
        <maml:Description>
          <maml:para>Make text bold; use -Bold:$false to remove bold.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Italic</maml:name>
        <maml:Description>
          <maml:para>Make text italic;  use -Italic:$false to remove italic.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Underline</maml:name>
        <maml:Description>
          <maml:para>Underline the text using the underline style in -UnderlineType;  use -Underline:$false to remove underlining.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>UnderLineType</maml:name>
        <maml:Description>
          <maml:para>Specifies whether underlining should be single or double, normal or accounting mode. The default is "Single".</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelUnderLineType</command:parameterValue>
        <dev:type>
          <maml:name>ExcelUnderLineType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Single</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>StrikeThru</maml:name>
        <maml:Description>
          <maml:para>Strike through text; use -StrikeThru:$false to remove strike through.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>FontShift</maml:name>
        <maml:Description>
          <maml:para>Subscript or Superscript (or none).</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelVerticalAlignmentFont</command:parameterValue>
        <dev:type>
          <maml:name>ExcelVerticalAlignmentFont</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>FontName</maml:name>
        <maml:Description>
          <maml:para>Font to use - Excel defaults to Calibri.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>FontSize</maml:name>
        <maml:Description>
          <maml:para>Point size for the text.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Single</command:parameterValue>
        <dev:type>
          <maml:name>Single</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BackgroundColor</maml:name>
        <maml:Description>
          <maml:para>Change background color.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BackgroundPattern</maml:name>
        <maml:Description>
          <maml:para>Background pattern - solid by default.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelFillStyle</command:parameterValue>
        <dev:type>
          <maml:name>ExcelFillStyle</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Solid</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="PatternColour">
        <maml:name>PatternColor</maml:name>
        <maml:Description>
          <maml:para>Secondary color for background pattern.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>WrapText</maml:name>
        <maml:Description>
          <maml:para>Turn on Text-Wrapping; use -WrapText:$false to turn off wrapping.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>HorizontalAlignment</maml:name>
        <maml:Description>
          <maml:para>Position cell contents to Left, Right, Center etc. default is 'General'.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelHorizontalAlignment</command:parameterValue>
        <dev:type>
          <maml:name>ExcelHorizontalAlignment</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>VerticalAlignment</maml:name>
        <maml:Description>
          <maml:para>Position cell contents to Top, Bottom or Center.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">ExcelVerticalAlignment</command:parameterValue>
        <dev:type>
          <maml:name>ExcelVerticalAlignment</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>TextRotation</maml:name>
        <maml:Description>
          <maml:para>Degrees to rotate text. Up to +90 for anti-clockwise ("upwards"), or to -90 for clockwise.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Height</maml:name>
        <maml:Description>
          <maml:para>Set cells to a fixed height.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Single</command:parameterValue>
        <dev:type>
          <maml:name>Single</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Hide</maml:name>
        <maml:Description>
          <maml:para>Hide the row.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ReturnRange</maml:name>
        <maml:Description>
          <maml:para>If sepecified, returns the range of cells which were affected.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PassThru</maml:name>
        <maml:Description>
          <maml:para>If Specified, return a row object to allow further work to be done.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>OfficeOpenXml.ExcelRow</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>System.String</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>PS\&gt; Set-ExcelRow -Worksheet $ws -Heading Total -Value {"=sum($columnName`2:$columnName$endrow)" }</dev:code>
        <dev:remarks>
          <maml:para>$Ws contains a worksheet object, and no Row number is specified so Set-ExcelRow will select the next row after the end of the data in the sheet.</maml:para>
          <maml:para>The first cell in the row will contain "Total", and each of the other cells will contain =Sum(xx2:xx99)  where xx is the column name, and 99 is the last row of data.</maml:para>
          <maml:para>Note the use of the backtick in the script block (`2) to Prevent 2 becoming part of the variable "ColumnName"</maml:para>
          <maml:para>The script block can use $Worksheet, $Row, $Column (number), $ColumnName (letter), $StartRow/Column and $EndRow/Column.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>PS\&gt; Set-ExcelRow -Worksheet $ws -Heading Total -HeadingBold -Value {"=sum($columnName`2:$columnName$endrow)" } -NumberFormat 'Currency' -StartColumn 2 -Bold -BorderTop Double -BorderBottom Thin</dev:code>
        <dev:remarks>
          <maml:para>This builds on the previous example, but this time the label "Total" appears in column 2 and the formula fills from column 3 onwards.</maml:para>
          <maml:para>The formula and heading are set in bold face, and the formula is formatted for the local currency, and given a double line border above and single line border below.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Update-FirstObjectProperties</command:name>
      <command:verb>Update</command:verb>
      <command:noun>FirstObjectProperties</command:noun>
      <maml:description>
        <maml:para>Updates the first object to contain all the properties of the object with the most properties in the array.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Updates the first object to contain all the properties found anywhere in the array.</maml:para>
      <maml:para>This is usefull when not all objects have the same quantity of properties and CmdLets like Out-GridView or Export-Excel are not able to show all the properties because the first object doesn't have them all.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Update-FirstObjectProperties</maml:name>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters />
    <command:inputTypes />
    <command:returnValues />
    <maml:alertSet>
      <maml:alert>
        <maml:para>CHANGELOG 2017/06/08 Function born</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>PS\&gt; $Array = @()
PS\&gt; $Obj1  = [PSCustomObject]@{
    Member1 = 'First'
    Member2 = 'Second'
}
PS\&gt; $Obj2  = [PSCustomObject]@{
    Member1 = 'First'
    Member2 = 'Second'
    Member3 = 'Third'
}
PS\&gt; $Obj3  = [PSCustomObject]@{
    Member1 = 'First'
    Member2 = 'Second'
    Member3 = 'Third'
    Member4 = 'Fourth'
}
PS\&gt; $Array = $Obj1, $Obj2, $Obj3
PS\&gt; $Array | Out-GridView -Title 'Not showing Member3 and Member4'
PS\&gt; $Array | Update-FirstObjectProperties | Out-GridView -Title 'All properties are visible'</dev:code>
        <dev:remarks>
          <maml:para>Updates the first object of the array by adding Member3 and Member4 and shows before and after in gridviews</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>PS\&gt;$ExcelParams = @{
       Path      = $env:TEMP + '\Excel.xlsx'
       Show      = $true
       Verbose   = $true
}
PS\&gt; Remove-Item -Path $ExcelParams.Path -Force -EA Ignore
PS\&gt; $Array = @()
PS\&gt; $Obj1  = [PSCustomObjectable@{
    Member1 = 'First'
    Member2 = 'Second'
}
PS\&gt; $Obj2  = [PSCustomObject]@{
    Member1 = 'First'
    Member2 = 'Second'
    Member3 = 'Third'
}
PS\&gt; $Obj3  = [PSCustomObject]@{
    Member1 = 'First'
    Member2 = 'Second'
    Member3 = 'Third'
    Member4 = 'Fourth'
}
PS\&gt; $Array = $Obj1, $Obj2, $Obj3
PS\&gt; $Array | Out-GridView -Title 'Not showing Member3 and Member4'
PS\&gt; $Array | Update-FirstObjectProperties | Export-Excel @ExcelParams -WorkSheetname Numbers</dev:code>
        <dev:remarks>
          <maml:para>Updates the first object of the array by adding property 'Member3' and 'Member4'. Afterwards, all objects are exported to an Excel file and all column headers are visible.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>https://github.com/dfinke/ImportExcel</maml:linkText>
        <maml:uri>https://github.com/dfinke/ImportExcel</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
</helpItems>